// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ItemsInitParameters struct {

	// (String) The description of the list.
	// The description of the list item, if present
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The value of the item in a list.
	// The value of the item in a list.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ItemsObservation struct {

	// (String)
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The description of the list.
	// The description of the list item, if present
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The value of the item in a list.
	// The value of the item in a list.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ItemsParameters struct {

	// (String) The description of the list.
	// The description of the list item, if present
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The value of the item in a list.
	// The value of the item in a list.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TrustListInitParameters struct {

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The description of the list.
	// The description of the list.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) The items in the list. (see below for nested schema)
	Items []ItemsInitParameters `json:"items,omitempty" tf:"items,omitempty"`

	// (String) The type of list.
	// The type of list.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TrustListObservation struct {

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String)
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The description of the list.
	// The description of the list.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) API Resource UUID tag.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Attributes List) The items in the list. (see below for nested schema)
	Items []ItemsObservation `json:"items,omitempty" tf:"items,omitempty"`

	// (Number) The number of items in the list.
	// The number of items in the list.
	ListCount *float64 `json:"listCount,omitempty" tf:"list_count,omitempty"`

	// (String) The type of list.
	// The type of list.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type TrustListParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The description of the list.
	// The description of the list.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) The items in the list. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Items []ItemsParameters `json:"items,omitempty" tf:"items,omitempty"`

	// (String) The type of list.
	// The type of list.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// TrustListSpec defines the desired state of TrustList
type TrustListSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrustListParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TrustListInitParameters `json:"initProvider,omitempty"`
}

// TrustListStatus defines the observed state of TrustList.
type TrustListStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrustListObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TrustList is the Schema for the TrustLists API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type TrustList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.items) || (has(self.initProvider) && has(self.initProvider.items))",message="spec.forProvider.items is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   TrustListSpec   `json:"spec"`
	Status TrustListStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrustListList contains a list of TrustLists
type TrustListList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrustList `json:"items"`
}

// Repository type metadata.
var (
	TrustList_Kind             = "TrustList"
	TrustList_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrustList_Kind}.String()
	TrustList_KindAPIVersion   = TrustList_Kind + "." + CRDGroupVersion.String()
	TrustList_GroupVersionKind = CRDGroupVersion.WithKind(TrustList_Kind)
)

func init() {
	SchemeBuilder.Register(&TrustList{}, &TrustListList{})
}
