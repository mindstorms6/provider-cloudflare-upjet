// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActivityLogInitParameters struct {

	// (Boolean) Enable activity logging.
	// Enable activity logging.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ActivityLogObservation struct {

	// (Boolean) Enable activity logging.
	// Enable activity logging.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ActivityLogParameters struct {

	// (Boolean) Enable activity logging.
	// Enable activity logging.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type AntivirusInitParameters struct {

	// virus scanning on downloads.
	// Enable anti-virus scanning on downloads.
	EnabledDownloadPhase *bool `json:"enabledDownloadPhase,omitempty" tf:"enabled_download_phase,omitempty"`

	// virus scanning on uploads.
	// Enable anti-virus scanning on uploads.
	EnabledUploadPhase *bool `json:"enabledUploadPhase,omitempty" tf:"enabled_upload_phase,omitempty"`

	// (Boolean) Block requests for files that cannot be scanned.
	// Block requests for files that cannot be scanned.
	FailClosed *bool `json:"failClosed,omitempty" tf:"fail_closed,omitempty"`

	// (Attributes) Configure a message to display on the user's device when an antivirus search is performed. (see below for nested schema)
	NotificationSettings *AntivirusNotificationSettingsInitParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`
}

type AntivirusNotificationSettingsInitParameters struct {

	// (Boolean) Enable activity logging.
	// Set notification on
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Customize the message shown in the notification.
	// Customize the message shown in the notification.
	Msg *string `json:"msg,omitempty" tf:"msg,omitempty"`

	// (String) Optional URL to direct users to additional information. If not set, the notification will open a block page.
	// Optional URL to direct users to additional information. If not set, the notification will open a block page.
	SupportURL *string `json:"supportUrl,omitempty" tf:"support_url,omitempty"`
}

type AntivirusNotificationSettingsObservation struct {

	// (Boolean) Enable activity logging.
	// Set notification on
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Customize the message shown in the notification.
	// Customize the message shown in the notification.
	Msg *string `json:"msg,omitempty" tf:"msg,omitempty"`

	// (String) Optional URL to direct users to additional information. If not set, the notification will open a block page.
	// Optional URL to direct users to additional information. If not set, the notification will open a block page.
	SupportURL *string `json:"supportUrl,omitempty" tf:"support_url,omitempty"`
}

type AntivirusNotificationSettingsParameters struct {

	// (Boolean) Enable activity logging.
	// Set notification on
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Customize the message shown in the notification.
	// Customize the message shown in the notification.
	// +kubebuilder:validation:Optional
	Msg *string `json:"msg,omitempty" tf:"msg,omitempty"`

	// (String) Optional URL to direct users to additional information. If not set, the notification will open a block page.
	// Optional URL to direct users to additional information. If not set, the notification will open a block page.
	// +kubebuilder:validation:Optional
	SupportURL *string `json:"supportUrl,omitempty" tf:"support_url,omitempty"`
}

type AntivirusObservation struct {

	// virus scanning on downloads.
	// Enable anti-virus scanning on downloads.
	EnabledDownloadPhase *bool `json:"enabledDownloadPhase,omitempty" tf:"enabled_download_phase,omitempty"`

	// virus scanning on uploads.
	// Enable anti-virus scanning on uploads.
	EnabledUploadPhase *bool `json:"enabledUploadPhase,omitempty" tf:"enabled_upload_phase,omitempty"`

	// (Boolean) Block requests for files that cannot be scanned.
	// Block requests for files that cannot be scanned.
	FailClosed *bool `json:"failClosed,omitempty" tf:"fail_closed,omitempty"`

	// (Attributes) Configure a message to display on the user's device when an antivirus search is performed. (see below for nested schema)
	NotificationSettings *AntivirusNotificationSettingsObservation `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`
}

type AntivirusParameters struct {

	// virus scanning on downloads.
	// Enable anti-virus scanning on downloads.
	// +kubebuilder:validation:Optional
	EnabledDownloadPhase *bool `json:"enabledDownloadPhase,omitempty" tf:"enabled_download_phase,omitempty"`

	// virus scanning on uploads.
	// Enable anti-virus scanning on uploads.
	// +kubebuilder:validation:Optional
	EnabledUploadPhase *bool `json:"enabledUploadPhase,omitempty" tf:"enabled_upload_phase,omitempty"`

	// (Boolean) Block requests for files that cannot be scanned.
	// Block requests for files that cannot be scanned.
	// +kubebuilder:validation:Optional
	FailClosed *bool `json:"failClosed,omitempty" tf:"fail_closed,omitempty"`

	// (Attributes) Configure a message to display on the user's device when an antivirus search is performed. (see below for nested schema)
	// +kubebuilder:validation:Optional
	NotificationSettings *AntivirusNotificationSettingsParameters `json:"notificationSettings,omitempty" tf:"notification_settings,omitempty"`
}

type BlockPageInitParameters struct {

	// (String) Block page background color in #rrggbb format.
	// Block page background color in #rrggbb format.
	BackgroundColor *string `json:"backgroundColor,omitempty" tf:"background_color,omitempty"`

	// (Boolean) Enable activity logging.
	// Enable only cipher suites and TLS versions compliant with FIPS 140-2.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Block page footer text.
	// Block page footer text.
	FooterText *string `json:"footerText,omitempty" tf:"footer_text,omitempty"`

	// (String) Block page header text.
	// Block page header text.
	HeaderText *string `json:"headerText,omitempty" tf:"header_text,omitempty"`

	// (String) Full URL to the logo file.
	// Full URL to the logo file.
	LogoPath *string `json:"logoPath,omitempty" tf:"logo_path,omitempty"`

	// (String) Admin email for users to contact.
	// Admin email for users to contact.
	MailtoAddress *string `json:"mailtoAddress,omitempty" tf:"mailto_address,omitempty"`

	// (String) Subject line for emails created from block page.
	// Subject line for emails created from block page.
	MailtoSubject *string `json:"mailtoSubject,omitempty" tf:"mailto_subject,omitempty"`

	// (String) Block page title.
	// Block page title.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) Suppress detailed info at the bottom of the block page.
	// Suppress detailed info at the bottom of the block page.
	SuppressFooter *bool `json:"suppressFooter,omitempty" tf:"suppress_footer,omitempty"`
}

type BlockPageObservation struct {

	// (String) Block page background color in #rrggbb format.
	// Block page background color in #rrggbb format.
	BackgroundColor *string `json:"backgroundColor,omitempty" tf:"background_color,omitempty"`

	// (Boolean) Enable activity logging.
	// Enable only cipher suites and TLS versions compliant with FIPS 140-2.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Block page footer text.
	// Block page footer text.
	FooterText *string `json:"footerText,omitempty" tf:"footer_text,omitempty"`

	// (String) Block page header text.
	// Block page header text.
	HeaderText *string `json:"headerText,omitempty" tf:"header_text,omitempty"`

	// (String) Full URL to the logo file.
	// Full URL to the logo file.
	LogoPath *string `json:"logoPath,omitempty" tf:"logo_path,omitempty"`

	// (String) Admin email for users to contact.
	// Admin email for users to contact.
	MailtoAddress *string `json:"mailtoAddress,omitempty" tf:"mailto_address,omitempty"`

	// (String) Subject line for emails created from block page.
	// Subject line for emails created from block page.
	MailtoSubject *string `json:"mailtoSubject,omitempty" tf:"mailto_subject,omitempty"`

	// (String) Block page title.
	// Block page title.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) Suppress detailed info at the bottom of the block page.
	// Suppress detailed info at the bottom of the block page.
	SuppressFooter *bool `json:"suppressFooter,omitempty" tf:"suppress_footer,omitempty"`
}

type BlockPageParameters struct {

	// (String) Block page background color in #rrggbb format.
	// Block page background color in #rrggbb format.
	// +kubebuilder:validation:Optional
	BackgroundColor *string `json:"backgroundColor,omitempty" tf:"background_color,omitempty"`

	// (Boolean) Enable activity logging.
	// Enable only cipher suites and TLS versions compliant with FIPS 140-2.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Block page footer text.
	// Block page footer text.
	// +kubebuilder:validation:Optional
	FooterText *string `json:"footerText,omitempty" tf:"footer_text,omitempty"`

	// (String) Block page header text.
	// Block page header text.
	// +kubebuilder:validation:Optional
	HeaderText *string `json:"headerText,omitempty" tf:"header_text,omitempty"`

	// (String) Full URL to the logo file.
	// Full URL to the logo file.
	// +kubebuilder:validation:Optional
	LogoPath *string `json:"logoPath,omitempty" tf:"logo_path,omitempty"`

	// (String) Admin email for users to contact.
	// Admin email for users to contact.
	// +kubebuilder:validation:Optional
	MailtoAddress *string `json:"mailtoAddress,omitempty" tf:"mailto_address,omitempty"`

	// (String) Subject line for emails created from block page.
	// Subject line for emails created from block page.
	// +kubebuilder:validation:Optional
	MailtoSubject *string `json:"mailtoSubject,omitempty" tf:"mailto_subject,omitempty"`

	// (String) Block page title.
	// Block page title.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) Suppress detailed info at the bottom of the block page.
	// Suppress detailed info at the bottom of the block page.
	// +kubebuilder:validation:Optional
	SuppressFooter *bool `json:"suppressFooter,omitempty" tf:"suppress_footer,omitempty"`
}

type BodyScanningInitParameters struct {

	// (String) Set the inspection mode to either deep or shallow.
	// Set the inspection mode to either `deep` or `shallow`.
	InspectionMode *string `json:"inspectionMode,omitempty" tf:"inspection_mode,omitempty"`
}

type BodyScanningObservation struct {

	// (String) Set the inspection mode to either deep or shallow.
	// Set the inspection mode to either `deep` or `shallow`.
	InspectionMode *string `json:"inspectionMode,omitempty" tf:"inspection_mode,omitempty"`
}

type BodyScanningParameters struct {

	// (String) Set the inspection mode to either deep or shallow.
	// Set the inspection mode to either `deep` or `shallow`.
	// +kubebuilder:validation:Optional
	InspectionMode *string `json:"inspectionMode,omitempty" tf:"inspection_mode,omitempty"`
}

type BrowserIsolationInitParameters struct {

	// identity onramp support for Browser Isolation.
	// Enable non-identity onramp support for Browser Isolation.
	NonIdentityEnabled *bool `json:"nonIdentityEnabled,omitempty" tf:"non_identity_enabled,omitempty"`

	// (Boolean) Enable Clientless Browser Isolation.
	// Enable Clientless Browser Isolation.
	URLBrowserIsolationEnabled *bool `json:"urlBrowserIsolationEnabled,omitempty" tf:"url_browser_isolation_enabled,omitempty"`
}

type BrowserIsolationObservation struct {

	// identity onramp support for Browser Isolation.
	// Enable non-identity onramp support for Browser Isolation.
	NonIdentityEnabled *bool `json:"nonIdentityEnabled,omitempty" tf:"non_identity_enabled,omitempty"`

	// (Boolean) Enable Clientless Browser Isolation.
	// Enable Clientless Browser Isolation.
	URLBrowserIsolationEnabled *bool `json:"urlBrowserIsolationEnabled,omitempty" tf:"url_browser_isolation_enabled,omitempty"`
}

type BrowserIsolationParameters struct {

	// identity onramp support for Browser Isolation.
	// Enable non-identity onramp support for Browser Isolation.
	// +kubebuilder:validation:Optional
	NonIdentityEnabled *bool `json:"nonIdentityEnabled,omitempty" tf:"non_identity_enabled,omitempty"`

	// (Boolean) Enable Clientless Browser Isolation.
	// Enable Clientless Browser Isolation.
	// +kubebuilder:validation:Optional
	URLBrowserIsolationEnabled *bool `json:"urlBrowserIsolationEnabled,omitempty" tf:"url_browser_isolation_enabled,omitempty"`
}

type CustomCertificateInitParameters struct {

	// (Boolean) Enable activity logging.
	// Enable use of custom certificate authority for signing Gateway traffic.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	// UUID of certificate (ID from MTLS certificate store).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type CustomCertificateObservation struct {

	// (String) Certificate status (internal).
	// Certificate status (internal).
	BindingStatus *string `json:"bindingStatus,omitempty" tf:"binding_status,omitempty"`

	// (Boolean) Enable activity logging.
	// Enable use of custom certificate authority for signing Gateway traffic.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	// UUID of certificate (ID from MTLS certificate store).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type CustomCertificateParameters struct {

	// (Boolean) Enable activity logging.
	// Enable use of custom certificate authority for signing Gateway traffic.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	// UUID of certificate (ID from MTLS certificate store).
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ExtendedEmailMatchingInitParameters struct {

	// (Boolean) Enable activity logging.
	// Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ExtendedEmailMatchingObservation struct {

	// (Boolean) Enable activity logging.
	// Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ExtendedEmailMatchingParameters struct {

	// (Boolean) Enable activity logging.
	// Enable matching all variants of user emails (with + or . modifiers) used as criteria in Firewall policies.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type FipsInitParameters struct {

	// 2.
	// Enable only cipher suites and TLS versions compliant with FIPS 140-2.
	TLS *bool `json:"tls,omitempty" tf:"tls,omitempty"`
}

type FipsObservation struct {

	// 2.
	// Enable only cipher suites and TLS versions compliant with FIPS 140-2.
	TLS *bool `json:"tls,omitempty" tf:"tls,omitempty"`
}

type FipsParameters struct {

	// 2.
	// Enable only cipher suites and TLS versions compliant with FIPS 140-2.
	// +kubebuilder:validation:Optional
	TLS *bool `json:"tls,omitempty" tf:"tls,omitempty"`
}

type ProtocolDetectionInitParameters struct {

	// (Boolean) Enable activity logging.
	// Enable detecting protocol on initial bytes of client traffic.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ProtocolDetectionObservation struct {

	// (Boolean) Enable activity logging.
	// Enable detecting protocol on initial bytes of client traffic.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ProtocolDetectionParameters struct {

	// (Boolean) Enable activity logging.
	// Enable detecting protocol on initial bytes of client traffic.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SandboxInitParameters struct {

	// (Boolean) Enable activity logging.
	// Enable sandbox.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Action to take when the file cannot be scanned.
	// Action to take when the file cannot be scanned.
	FallbackAction *string `json:"fallbackAction,omitempty" tf:"fallback_action,omitempty"`
}

type SandboxObservation struct {

	// (Boolean) Enable activity logging.
	// Enable sandbox.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Action to take when the file cannot be scanned.
	// Action to take when the file cannot be scanned.
	FallbackAction *string `json:"fallbackAction,omitempty" tf:"fallback_action,omitempty"`
}

type SandboxParameters struct {

	// (Boolean) Enable activity logging.
	// Enable sandbox.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Action to take when the file cannot be scanned.
	// Action to take when the file cannot be scanned.
	// +kubebuilder:validation:Optional
	FallbackAction *string `json:"fallbackAction,omitempty" tf:"fallback_action,omitempty"`
}

type SettingsCertificateInitParameters struct {

	// (String) The ID of this resource.
	// UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SettingsCertificateObservation struct {

	// (String) The ID of this resource.
	// UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SettingsCertificateParameters struct {

	// (String) The ID of this resource.
	// UUID of certificate to be used for interception. Certificate must be available (previously called 'active') on the edge. A nil UUID will indicate the Cloudflare Root CA should be used.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type TLSDecryptInitParameters struct {

	// (Boolean) Enable activity logging.
	// Enable inspecting encrypted HTTP traffic.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type TLSDecryptObservation struct {

	// (Boolean) Enable activity logging.
	// Enable inspecting encrypted HTTP traffic.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type TLSDecryptParameters struct {

	// (Boolean) Enable activity logging.
	// Enable inspecting encrypted HTTP traffic.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type TrustGatewaySettingsInitParameters struct {

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Attributes) Account settings (see below for nested schema)
	Settings *TrustGatewaySettingsSettingsInitParameters `json:"settings,omitempty" tf:"settings,omitempty"`
}

type TrustGatewaySettingsObservation struct {

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String)
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Attributes) Account settings (see below for nested schema)
	Settings *TrustGatewaySettingsSettingsObservation `json:"settings,omitempty" tf:"settings,omitempty"`

	// (String)
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type TrustGatewaySettingsParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Attributes) Account settings (see below for nested schema)
	// +kubebuilder:validation:Optional
	Settings *TrustGatewaySettingsSettingsParameters `json:"settings,omitempty" tf:"settings,omitempty"`
}

type TrustGatewaySettingsSettingsInitParameters struct {

	// (Attributes) Activity log settings. (see below for nested schema)
	ActivityLog *ActivityLogInitParameters `json:"activityLog,omitempty" tf:"activity_log,omitempty"`

	// virus settings. (see below for nested schema)
	Antivirus *AntivirusInitParameters `json:"antivirus,omitempty" tf:"antivirus,omitempty"`

	// (Attributes) Block page layout settings. (see below for nested schema)
	BlockPage *BlockPageInitParameters `json:"blockPage,omitempty" tf:"block_page,omitempty"`

	// (Attributes) DLP body scanning settings. (see below for nested schema)
	BodyScanning *BodyScanningInitParameters `json:"bodyScanning,omitempty" tf:"body_scanning,omitempty"`

	// (Attributes) Browser isolation settings. (see below for nested schema)
	BrowserIsolation *BrowserIsolationInitParameters `json:"browserIsolation,omitempty" tf:"browser_isolation,omitempty"`

	// (Attributes) Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used. (see below for nested schema)
	Certificate *SettingsCertificateInitParameters `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// PKI. (deprecated and replaced by certificate) (see below for nested schema)
	CustomCertificate *CustomCertificateInitParameters `json:"customCertificate,omitempty" tf:"custom_certificate,omitempty"`

	// mail matching settings. (see below for nested schema)
	ExtendedEmailMatching *ExtendedEmailMatchingInitParameters `json:"extendedEmailMatching,omitempty" tf:"extended_email_matching,omitempty"`

	// (Attributes) FIPS settings. (see below for nested schema)
	Fips *FipsInitParameters `json:"fips,omitempty" tf:"fips,omitempty"`

	// (Attributes) Protocol Detection settings. (see below for nested schema)
	ProtocolDetection *ProtocolDetectionInitParameters `json:"protocolDetection,omitempty" tf:"protocol_detection,omitempty"`

	// (Attributes) Sandbox settings. (see below for nested schema)
	Sandbox *SandboxInitParameters `json:"sandbox,omitempty" tf:"sandbox,omitempty"`

	// (Attributes) TLS interception settings. (see below for nested schema)
	TLSDecrypt *TLSDecryptInitParameters `json:"tlsDecrypt,omitempty" tf:"tls_decrypt,omitempty"`
}

type TrustGatewaySettingsSettingsObservation struct {

	// (Attributes) Activity log settings. (see below for nested schema)
	ActivityLog *ActivityLogObservation `json:"activityLog,omitempty" tf:"activity_log,omitempty"`

	// virus settings. (see below for nested schema)
	Antivirus *AntivirusObservation `json:"antivirus,omitempty" tf:"antivirus,omitempty"`

	// (Attributes) Block page layout settings. (see below for nested schema)
	BlockPage *BlockPageObservation `json:"blockPage,omitempty" tf:"block_page,omitempty"`

	// (Attributes) DLP body scanning settings. (see below for nested schema)
	BodyScanning *BodyScanningObservation `json:"bodyScanning,omitempty" tf:"body_scanning,omitempty"`

	// (Attributes) Browser isolation settings. (see below for nested schema)
	BrowserIsolation *BrowserIsolationObservation `json:"browserIsolation,omitempty" tf:"browser_isolation,omitempty"`

	// (Attributes) Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used. (see below for nested schema)
	Certificate *SettingsCertificateObservation `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// PKI. (deprecated and replaced by certificate) (see below for nested schema)
	CustomCertificate *CustomCertificateObservation `json:"customCertificate,omitempty" tf:"custom_certificate,omitempty"`

	// mail matching settings. (see below for nested schema)
	ExtendedEmailMatching *ExtendedEmailMatchingObservation `json:"extendedEmailMatching,omitempty" tf:"extended_email_matching,omitempty"`

	// (Attributes) FIPS settings. (see below for nested schema)
	Fips *FipsObservation `json:"fips,omitempty" tf:"fips,omitempty"`

	// (Attributes) Protocol Detection settings. (see below for nested schema)
	ProtocolDetection *ProtocolDetectionObservation `json:"protocolDetection,omitempty" tf:"protocol_detection,omitempty"`

	// (Attributes) Sandbox settings. (see below for nested schema)
	Sandbox *SandboxObservation `json:"sandbox,omitempty" tf:"sandbox,omitempty"`

	// (Attributes) TLS interception settings. (see below for nested schema)
	TLSDecrypt *TLSDecryptObservation `json:"tlsDecrypt,omitempty" tf:"tls_decrypt,omitempty"`
}

type TrustGatewaySettingsSettingsParameters struct {

	// (Attributes) Activity log settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ActivityLog *ActivityLogParameters `json:"activityLog,omitempty" tf:"activity_log,omitempty"`

	// virus settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Antivirus *AntivirusParameters `json:"antivirus,omitempty" tf:"antivirus,omitempty"`

	// (Attributes) Block page layout settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	BlockPage *BlockPageParameters `json:"blockPage,omitempty" tf:"block_page,omitempty"`

	// (Attributes) DLP body scanning settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	BodyScanning *BodyScanningParameters `json:"bodyScanning,omitempty" tf:"body_scanning,omitempty"`

	// (Attributes) Browser isolation settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	BrowserIsolation *BrowserIsolationParameters `json:"browserIsolation,omitempty" tf:"browser_isolation,omitempty"`

	// (Attributes) Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Certificate *SettingsCertificateParameters `json:"certificate" tf:"certificate,omitempty"`

	// PKI. (deprecated and replaced by certificate) (see below for nested schema)
	// +kubebuilder:validation:Optional
	CustomCertificate *CustomCertificateParameters `json:"customCertificate" tf:"custom_certificate,omitempty"`

	// mail matching settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ExtendedEmailMatching *ExtendedEmailMatchingParameters `json:"extendedEmailMatching,omitempty" tf:"extended_email_matching,omitempty"`

	// (Attributes) FIPS settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Fips *FipsParameters `json:"fips,omitempty" tf:"fips,omitempty"`

	// (Attributes) Protocol Detection settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ProtocolDetection *ProtocolDetectionParameters `json:"protocolDetection,omitempty" tf:"protocol_detection,omitempty"`

	// (Attributes) Sandbox settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Sandbox *SandboxParameters `json:"sandbox,omitempty" tf:"sandbox,omitempty"`

	// (Attributes) TLS interception settings. (see below for nested schema)
	// +kubebuilder:validation:Optional
	TLSDecrypt *TLSDecryptParameters `json:"tlsDecrypt,omitempty" tf:"tls_decrypt,omitempty"`
}

// TrustGatewaySettingsSpec defines the desired state of TrustGatewaySettings
type TrustGatewaySettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrustGatewaySettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TrustGatewaySettingsInitParameters `json:"initProvider,omitempty"`
}

// TrustGatewaySettingsStatus defines the observed state of TrustGatewaySettings.
type TrustGatewaySettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrustGatewaySettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TrustGatewaySettings is the Schema for the TrustGatewaySettingss API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type TrustGatewaySettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	Spec   TrustGatewaySettingsSpec   `json:"spec"`
	Status TrustGatewaySettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrustGatewaySettingsList contains a list of TrustGatewaySettingss
type TrustGatewaySettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrustGatewaySettings `json:"items"`
}

// Repository type metadata.
var (
	TrustGatewaySettings_Kind             = "TrustGatewaySettings"
	TrustGatewaySettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrustGatewaySettings_Kind}.String()
	TrustGatewaySettings_KindAPIVersion   = TrustGatewaySettings_Kind + "." + CRDGroupVersion.String()
	TrustGatewaySettings_GroupVersionKind = CRDGroupVersion.WithKind(TrustGatewaySettings_Kind)
)

func init() {
	SchemeBuilder.Register(&TrustGatewaySettings{}, &TrustGatewaySettingsList{})
}
