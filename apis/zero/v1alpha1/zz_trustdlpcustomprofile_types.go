// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ContextAwarenessInitParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
	Skip *SkipInitParameters `json:"skip,omitempty" tf:"skip,omitempty"`
}

type ContextAwarenessObservation struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
	Skip *SkipObservation `json:"skip,omitempty" tf:"skip,omitempty"`
}

type ContextAwarenessParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Skip *SkipParameters `json:"skip" tf:"skip,omitempty"`
}

type ContextAwarenessSkipInitParameters struct {

	// (Boolean) If the content type is a file, skip context analysis and return all matches.
	// If the content type is a file, skip context analysis and return all matches.
	Files *bool `json:"files,omitempty" tf:"files,omitempty"`
}

type ContextAwarenessSkipObservation struct {

	// (Boolean) If the content type is a file, skip context analysis and return all matches.
	// If the content type is a file, skip context analysis and return all matches.
	Files *bool `json:"files,omitempty" tf:"files,omitempty"`
}

type ContextAwarenessSkipParameters struct {

	// (Boolean) If the content type is a file, skip context analysis and return all matches.
	// If the content type is a file, skip context analysis and return all matches.
	// +kubebuilder:validation:Optional
	Files *bool `json:"files" tf:"files,omitempty"`
}

type EntriesInitParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Attributes) (see below for nested schema)
	Pattern *PatternInitParameters `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (List of String)
	Words []*string `json:"words,omitempty" tf:"words,omitempty"`
}

type EntriesObservation struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Attributes) (see below for nested schema)
	Pattern *PatternObservation `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (List of String)
	Words []*string `json:"words,omitempty" tf:"words,omitempty"`
}

type EntriesParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Pattern *PatternParameters `json:"pattern" tf:"pattern,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	Words []*string `json:"words,omitempty" tf:"words,omitempty"`
}

type EntriesPatternInitParameters struct {

	// (String)
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// (String)
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

type EntriesPatternObservation struct {

	// (String)
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// (String)
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

type EntriesPatternParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex" tf:"regex,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

type PatternInitParameters struct {

	// (String)
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// (String)
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

type PatternObservation struct {

	// (String)
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`

	// (String)
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

type PatternParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	Regex *string `json:"regex" tf:"regex,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

type ProfilesContextAwarenessInitParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
	Skip *ContextAwarenessSkipInitParameters `json:"skip,omitempty" tf:"skip,omitempty"`
}

type ProfilesContextAwarenessObservation struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
	Skip *ContextAwarenessSkipObservation `json:"skip,omitempty" tf:"skip,omitempty"`
}

type ProfilesContextAwarenessParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Skip *ContextAwarenessSkipParameters `json:"skip" tf:"skip,omitempty"`
}

type ProfilesEntriesInitParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Attributes) (see below for nested schema)
	Pattern *EntriesPatternInitParameters `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (List of String)
	Words []*string `json:"words,omitempty" tf:"words,omitempty"`
}

type ProfilesEntriesObservation struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Attributes) (see below for nested schema)
	Pattern *EntriesPatternObservation `json:"pattern,omitempty" tf:"pattern,omitempty"`

	// (List of String)
	Words []*string `json:"words,omitempty" tf:"words,omitempty"`
}

type ProfilesEntriesParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Pattern *EntriesPatternParameters `json:"pattern" tf:"pattern,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	Words []*string `json:"words,omitempty" tf:"words,omitempty"`
}

type ProfilesInitParameters struct {

	// (Boolean)
	AIContextEnabled *bool `json:"aiContextEnabled,omitempty" tf:"ai_context_enabled,omitempty"`

	// (Number) Related DLP policies will trigger when the match count exceeds the number set.
	// Related DLP policies will trigger when the match count exceeds the number set.
	AllowedMatchCount *float64 `json:"allowedMatchCount,omitempty" tf:"allowed_match_count,omitempty"`

	// (String)
	ConfidenceThreshold *string `json:"confidenceThreshold,omitempty" tf:"confidence_threshold,omitempty"`

	// (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
	ContextAwareness *ProfilesContextAwarenessInitParameters `json:"contextAwareness,omitempty" tf:"context_awareness,omitempty"`

	// (String) The description of the profile
	// The description of the profile
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) (see below for nested schema)
	Entries []ProfilesEntriesInitParameters `json:"entries,omitempty" tf:"entries,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean)
	OcrEnabled *bool `json:"ocrEnabled,omitempty" tf:"ocr_enabled,omitempty"`

	// defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
	SharedEntries []SharedEntriesInitParameters `json:"sharedEntries,omitempty" tf:"shared_entries,omitempty"`
}

type ProfilesObservation struct {

	// (Boolean)
	AIContextEnabled *bool `json:"aiContextEnabled,omitempty" tf:"ai_context_enabled,omitempty"`

	// (Number) Related DLP policies will trigger when the match count exceeds the number set.
	// Related DLP policies will trigger when the match count exceeds the number set.
	AllowedMatchCount *float64 `json:"allowedMatchCount,omitempty" tf:"allowed_match_count,omitempty"`

	// (String)
	ConfidenceThreshold *string `json:"confidenceThreshold,omitempty" tf:"confidence_threshold,omitempty"`

	// (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
	ContextAwareness *ProfilesContextAwarenessObservation `json:"contextAwareness,omitempty" tf:"context_awareness,omitempty"`

	// (String) The description of the profile
	// The description of the profile
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) (see below for nested schema)
	Entries []ProfilesEntriesObservation `json:"entries,omitempty" tf:"entries,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean)
	OcrEnabled *bool `json:"ocrEnabled,omitempty" tf:"ocr_enabled,omitempty"`

	// defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
	SharedEntries []SharedEntriesObservation `json:"sharedEntries,omitempty" tf:"shared_entries,omitempty"`
}

type ProfilesParameters struct {

	// (Boolean)
	// +kubebuilder:validation:Optional
	AIContextEnabled *bool `json:"aiContextEnabled,omitempty" tf:"ai_context_enabled,omitempty"`

	// (Number) Related DLP policies will trigger when the match count exceeds the number set.
	// Related DLP policies will trigger when the match count exceeds the number set.
	// +kubebuilder:validation:Optional
	AllowedMatchCount *float64 `json:"allowedMatchCount,omitempty" tf:"allowed_match_count,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	ConfidenceThreshold *string `json:"confidenceThreshold,omitempty" tf:"confidence_threshold,omitempty"`

	// (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ContextAwareness *ProfilesContextAwarenessParameters `json:"contextAwareness" tf:"context_awareness,omitempty"`

	// (String) The description of the profile
	// The description of the profile
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Entries []ProfilesEntriesParameters `json:"entries" tf:"entries,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	OcrEnabled *bool `json:"ocrEnabled,omitempty" tf:"ocr_enabled,omitempty"`

	// defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
	// +kubebuilder:validation:Optional
	SharedEntries []SharedEntriesParameters `json:"sharedEntries" tf:"shared_entries,omitempty"`
}

type SharedEntriesInitParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	EntryID *string `json:"entryId,omitempty" tf:"entry_id,omitempty"`

	// (String)
	EntryType *string `json:"entryType,omitempty" tf:"entry_type,omitempty"`
}

type SharedEntriesObservation struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	EntryID *string `json:"entryId,omitempty" tf:"entry_id,omitempty"`

	// (String)
	EntryType *string `json:"entryType,omitempty" tf:"entry_type,omitempty"`
}

type SharedEntriesParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	EntryID *string `json:"entryId" tf:"entry_id,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	EntryType *string `json:"entryType" tf:"entry_type,omitempty"`
}

type SkipInitParameters struct {

	// (Boolean) If the content type is a file, skip context analysis and return all matches.
	// If the content type is a file, skip context analysis and return all matches.
	Files *bool `json:"files,omitempty" tf:"files,omitempty"`
}

type SkipObservation struct {

	// (Boolean) If the content type is a file, skip context analysis and return all matches.
	// If the content type is a file, skip context analysis and return all matches.
	Files *bool `json:"files,omitempty" tf:"files,omitempty"`
}

type SkipParameters struct {

	// (Boolean) If the content type is a file, skip context analysis and return all matches.
	// If the content type is a file, skip context analysis and return all matches.
	// +kubebuilder:validation:Optional
	Files *bool `json:"files" tf:"files,omitempty"`
}

type TrustDlpCustomProfileInitParameters struct {

	// (Boolean)
	AIContextEnabled *bool `json:"aiContextEnabled,omitempty" tf:"ai_context_enabled,omitempty"`

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Number) Related DLP policies will trigger when the match count exceeds the number set.
	// Related DLP policies will trigger when the match count exceeds the number set.
	AllowedMatchCount *float64 `json:"allowedMatchCount,omitempty" tf:"allowed_match_count,omitempty"`

	// (String)
	ConfidenceThreshold *string `json:"confidenceThreshold,omitempty" tf:"confidence_threshold,omitempty"`

	// (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
	ContextAwareness *ContextAwarenessInitParameters `json:"contextAwareness,omitempty" tf:"context_awareness,omitempty"`

	// (String) The description of the profile
	// The description of the profile
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) (see below for nested schema)
	Entries []EntriesInitParameters `json:"entries,omitempty" tf:"entries,omitempty"`

	// (Boolean)
	OcrEnabled *bool `json:"ocrEnabled,omitempty" tf:"ocr_enabled,omitempty"`

	// (Attributes List) (see below for nested schema)
	Profiles []ProfilesInitParameters `json:"profiles,omitempty" tf:"profiles,omitempty"`

	// defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
	SharedEntries []TrustDlpCustomProfileSharedEntriesInitParameters `json:"sharedEntries,omitempty" tf:"shared_entries,omitempty"`
}

type TrustDlpCustomProfileObservation struct {

	// (Boolean)
	AIContextEnabled *bool `json:"aiContextEnabled,omitempty" tf:"ai_context_enabled,omitempty"`

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Number) Related DLP policies will trigger when the match count exceeds the number set.
	// Related DLP policies will trigger when the match count exceeds the number set.
	AllowedMatchCount *float64 `json:"allowedMatchCount,omitempty" tf:"allowed_match_count,omitempty"`

	// (String)
	ConfidenceThreshold *string `json:"confidenceThreshold,omitempty" tf:"confidence_threshold,omitempty"`

	// (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
	ContextAwareness *ContextAwarenessObservation `json:"contextAwareness,omitempty" tf:"context_awareness,omitempty"`

	// (String) When the profile was created
	// When the profile was created
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The description of the profile
	// The description of the profile
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) (see below for nested schema)
	Entries []EntriesObservation `json:"entries,omitempty" tf:"entries,omitempty"`

	// (String) The id of the profile (uuid)
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean)
	OcrEnabled *bool `json:"ocrEnabled,omitempty" tf:"ocr_enabled,omitempty"`

	// (Boolean) Whether this profile can be accessed by anyone
	// Whether this profile can be accessed by anyone
	OpenAccess *bool `json:"openAccess,omitempty" tf:"open_access,omitempty"`

	// (Attributes List) (see below for nested schema)
	Profiles []ProfilesObservation `json:"profiles,omitempty" tf:"profiles,omitempty"`

	// defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
	SharedEntries []TrustDlpCustomProfileSharedEntriesObservation `json:"sharedEntries,omitempty" tf:"shared_entries,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) When the profile was lasted updated
	// When the profile was lasted updated
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type TrustDlpCustomProfileParameters struct {

	// (Boolean)
	// +kubebuilder:validation:Optional
	AIContextEnabled *bool `json:"aiContextEnabled,omitempty" tf:"ai_context_enabled,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Number) Related DLP policies will trigger when the match count exceeds the number set.
	// Related DLP policies will trigger when the match count exceeds the number set.
	// +kubebuilder:validation:Optional
	AllowedMatchCount *float64 `json:"allowedMatchCount,omitempty" tf:"allowed_match_count,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	ConfidenceThreshold *string `json:"confidenceThreshold,omitempty" tf:"confidence_threshold,omitempty"`

	// (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ContextAwareness *ContextAwarenessParameters `json:"contextAwareness,omitempty" tf:"context_awareness,omitempty"`

	// (String) The description of the profile
	// The description of the profile
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Entries []EntriesParameters `json:"entries,omitempty" tf:"entries,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	OcrEnabled *bool `json:"ocrEnabled,omitempty" tf:"ocr_enabled,omitempty"`

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Profiles []ProfilesParameters `json:"profiles,omitempty" tf:"profiles,omitempty"`

	// defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
	// +kubebuilder:validation:Optional
	SharedEntries []TrustDlpCustomProfileSharedEntriesParameters `json:"sharedEntries,omitempty" tf:"shared_entries,omitempty"`
}

type TrustDlpCustomProfileSharedEntriesInitParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	EntryID *string `json:"entryId,omitempty" tf:"entry_id,omitempty"`

	// (String)
	EntryType *string `json:"entryType,omitempty" tf:"entry_type,omitempty"`
}

type TrustDlpCustomProfileSharedEntriesObservation struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	EntryID *string `json:"entryId,omitempty" tf:"entry_id,omitempty"`

	// (String)
	EntryType *string `json:"entryType,omitempty" tf:"entry_type,omitempty"`
}

type TrustDlpCustomProfileSharedEntriesParameters struct {

	// (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	EntryID *string `json:"entryId" tf:"entry_id,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	EntryType *string `json:"entryType" tf:"entry_type,omitempty"`
}

// TrustDlpCustomProfileSpec defines the desired state of TrustDlpCustomProfile
type TrustDlpCustomProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrustDlpCustomProfileParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TrustDlpCustomProfileInitParameters `json:"initProvider,omitempty"`
}

// TrustDlpCustomProfileStatus defines the observed state of TrustDlpCustomProfile.
type TrustDlpCustomProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrustDlpCustomProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TrustDlpCustomProfile is the Schema for the TrustDlpCustomProfiles API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type TrustDlpCustomProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.contextAwareness) || (has(self.initProvider) && has(self.initProvider.contextAwareness))",message="spec.forProvider.contextAwareness is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.entries) || (has(self.initProvider) && has(self.initProvider.entries))",message="spec.forProvider.entries is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.profiles) || (has(self.initProvider) && has(self.initProvider.profiles))",message="spec.forProvider.profiles is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sharedEntries) || (has(self.initProvider) && has(self.initProvider.sharedEntries))",message="spec.forProvider.sharedEntries is a required parameter"
	Spec   TrustDlpCustomProfileSpec   `json:"spec"`
	Status TrustDlpCustomProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrustDlpCustomProfileList contains a list of TrustDlpCustomProfiles
type TrustDlpCustomProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrustDlpCustomProfile `json:"items"`
}

// Repository type metadata.
var (
	TrustDlpCustomProfile_Kind             = "TrustDlpCustomProfile"
	TrustDlpCustomProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrustDlpCustomProfile_Kind}.String()
	TrustDlpCustomProfile_KindAPIVersion   = TrustDlpCustomProfile_Kind + "." + CRDGroupVersion.String()
	TrustDlpCustomProfile_GroupVersionKind = CRDGroupVersion.WithKind(TrustDlpCustomProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&TrustDlpCustomProfile{}, &TrustDlpCustomProfileList{})
}
