// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConfigInitParameters struct {

	// (String) Your companies TLD
	// Your companies TLD
	AppsDomain *string `json:"appsDomain,omitempty" tf:"apps_domain,omitempty"`

	// (List of String) A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
	// A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
	Attributes []*string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// (String) The authorization_endpoint URL of your IdP
	// The authorization_endpoint URL of your IdP
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// (String) Your okta authorization server id
	// Your okta authorization server id
	AuthorizationServerID *string `json:"authorizationServerId,omitempty" tf:"authorization_server_id,omitempty"`

	// (String) Your centrify account url
	// Your centrify account url
	CentrifyAccount *string `json:"centrifyAccount,omitempty" tf:"centrify_account,omitempty"`

	// (String) Your centrify app id
	// Your centrify app id
	CentrifyAppID *string `json:"centrifyAppId,omitempty" tf:"centrify_app_id,omitempty"`

	// (String) The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
	// The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
	CertsURL *string `json:"certsUrl,omitempty" tf:"certs_url,omitempty"`

	// (List of String) Custom claims
	// Custom claims
	Claims []*string `json:"claims,omitempty" tf:"claims,omitempty"`

	// (String) Your OAuth Client ID
	// Your OAuth Client ID
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) Your OAuth Client Secret
	// Your OAuth Client Secret
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`

	// (Boolean) Should Cloudflare try to load authentication contexts from your account
	// Should Cloudflare try to load authentication contexts from your account
	ConditionalAccessEnabled *bool `json:"conditionalAccessEnabled,omitempty" tf:"conditional_access_enabled,omitempty"`

	// (String) Your Azure directory uuid
	// Your Azure directory uuid
	DirectoryID *string `json:"directoryId,omitempty" tf:"directory_id,omitempty"`

	// (String) The attribute name for email in the SAML response.
	// The attribute name for email in the SAML response.
	EmailAttributeName *string `json:"emailAttributeName,omitempty" tf:"email_attribute_name,omitempty"`

	// (String) The claim name for email in the id_token response.
	// The claim name for email in the id_token response.
	EmailClaimName *string `json:"emailClaimName,omitempty" tf:"email_claim_name,omitempty"`

	// (Attributes List) Add a list of attribute names that will be returned in the response header from the Access callback. (see below for nested schema)
	HeaderAttributes []HeaderAttributesInitParameters `json:"headerAttributes,omitempty" tf:"header_attributes,omitempty"`

	// (List of String) X509 certificate to verify the signature in the SAML authentication response
	// X509 certificate to verify the signature in the SAML authentication response
	IdpPublicCerts []*string `json:"idpPublicCerts,omitempty" tf:"idp_public_certs,omitempty"`

	// (String) IdP Entity ID or Issuer URL
	// IdP Entity ID or Issuer URL
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// (String) Your okta account url
	// Your okta account url
	OktaAccount *string `json:"oktaAccount,omitempty" tf:"okta_account,omitempty"`

	// (String) Your OneLogin account url
	// Your OneLogin account url
	OneloginAccount *string `json:"oneloginAccount,omitempty" tf:"onelogin_account,omitempty"`

	// (String) Your PingOne environment identifier
	// Your PingOne environment identifier
	PingEnvID *string `json:"pingEnvId,omitempty" tf:"ping_env_id,omitempty"`

	// (Boolean) Enable Proof Key for Code Exchange (PKCE)
	// Enable Proof Key for Code Exchange (PKCE)
	PkceEnabled *bool `json:"pkceEnabled,omitempty" tf:"pkce_enabled,omitempty"`

	// sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
	// Indicates the type of user interaction that is required. prompt=login forces the user to enter their credentials on that request, negating single-sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
	Prompt *string `json:"prompt,omitempty" tf:"prompt,omitempty"`

	// (List of String) OAuth scopes
	// OAuth scopes
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (Boolean) Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
	// Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
	SignRequest *bool `json:"signRequest,omitempty" tf:"sign_request,omitempty"`

	// (String) URL to send the SAML authentication requests to
	// URL to send the SAML authentication requests to
	SsoTargetURL *string `json:"ssoTargetUrl,omitempty" tf:"sso_target_url,omitempty"`

	// (Boolean) Should Cloudflare try to load groups from your account
	// Should Cloudflare try to load groups from your account
	SupportGroups *bool `json:"supportGroups,omitempty" tf:"support_groups,omitempty"`

	// (String) The token_endpoint URL of your IdP
	// The token_endpoint URL of your IdP
	TokenURL *string `json:"tokenUrl,omitempty" tf:"token_url,omitempty"`
}

type ConfigObservation struct {

	// (String) Your companies TLD
	// Your companies TLD
	AppsDomain *string `json:"appsDomain,omitempty" tf:"apps_domain,omitempty"`

	// (List of String) A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
	// A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
	Attributes []*string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// (String) The authorization_endpoint URL of your IdP
	// The authorization_endpoint URL of your IdP
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// (String) Your okta authorization server id
	// Your okta authorization server id
	AuthorizationServerID *string `json:"authorizationServerId,omitempty" tf:"authorization_server_id,omitempty"`

	// (String) Your centrify account url
	// Your centrify account url
	CentrifyAccount *string `json:"centrifyAccount,omitempty" tf:"centrify_account,omitempty"`

	// (String) Your centrify app id
	// Your centrify app id
	CentrifyAppID *string `json:"centrifyAppId,omitempty" tf:"centrify_app_id,omitempty"`

	// (String) The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
	// The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
	CertsURL *string `json:"certsUrl,omitempty" tf:"certs_url,omitempty"`

	// (List of String) Custom claims
	// Custom claims
	Claims []*string `json:"claims,omitempty" tf:"claims,omitempty"`

	// (String) Your OAuth Client ID
	// Your OAuth Client ID
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) Your OAuth Client Secret
	// Your OAuth Client Secret
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`

	// (Boolean) Should Cloudflare try to load authentication contexts from your account
	// Should Cloudflare try to load authentication contexts from your account
	ConditionalAccessEnabled *bool `json:"conditionalAccessEnabled,omitempty" tf:"conditional_access_enabled,omitempty"`

	// (String) Your Azure directory uuid
	// Your Azure directory uuid
	DirectoryID *string `json:"directoryId,omitempty" tf:"directory_id,omitempty"`

	// (String) The attribute name for email in the SAML response.
	// The attribute name for email in the SAML response.
	EmailAttributeName *string `json:"emailAttributeName,omitempty" tf:"email_attribute_name,omitempty"`

	// (String) The claim name for email in the id_token response.
	// The claim name for email in the id_token response.
	EmailClaimName *string `json:"emailClaimName,omitempty" tf:"email_claim_name,omitempty"`

	// (Attributes List) Add a list of attribute names that will be returned in the response header from the Access callback. (see below for nested schema)
	HeaderAttributes []HeaderAttributesObservation `json:"headerAttributes,omitempty" tf:"header_attributes,omitempty"`

	// (List of String) X509 certificate to verify the signature in the SAML authentication response
	// X509 certificate to verify the signature in the SAML authentication response
	IdpPublicCerts []*string `json:"idpPublicCerts,omitempty" tf:"idp_public_certs,omitempty"`

	// (String) IdP Entity ID or Issuer URL
	// IdP Entity ID or Issuer URL
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// (String) Your okta account url
	// Your okta account url
	OktaAccount *string `json:"oktaAccount,omitempty" tf:"okta_account,omitempty"`

	// (String) Your OneLogin account url
	// Your OneLogin account url
	OneloginAccount *string `json:"oneloginAccount,omitempty" tf:"onelogin_account,omitempty"`

	// (String) Your PingOne environment identifier
	// Your PingOne environment identifier
	PingEnvID *string `json:"pingEnvId,omitempty" tf:"ping_env_id,omitempty"`

	// (Boolean) Enable Proof Key for Code Exchange (PKCE)
	// Enable Proof Key for Code Exchange (PKCE)
	PkceEnabled *bool `json:"pkceEnabled,omitempty" tf:"pkce_enabled,omitempty"`

	// sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
	// Indicates the type of user interaction that is required. prompt=login forces the user to enter their credentials on that request, negating single-sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
	Prompt *string `json:"prompt,omitempty" tf:"prompt,omitempty"`

	// (String)
	RedirectURL *string `json:"redirectUrl,omitempty" tf:"redirect_url,omitempty"`

	// (List of String) OAuth scopes
	// OAuth scopes
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (Boolean) Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
	// Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
	SignRequest *bool `json:"signRequest,omitempty" tf:"sign_request,omitempty"`

	// (String) URL to send the SAML authentication requests to
	// URL to send the SAML authentication requests to
	SsoTargetURL *string `json:"ssoTargetUrl,omitempty" tf:"sso_target_url,omitempty"`

	// (Boolean) Should Cloudflare try to load groups from your account
	// Should Cloudflare try to load groups from your account
	SupportGroups *bool `json:"supportGroups,omitempty" tf:"support_groups,omitempty"`

	// (String) The token_endpoint URL of your IdP
	// The token_endpoint URL of your IdP
	TokenURL *string `json:"tokenUrl,omitempty" tf:"token_url,omitempty"`
}

type ConfigParameters struct {

	// (String) Your companies TLD
	// Your companies TLD
	// +kubebuilder:validation:Optional
	AppsDomain *string `json:"appsDomain,omitempty" tf:"apps_domain,omitempty"`

	// (List of String) A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
	// A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
	// +kubebuilder:validation:Optional
	Attributes []*string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// (String) The authorization_endpoint URL of your IdP
	// The authorization_endpoint URL of your IdP
	// +kubebuilder:validation:Optional
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// (String) Your okta authorization server id
	// Your okta authorization server id
	// +kubebuilder:validation:Optional
	AuthorizationServerID *string `json:"authorizationServerId,omitempty" tf:"authorization_server_id,omitempty"`

	// (String) Your centrify account url
	// Your centrify account url
	// +kubebuilder:validation:Optional
	CentrifyAccount *string `json:"centrifyAccount,omitempty" tf:"centrify_account,omitempty"`

	// (String) Your centrify app id
	// Your centrify app id
	// +kubebuilder:validation:Optional
	CentrifyAppID *string `json:"centrifyAppId,omitempty" tf:"centrify_app_id,omitempty"`

	// (String) The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
	// The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
	// +kubebuilder:validation:Optional
	CertsURL *string `json:"certsUrl,omitempty" tf:"certs_url,omitempty"`

	// (List of String) Custom claims
	// Custom claims
	// +kubebuilder:validation:Optional
	Claims []*string `json:"claims,omitempty" tf:"claims,omitempty"`

	// (String) Your OAuth Client ID
	// Your OAuth Client ID
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) Your OAuth Client Secret
	// Your OAuth Client Secret
	// +kubebuilder:validation:Optional
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`

	// (Boolean) Should Cloudflare try to load authentication contexts from your account
	// Should Cloudflare try to load authentication contexts from your account
	// +kubebuilder:validation:Optional
	ConditionalAccessEnabled *bool `json:"conditionalAccessEnabled,omitempty" tf:"conditional_access_enabled,omitempty"`

	// (String) Your Azure directory uuid
	// Your Azure directory uuid
	// +kubebuilder:validation:Optional
	DirectoryID *string `json:"directoryId,omitempty" tf:"directory_id,omitempty"`

	// (String) The attribute name for email in the SAML response.
	// The attribute name for email in the SAML response.
	// +kubebuilder:validation:Optional
	EmailAttributeName *string `json:"emailAttributeName,omitempty" tf:"email_attribute_name,omitempty"`

	// (String) The claim name for email in the id_token response.
	// The claim name for email in the id_token response.
	// +kubebuilder:validation:Optional
	EmailClaimName *string `json:"emailClaimName,omitempty" tf:"email_claim_name,omitempty"`

	// (Attributes List) Add a list of attribute names that will be returned in the response header from the Access callback. (see below for nested schema)
	// +kubebuilder:validation:Optional
	HeaderAttributes []HeaderAttributesParameters `json:"headerAttributes" tf:"header_attributes,omitempty"`

	// (List of String) X509 certificate to verify the signature in the SAML authentication response
	// X509 certificate to verify the signature in the SAML authentication response
	// +kubebuilder:validation:Optional
	IdpPublicCerts []*string `json:"idpPublicCerts,omitempty" tf:"idp_public_certs,omitempty"`

	// (String) IdP Entity ID or Issuer URL
	// IdP Entity ID or Issuer URL
	// +kubebuilder:validation:Optional
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// (String) Your okta account url
	// Your okta account url
	// +kubebuilder:validation:Optional
	OktaAccount *string `json:"oktaAccount,omitempty" tf:"okta_account,omitempty"`

	// (String) Your OneLogin account url
	// Your OneLogin account url
	// +kubebuilder:validation:Optional
	OneloginAccount *string `json:"oneloginAccount,omitempty" tf:"onelogin_account,omitempty"`

	// (String) Your PingOne environment identifier
	// Your PingOne environment identifier
	// +kubebuilder:validation:Optional
	PingEnvID *string `json:"pingEnvId,omitempty" tf:"ping_env_id,omitempty"`

	// (Boolean) Enable Proof Key for Code Exchange (PKCE)
	// Enable Proof Key for Code Exchange (PKCE)
	// +kubebuilder:validation:Optional
	PkceEnabled *bool `json:"pkceEnabled,omitempty" tf:"pkce_enabled,omitempty"`

	// sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
	// Indicates the type of user interaction that is required. prompt=login forces the user to enter their credentials on that request, negating single-sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
	// +kubebuilder:validation:Optional
	Prompt *string `json:"prompt,omitempty" tf:"prompt,omitempty"`

	// (List of String) OAuth scopes
	// OAuth scopes
	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (Boolean) Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
	// Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
	// +kubebuilder:validation:Optional
	SignRequest *bool `json:"signRequest,omitempty" tf:"sign_request,omitempty"`

	// (String) URL to send the SAML authentication requests to
	// URL to send the SAML authentication requests to
	// +kubebuilder:validation:Optional
	SsoTargetURL *string `json:"ssoTargetUrl,omitempty" tf:"sso_target_url,omitempty"`

	// (Boolean) Should Cloudflare try to load groups from your account
	// Should Cloudflare try to load groups from your account
	// +kubebuilder:validation:Optional
	SupportGroups *bool `json:"supportGroups,omitempty" tf:"support_groups,omitempty"`

	// (String) The token_endpoint URL of your IdP
	// The token_endpoint URL of your IdP
	// +kubebuilder:validation:Optional
	TokenURL *string `json:"tokenUrl,omitempty" tf:"token_url,omitempty"`
}

type HeaderAttributesInitParameters struct {

	// (String) attribute name from the IDP
	// attribute name from the IDP
	AttributeName *string `json:"attributeName,omitempty" tf:"attribute_name,omitempty"`

	// (String) header that will be added on the request to the origin
	// header that will be added on the request to the origin
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`
}

type HeaderAttributesObservation struct {

	// (String) attribute name from the IDP
	// attribute name from the IDP
	AttributeName *string `json:"attributeName,omitempty" tf:"attribute_name,omitempty"`

	// (String) header that will be added on the request to the origin
	// header that will be added on the request to the origin
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`
}

type HeaderAttributesParameters struct {

	// (String) attribute name from the IDP
	// attribute name from the IDP
	// +kubebuilder:validation:Optional
	AttributeName *string `json:"attributeName,omitempty" tf:"attribute_name,omitempty"`

	// (String) header that will be added on the request to the origin
	// header that will be added on the request to the origin
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`
}

type TrustAccessIdentityProviderInitParameters struct {

	// (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Attributes) The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our developer documentation. (see below for nested schema)
	Config *ConfigInitParameters `json:"config,omitempty" tf:"config,omitempty"`

	// Domain Identity Management (SCIM) with the identity provider. (see below for nested schema)
	ScimConfig *TrustAccessIdentityProviderScimConfigInitParameters `json:"scimConfig,omitempty" tf:"scim_config,omitempty"`

	// (String) The type of identity provider. To determine the value for a specific provider, refer to our developer documentation.
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TrustAccessIdentityProviderObservation struct {

	// (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Attributes) The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our developer documentation. (see below for nested schema)
	Config *ConfigObservation `json:"config,omitempty" tf:"config,omitempty"`

	// (String) UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Domain Identity Management (SCIM) with the identity provider. (see below for nested schema)
	ScimConfig *TrustAccessIdentityProviderScimConfigObservation `json:"scimConfig,omitempty" tf:"scim_config,omitempty"`

	// (String) The type of identity provider. To determine the value for a specific provider, refer to our developer documentation.
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TrustAccessIdentityProviderParameters struct {

	// (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	// The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (Attributes) The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our developer documentation. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Config *ConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// Domain Identity Management (SCIM) with the identity provider. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ScimConfig *TrustAccessIdentityProviderScimConfigParameters `json:"scimConfig,omitempty" tf:"scim_config,omitempty"`

	// (String) The type of identity provider. To determine the value for a specific provider, refer to our developer documentation.
	// The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	// The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type TrustAccessIdentityProviderScimConfigInitParameters struct {

	// (Boolean) A flag to enable or disable SCIM for the identity provider.
	// A flag to enable or disable SCIM for the identity provider.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
	// Indicates how a SCIM event updates a user identity used for policy evaluation. Use "automatic" to automatically update a user's identity and augment it with fields from the SCIM user resource. Use "reauth" to force re-authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
	IdentityUpdateBehavior *string `json:"identityUpdateBehavior,omitempty" tf:"identity_update_behavior,omitempty"`

	// (Boolean) A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
	// A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
	SeatDeprovision *bool `json:"seatDeprovision,omitempty" tf:"seat_deprovision,omitempty"`

	// (Boolean) A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
	// A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
	UserDeprovision *bool `json:"userDeprovision,omitempty" tf:"user_deprovision,omitempty"`
}

type TrustAccessIdentityProviderScimConfigObservation struct {

	// (Boolean) A flag to enable or disable SCIM for the identity provider.
	// A flag to enable or disable SCIM for the identity provider.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
	// Indicates how a SCIM event updates a user identity used for policy evaluation. Use "automatic" to automatically update a user's identity and augment it with fields from the SCIM user resource. Use "reauth" to force re-authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
	IdentityUpdateBehavior *string `json:"identityUpdateBehavior,omitempty" tf:"identity_update_behavior,omitempty"`

	// (String) The base URL of Cloudflare's SCIM V2.0 API endpoint.
	// The base URL of Cloudflare's SCIM V2.0 API endpoint.
	ScimBaseURL *string `json:"scimBaseUrl,omitempty" tf:"scim_base_url,omitempty"`

	// (Boolean) A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
	// A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
	SeatDeprovision *bool `json:"seatDeprovision,omitempty" tf:"seat_deprovision,omitempty"`

	// only token generated when the SCIM integration is enabled for the first time.  It is redacted on subsequent requests.  If you lose this you will need to refresh it at /access/identity_providers/:idpID/refresh_scim_secret.
	// A read-only token generated when the SCIM integration is enabled for the first time.  It is redacted on subsequent requests.  If you lose this you will need to refresh it at /access/identity_providers/:idpID/refresh_scim_secret.
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// (Boolean) A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
	// A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
	UserDeprovision *bool `json:"userDeprovision,omitempty" tf:"user_deprovision,omitempty"`
}

type TrustAccessIdentityProviderScimConfigParameters struct {

	// (Boolean) A flag to enable or disable SCIM for the identity provider.
	// A flag to enable or disable SCIM for the identity provider.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
	// Indicates how a SCIM event updates a user identity used for policy evaluation. Use "automatic" to automatically update a user's identity and augment it with fields from the SCIM user resource. Use "reauth" to force re-authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
	// +kubebuilder:validation:Optional
	IdentityUpdateBehavior *string `json:"identityUpdateBehavior,omitempty" tf:"identity_update_behavior,omitempty"`

	// (Boolean) A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
	// A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
	// +kubebuilder:validation:Optional
	SeatDeprovision *bool `json:"seatDeprovision,omitempty" tf:"seat_deprovision,omitempty"`

	// (Boolean) A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
	// A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
	// +kubebuilder:validation:Optional
	UserDeprovision *bool `json:"userDeprovision,omitempty" tf:"user_deprovision,omitempty"`
}

// TrustAccessIdentityProviderSpec defines the desired state of TrustAccessIdentityProvider
type TrustAccessIdentityProviderSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrustAccessIdentityProviderParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TrustAccessIdentityProviderInitParameters `json:"initProvider,omitempty"`
}

// TrustAccessIdentityProviderStatus defines the observed state of TrustAccessIdentityProvider.
type TrustAccessIdentityProviderStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrustAccessIdentityProviderObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TrustAccessIdentityProvider is the Schema for the TrustAccessIdentityProviders API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type TrustAccessIdentityProvider struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   TrustAccessIdentityProviderSpec   `json:"spec"`
	Status TrustAccessIdentityProviderStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrustAccessIdentityProviderList contains a list of TrustAccessIdentityProviders
type TrustAccessIdentityProviderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrustAccessIdentityProvider `json:"items"`
}

// Repository type metadata.
var (
	TrustAccessIdentityProvider_Kind             = "TrustAccessIdentityProvider"
	TrustAccessIdentityProvider_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrustAccessIdentityProvider_Kind}.String()
	TrustAccessIdentityProvider_KindAPIVersion   = TrustAccessIdentityProvider_Kind + "." + CRDGroupVersion.String()
	TrustAccessIdentityProvider_GroupVersionKind = CRDGroupVersion.WithKind(TrustAccessIdentityProvider_Kind)
)

func init() {
	SchemeBuilder.Register(&TrustAccessIdentityProvider{}, &TrustAccessIdentityProviderList{})
}
