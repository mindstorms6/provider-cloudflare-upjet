// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TrustDevicePostureIntegrationConfigInitParameters struct {

	// (String) The Workspace One API URL provided in the Workspace One Admin Dashboard.
	// The Workspace One API URL provided in the Workspace One Admin Dashboard.
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// Access-Client-ID header when hitting the api_url
	// If present, this id will be passed in the `CF-Access-Client-ID` header when hitting the `api_url`
	AccessClientID *string `json:"accessClientId,omitempty" tf:"access_client_id,omitempty"`

	// Access-Client-Secret header when hitting the api_url
	// If present, this secret will be passed in the `CF-Access-Client-Secret` header when hitting the `api_url`
	AccessClientSecret *string `json:"accessClientSecret,omitempty" tf:"access_client_secret,omitempty"`

	// (String) The Workspace One Authorization URL depending on your region.
	// The Workspace One Authorization URL depending on your region.
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// (String) The Workspace One client ID provided in the Workspace One Admin Dashboard.
	// The Workspace One client ID provided in the Workspace One Admin Dashboard.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) The Uptycs client secret.
	// The Uptycs client secret.
	ClientKey *string `json:"clientKey,omitempty" tf:"client_key,omitempty"`

	// (String) The Workspace One client secret provided in the Workspace One Admin Dashboard.
	// The Workspace One client secret provided in the Workspace One Admin Dashboard.
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`

	// (String) The Crowdstrike customer ID.
	// The Crowdstrike customer ID.
	CustomerID *string `json:"customerId,omitempty" tf:"customer_id,omitempty"`
}

type TrustDevicePostureIntegrationConfigObservation struct {

	// (String) The Workspace One API URL provided in the Workspace One Admin Dashboard.
	// The Workspace One API URL provided in the Workspace One Admin Dashboard.
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// Access-Client-ID header when hitting the api_url
	// If present, this id will be passed in the `CF-Access-Client-ID` header when hitting the `api_url`
	AccessClientID *string `json:"accessClientId,omitempty" tf:"access_client_id,omitempty"`

	// Access-Client-Secret header when hitting the api_url
	// If present, this secret will be passed in the `CF-Access-Client-Secret` header when hitting the `api_url`
	AccessClientSecret *string `json:"accessClientSecret,omitempty" tf:"access_client_secret,omitempty"`

	// (String) The Workspace One Authorization URL depending on your region.
	// The Workspace One Authorization URL depending on your region.
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// (String) The Workspace One client ID provided in the Workspace One Admin Dashboard.
	// The Workspace One client ID provided in the Workspace One Admin Dashboard.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) The Uptycs client secret.
	// The Uptycs client secret.
	ClientKey *string `json:"clientKey,omitempty" tf:"client_key,omitempty"`

	// (String) The Workspace One client secret provided in the Workspace One Admin Dashboard.
	// The Workspace One client secret provided in the Workspace One Admin Dashboard.
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`

	// (String) The Crowdstrike customer ID.
	// The Crowdstrike customer ID.
	CustomerID *string `json:"customerId,omitempty" tf:"customer_id,omitempty"`
}

type TrustDevicePostureIntegrationConfigParameters struct {

	// (String) The Workspace One API URL provided in the Workspace One Admin Dashboard.
	// The Workspace One API URL provided in the Workspace One Admin Dashboard.
	// +kubebuilder:validation:Optional
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// Access-Client-ID header when hitting the api_url
	// If present, this id will be passed in the `CF-Access-Client-ID` header when hitting the `api_url`
	// +kubebuilder:validation:Optional
	AccessClientID *string `json:"accessClientId,omitempty" tf:"access_client_id,omitempty"`

	// Access-Client-Secret header when hitting the api_url
	// If present, this secret will be passed in the `CF-Access-Client-Secret` header when hitting the `api_url`
	// +kubebuilder:validation:Optional
	AccessClientSecret *string `json:"accessClientSecret,omitempty" tf:"access_client_secret,omitempty"`

	// (String) The Workspace One Authorization URL depending on your region.
	// The Workspace One Authorization URL depending on your region.
	// +kubebuilder:validation:Optional
	AuthURL *string `json:"authUrl,omitempty" tf:"auth_url,omitempty"`

	// (String) The Workspace One client ID provided in the Workspace One Admin Dashboard.
	// The Workspace One client ID provided in the Workspace One Admin Dashboard.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) The Uptycs client secret.
	// The Uptycs client secret.
	// +kubebuilder:validation:Optional
	ClientKey *string `json:"clientKey,omitempty" tf:"client_key,omitempty"`

	// (String) The Workspace One client secret provided in the Workspace One Admin Dashboard.
	// The Workspace One client secret provided in the Workspace One Admin Dashboard.
	// +kubebuilder:validation:Optional
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret,omitempty"`

	// (String) The Crowdstrike customer ID.
	// The Crowdstrike customer ID.
	// +kubebuilder:validation:Optional
	CustomerID *string `json:"customerId,omitempty" tf:"customer_id,omitempty"`
}

type TrustDevicePostureIntegrationInitParameters struct {

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// party integration information. (see below for nested schema)
	Config *TrustDevicePostureIntegrationConfigInitParameters `json:"config,omitempty" tf:"config,omitempty"`

	// party API. Use m for minutes (e.g. 5m) and h for hours (e.g. 12h).
	// The interval between each posture check with the third-party API. Use `m` for minutes (e.g. `5m`) and `h` for hours (e.g. `12h`).
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// (String) The type of device posture integration.
	// The type of device posture integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TrustDevicePostureIntegrationObservation struct {

	// (String)
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// party integration information. (see below for nested schema)
	Config *TrustDevicePostureIntegrationConfigObservation `json:"config,omitempty" tf:"config,omitempty"`

	// (String) API UUID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// party API. Use m for minutes (e.g. 5m) and h for hours (e.g. 12h).
	// The interval between each posture check with the third-party API. Use `m` for minutes (e.g. `5m`) and `h` for hours (e.g. `12h`).
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// (String) The type of device posture integration.
	// The type of device posture integration.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TrustDevicePostureIntegrationParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// party integration information. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Config *TrustDevicePostureIntegrationConfigParameters `json:"config,omitempty" tf:"config,omitempty"`

	// party API. Use m for minutes (e.g. 5m) and h for hours (e.g. 12h).
	// The interval between each posture check with the third-party API. Use `m` for minutes (e.g. `5m`) and `h` for hours (e.g. `12h`).
	// +kubebuilder:validation:Optional
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// (String) The type of device posture integration.
	// The type of device posture integration.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// TrustDevicePostureIntegrationSpec defines the desired state of TrustDevicePostureIntegration
type TrustDevicePostureIntegrationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrustDevicePostureIntegrationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TrustDevicePostureIntegrationInitParameters `json:"initProvider,omitempty"`
}

// TrustDevicePostureIntegrationStatus defines the observed state of TrustDevicePostureIntegration.
type TrustDevicePostureIntegrationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrustDevicePostureIntegrationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TrustDevicePostureIntegration is the Schema for the TrustDevicePostureIntegrations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type TrustDevicePostureIntegration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.interval) || (has(self.initProvider) && has(self.initProvider.interval))",message="spec.forProvider.interval is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   TrustDevicePostureIntegrationSpec   `json:"spec"`
	Status TrustDevicePostureIntegrationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrustDevicePostureIntegrationList contains a list of TrustDevicePostureIntegrations
type TrustDevicePostureIntegrationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrustDevicePostureIntegration `json:"items"`
}

// Repository type metadata.
var (
	TrustDevicePostureIntegration_Kind             = "TrustDevicePostureIntegration"
	TrustDevicePostureIntegration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrustDevicePostureIntegration_Kind}.String()
	TrustDevicePostureIntegration_KindAPIVersion   = TrustDevicePostureIntegration_Kind + "." + CRDGroupVersion.String()
	TrustDevicePostureIntegration_GroupVersionKind = CRDGroupVersion.WithKind(TrustDevicePostureIntegration_Kind)
)

func init() {
	SchemeBuilder.Register(&TrustDevicePostureIntegration{}, &TrustDevicePostureIntegrationList{})
}
