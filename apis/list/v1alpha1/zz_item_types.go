// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostnameInitParameters struct {

	// (String)
	URLHostname *string `json:"urlHostname,omitempty" tf:"url_hostname,omitempty"`
}

type HostnameObservation struct {

	// (String)
	URLHostname *string `json:"urlHostname,omitempty" tf:"url_hostname,omitempty"`
}

type HostnameParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	URLHostname *string `json:"urlHostname" tf:"url_hostname,omitempty"`
}

type ItemInitParameters struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// negative 32 bit integer
	// A non-negative 32 bit integer
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// (String) An informative summary of the list item.
	// An informative summary of the list item.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// ). (see below for nested schema)
	Hostname *HostnameInitParameters `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// (String) An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	// An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// (String) The unique ID of the list.
	// The unique ID of the list.
	ListID *string `json:"listId,omitempty" tf:"list_id,omitempty"`

	// (Attributes) The definition of the redirect. (see below for nested schema)
	Redirect *RedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type ItemObservation struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// negative 32 bit integer
	// A non-negative 32 bit integer
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// (String) An informative summary of the list item.
	// An informative summary of the list item.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The RFC 3339 timestamp of when the item was created.
	// The RFC 3339 timestamp of when the item was created.
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// ). (see below for nested schema)
	Hostname *HostnameObservation `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// (String) The unique ID of the item in the List.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	// An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// (String) The unique ID of the list.
	// The unique ID of the list.
	ListID *string `json:"listId,omitempty" tf:"list_id,omitempty"`

	// (String) The RFC 3339 timestamp of when the item was last modified.
	// The RFC 3339 timestamp of when the item was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on,omitempty"`

	// (String) The unique operation ID of the asynchronous action.
	// The unique operation ID of the asynchronous action.
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (Attributes) The definition of the redirect. (see below for nested schema)
	Redirect *RedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type ItemParameters struct {

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// negative 32 bit integer
	// A non-negative 32 bit integer
	// +kubebuilder:validation:Optional
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// (String) An informative summary of the list item.
	// An informative summary of the list item.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// ). (see below for nested schema)
	// +kubebuilder:validation:Optional
	Hostname *HostnameParameters `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// (String) An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	// An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
	// +kubebuilder:validation:Optional
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// (String) The unique ID of the list.
	// The unique ID of the list.
	// +kubebuilder:validation:Optional
	ListID *string `json:"listId,omitempty" tf:"list_id,omitempty"`

	// (Attributes) The definition of the redirect. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Redirect *RedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type RedirectInitParameters struct {

	// (Boolean)
	IncludeSubdomains *bool `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// (Boolean)
	PreservePathSuffix *bool `json:"preservePathSuffix,omitempty" tf:"preserve_path_suffix,omitempty"`

	// (Boolean)
	PreserveQueryString *bool `json:"preserveQueryString,omitempty" tf:"preserve_query_string,omitempty"`

	// (String)
	SourceURL *string `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// (Number)
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// (Boolean)
	SubpathMatching *bool `json:"subpathMatching,omitempty" tf:"subpath_matching,omitempty"`

	// (String)
	TargetURL *string `json:"targetUrl,omitempty" tf:"target_url,omitempty"`
}

type RedirectObservation struct {

	// (Boolean)
	IncludeSubdomains *bool `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// (Boolean)
	PreservePathSuffix *bool `json:"preservePathSuffix,omitempty" tf:"preserve_path_suffix,omitempty"`

	// (Boolean)
	PreserveQueryString *bool `json:"preserveQueryString,omitempty" tf:"preserve_query_string,omitempty"`

	// (String)
	SourceURL *string `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// (Number)
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// (Boolean)
	SubpathMatching *bool `json:"subpathMatching,omitempty" tf:"subpath_matching,omitempty"`

	// (String)
	TargetURL *string `json:"targetUrl,omitempty" tf:"target_url,omitempty"`
}

type RedirectParameters struct {

	// (Boolean)
	// +kubebuilder:validation:Optional
	IncludeSubdomains *bool `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	PreservePathSuffix *bool `json:"preservePathSuffix,omitempty" tf:"preserve_path_suffix,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	PreserveQueryString *bool `json:"preserveQueryString,omitempty" tf:"preserve_query_string,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	SourceURL *string `json:"sourceUrl" tf:"source_url,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// (Boolean)
	// +kubebuilder:validation:Optional
	SubpathMatching *bool `json:"subpathMatching,omitempty" tf:"subpath_matching,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	TargetURL *string `json:"targetUrl" tf:"target_url,omitempty"`
}

// ItemSpec defines the desired state of Item
type ItemSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ItemParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ItemInitParameters `json:"initProvider,omitempty"`
}

// ItemStatus defines the observed state of Item.
type ItemStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ItemObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Item is the Schema for the Items API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type Item struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hostname) || (has(self.initProvider) && has(self.initProvider.hostname))",message="spec.forProvider.hostname is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.listId) || (has(self.initProvider) && has(self.initProvider.listId))",message="spec.forProvider.listId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.redirect) || (has(self.initProvider) && has(self.initProvider.redirect))",message="spec.forProvider.redirect is a required parameter"
	Spec   ItemSpec   `json:"spec"`
	Status ItemStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ItemList contains a list of Items
type ItemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Item `json:"items"`
}

// Repository type metadata.
var (
	Item_Kind             = "Item"
	Item_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Item_Kind}.String()
	Item_KindAPIVersion   = Item_Kind + "." + CRDGroupVersion.String()
	Item_GroupVersionKind = CRDGroupVersion.WithKind(Item_Kind)
)

func init() {
	SchemeBuilder.Register(&Item{}, &ItemList{})
}
