//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobInitParameters) DeepCopyInto(out *JobInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.DestinationConf != nil {
		in, out := &in.DestinationConf, &out.DestinationConf
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LogpullOptions != nil {
		in, out := &in.LogpullOptions, &out.LogpullOptions
		*out = new(string)
		**out = **in
	}
	if in.MaxUploadBytes != nil {
		in, out := &in.MaxUploadBytes, &out.MaxUploadBytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxUploadIntervalSeconds != nil {
		in, out := &in.MaxUploadIntervalSeconds, &out.MaxUploadIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaxUploadRecords != nil {
		in, out := &in.MaxUploadRecords, &out.MaxUploadRecords
		*out = new(float64)
		**out = **in
	}
	if in.OutputOptions != nil {
		in, out := &in.OutputOptions, &out.OutputOptions
		*out = new(OutputOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnershipChallenge != nil {
		in, out := &in.OwnershipChallenge, &out.OwnershipChallenge
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobInitParameters.
func (in *JobInitParameters) DeepCopy() *JobInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.DestinationConf != nil {
		in, out := &in.DestinationConf, &out.DestinationConf
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ErrorMessage != nil {
		in, out := &in.ErrorMessage, &out.ErrorMessage
		*out = new(string)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LastComplete != nil {
		in, out := &in.LastComplete, &out.LastComplete
		*out = new(string)
		**out = **in
	}
	if in.LastError != nil {
		in, out := &in.LastError, &out.LastError
		*out = new(string)
		**out = **in
	}
	if in.LogpullOptions != nil {
		in, out := &in.LogpullOptions, &out.LogpullOptions
		*out = new(string)
		**out = **in
	}
	if in.MaxUploadBytes != nil {
		in, out := &in.MaxUploadBytes, &out.MaxUploadBytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxUploadIntervalSeconds != nil {
		in, out := &in.MaxUploadIntervalSeconds, &out.MaxUploadIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaxUploadRecords != nil {
		in, out := &in.MaxUploadRecords, &out.MaxUploadRecords
		*out = new(float64)
		**out = **in
	}
	if in.OutputOptions != nil {
		in, out := &in.OutputOptions, &out.OutputOptions
		*out = new(OutputOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnershipChallenge != nil {
		in, out := &in.OwnershipChallenge, &out.OwnershipChallenge
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(string)
		**out = **in
	}
	if in.DestinationConf != nil {
		in, out := &in.DestinationConf, &out.DestinationConf
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.LogpullOptions != nil {
		in, out := &in.LogpullOptions, &out.LogpullOptions
		*out = new(string)
		**out = **in
	}
	if in.MaxUploadBytes != nil {
		in, out := &in.MaxUploadBytes, &out.MaxUploadBytes
		*out = new(float64)
		**out = **in
	}
	if in.MaxUploadIntervalSeconds != nil {
		in, out := &in.MaxUploadIntervalSeconds, &out.MaxUploadIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MaxUploadRecords != nil {
		in, out := &in.MaxUploadRecords, &out.MaxUploadRecords
		*out = new(float64)
		**out = **in
	}
	if in.OutputOptions != nil {
		in, out := &in.OutputOptions, &out.OutputOptions
		*out = new(OutputOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.OwnershipChallenge != nil {
		in, out := &in.OwnershipChallenge, &out.OwnershipChallenge
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputOptionsInitParameters) DeepCopyInto(out *OutputOptionsInitParameters) {
	*out = *in
	if in.BatchPrefix != nil {
		in, out := &in.BatchPrefix, &out.BatchPrefix
		*out = new(string)
		**out = **in
	}
	if in.BatchSuffix != nil {
		in, out := &in.BatchSuffix, &out.BatchSuffix
		*out = new(string)
		**out = **in
	}
	if in.Cve20214428 != nil {
		in, out := &in.Cve20214428, &out.Cve20214428
		*out = new(bool)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.FieldNames != nil {
		in, out := &in.FieldNames, &out.FieldNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutputType != nil {
		in, out := &in.OutputType, &out.OutputType
		*out = new(string)
		**out = **in
	}
	if in.RecordDelimiter != nil {
		in, out := &in.RecordDelimiter, &out.RecordDelimiter
		*out = new(string)
		**out = **in
	}
	if in.RecordPrefix != nil {
		in, out := &in.RecordPrefix, &out.RecordPrefix
		*out = new(string)
		**out = **in
	}
	if in.RecordSuffix != nil {
		in, out := &in.RecordSuffix, &out.RecordSuffix
		*out = new(string)
		**out = **in
	}
	if in.RecordTemplate != nil {
		in, out := &in.RecordTemplate, &out.RecordTemplate
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
	if in.TimestampFormat != nil {
		in, out := &in.TimestampFormat, &out.TimestampFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputOptionsInitParameters.
func (in *OutputOptionsInitParameters) DeepCopy() *OutputOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OutputOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputOptionsObservation) DeepCopyInto(out *OutputOptionsObservation) {
	*out = *in
	if in.BatchPrefix != nil {
		in, out := &in.BatchPrefix, &out.BatchPrefix
		*out = new(string)
		**out = **in
	}
	if in.BatchSuffix != nil {
		in, out := &in.BatchSuffix, &out.BatchSuffix
		*out = new(string)
		**out = **in
	}
	if in.Cve20214428 != nil {
		in, out := &in.Cve20214428, &out.Cve20214428
		*out = new(bool)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.FieldNames != nil {
		in, out := &in.FieldNames, &out.FieldNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutputType != nil {
		in, out := &in.OutputType, &out.OutputType
		*out = new(string)
		**out = **in
	}
	if in.RecordDelimiter != nil {
		in, out := &in.RecordDelimiter, &out.RecordDelimiter
		*out = new(string)
		**out = **in
	}
	if in.RecordPrefix != nil {
		in, out := &in.RecordPrefix, &out.RecordPrefix
		*out = new(string)
		**out = **in
	}
	if in.RecordSuffix != nil {
		in, out := &in.RecordSuffix, &out.RecordSuffix
		*out = new(string)
		**out = **in
	}
	if in.RecordTemplate != nil {
		in, out := &in.RecordTemplate, &out.RecordTemplate
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
	if in.TimestampFormat != nil {
		in, out := &in.TimestampFormat, &out.TimestampFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputOptionsObservation.
func (in *OutputOptionsObservation) DeepCopy() *OutputOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OutputOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutputOptionsParameters) DeepCopyInto(out *OutputOptionsParameters) {
	*out = *in
	if in.BatchPrefix != nil {
		in, out := &in.BatchPrefix, &out.BatchPrefix
		*out = new(string)
		**out = **in
	}
	if in.BatchSuffix != nil {
		in, out := &in.BatchSuffix, &out.BatchSuffix
		*out = new(string)
		**out = **in
	}
	if in.Cve20214428 != nil {
		in, out := &in.Cve20214428, &out.Cve20214428
		*out = new(bool)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.FieldNames != nil {
		in, out := &in.FieldNames, &out.FieldNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OutputType != nil {
		in, out := &in.OutputType, &out.OutputType
		*out = new(string)
		**out = **in
	}
	if in.RecordDelimiter != nil {
		in, out := &in.RecordDelimiter, &out.RecordDelimiter
		*out = new(string)
		**out = **in
	}
	if in.RecordPrefix != nil {
		in, out := &in.RecordPrefix, &out.RecordPrefix
		*out = new(string)
		**out = **in
	}
	if in.RecordSuffix != nil {
		in, out := &in.RecordSuffix, &out.RecordSuffix
		*out = new(string)
		**out = **in
	}
	if in.RecordTemplate != nil {
		in, out := &in.RecordTemplate, &out.RecordTemplate
		*out = new(string)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
	if in.TimestampFormat != nil {
		in, out := &in.TimestampFormat, &out.TimestampFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutputOptionsParameters.
func (in *OutputOptionsParameters) DeepCopy() *OutputOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OutputOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallenge) DeepCopyInto(out *OwnershipChallenge) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallenge.
func (in *OwnershipChallenge) DeepCopy() *OwnershipChallenge {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallenge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OwnershipChallenge) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallengeInitParameters) DeepCopyInto(out *OwnershipChallengeInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.DestinationConf != nil {
		in, out := &in.DestinationConf, &out.DestinationConf
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallengeInitParameters.
func (in *OwnershipChallengeInitParameters) DeepCopy() *OwnershipChallengeInitParameters {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallengeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallengeList) DeepCopyInto(out *OwnershipChallengeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OwnershipChallenge, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallengeList.
func (in *OwnershipChallengeList) DeepCopy() *OwnershipChallengeList {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallengeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OwnershipChallengeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallengeObservation) DeepCopyInto(out *OwnershipChallengeObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.DestinationConf != nil {
		in, out := &in.DestinationConf, &out.DestinationConf
		*out = new(string)
		**out = **in
	}
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Valid != nil {
		in, out := &in.Valid, &out.Valid
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallengeObservation.
func (in *OwnershipChallengeObservation) DeepCopy() *OwnershipChallengeObservation {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallengeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallengeParameters) DeepCopyInto(out *OwnershipChallengeParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.DestinationConf != nil {
		in, out := &in.DestinationConf, &out.DestinationConf
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallengeParameters.
func (in *OwnershipChallengeParameters) DeepCopy() *OwnershipChallengeParameters {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallengeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallengeSpec) DeepCopyInto(out *OwnershipChallengeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallengeSpec.
func (in *OwnershipChallengeSpec) DeepCopy() *OwnershipChallengeSpec {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallengeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OwnershipChallengeStatus) DeepCopyInto(out *OwnershipChallengeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OwnershipChallengeStatus.
func (in *OwnershipChallengeStatus) DeepCopy() *OwnershipChallengeStatus {
	if in == nil {
		return nil
	}
	out := new(OwnershipChallengeStatus)
	in.DeepCopyInto(out)
	return out
}
