// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RoutingAddressInitParameters struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The contact email address of the user.
	// The contact email address of the user.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`
}

type RoutingAddressObservation struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The date and time the destination address has been created.
	// The date and time the destination address has been created.
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// (String) The contact email address of the user.
	// The contact email address of the user.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`

	// (String) Destination address identifier.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The date and time the destination address was last modified.
	// The date and time the destination address was last modified.
	Modified *string `json:"modified,omitempty" tf:"modified,omitempty"`

	// (String) Destination address tag. (Deprecated, replaced by destination address identifier)
	// Destination address tag. (Deprecated, replaced by destination address identifier)
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`

	// (String) The date and time the destination address has been verified. Null means not verified yet.
	// The date and time the destination address has been verified. Null means not verified yet.
	Verified *string `json:"verified,omitempty" tf:"verified,omitempty"`
}

type RoutingAddressParameters struct {

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The contact email address of the user.
	// The contact email address of the user.
	// +kubebuilder:validation:Optional
	Email *string `json:"email,omitempty" tf:"email,omitempty"`
}

// RoutingAddressSpec defines the desired state of RoutingAddress
type RoutingAddressSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RoutingAddressParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RoutingAddressInitParameters `json:"initProvider,omitempty"`
}

// RoutingAddressStatus defines the observed state of RoutingAddress.
type RoutingAddressStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RoutingAddressObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RoutingAddress is the Schema for the RoutingAddresss API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type RoutingAddress struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.email) || (has(self.initProvider) && has(self.initProvider.email))",message="spec.forProvider.email is a required parameter"
	Spec   RoutingAddressSpec   `json:"spec"`
	Status RoutingAddressStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RoutingAddressList contains a list of RoutingAddresss
type RoutingAddressList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RoutingAddress `json:"items"`
}

// Repository type metadata.
var (
	RoutingAddress_Kind             = "RoutingAddress"
	RoutingAddress_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RoutingAddress_Kind}.String()
	RoutingAddress_KindAPIVersion   = RoutingAddress_Kind + "." + CRDGroupVersion.String()
	RoutingAddress_GroupVersionKind = CRDGroupVersion.WithKind(RoutingAddress_Kind)
)

func init() {
	SchemeBuilder.Register(&RoutingAddress{}, &RoutingAddressList{})
}
