// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TurnAppInitParameters struct {

	// (String) The account identifier tag.
	// The account identifier tag.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// generated unique identifier for a item.
	// A Cloudflare-generated unique identifier for a item.
	KeyID *string `json:"keyId,omitempty" tf:"key_id,omitempty"`
}

type TurnAppObservation struct {

	// (String) The account identifier tag.
	// The account identifier tag.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The date and time the item was created.
	// The date and time the item was created.
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Bearer token
	// Bearer token
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// generated unique identifier for a item.
	// A Cloudflare-generated unique identifier for a item.
	KeyID *string `json:"keyId,omitempty" tf:"key_id,omitempty"`

	// (String) The date and time the item was last modified.
	// The date and time the item was last modified.
	Modified *string `json:"modified,omitempty" tf:"modified,omitempty"`

	// generated unique identifier for a item.
	// A Cloudflare-generated unique identifier for a item.
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type TurnAppParameters struct {

	// (String) The account identifier tag.
	// The account identifier tag.
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// generated unique identifier for a item.
	// A Cloudflare-generated unique identifier for a item.
	// +kubebuilder:validation:Optional
	KeyID *string `json:"keyId,omitempty" tf:"key_id,omitempty"`
}

// TurnAppSpec defines the desired state of TurnApp
type TurnAppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TurnAppParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TurnAppInitParameters `json:"initProvider,omitempty"`
}

// TurnAppStatus defines the observed state of TurnApp.
type TurnAppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TurnAppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TurnApp is the Schema for the TurnApps API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type TurnApp struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	Spec   TurnAppSpec   `json:"spec"`
	Status TurnAppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TurnAppList contains a list of TurnApps
type TurnAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TurnApp `json:"items"`
}

// Repository type metadata.
var (
	TurnApp_Kind             = "TurnApp"
	TurnApp_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TurnApp_Kind}.String()
	TurnApp_KindAPIVersion   = TurnApp_Kind + "." + CRDGroupVersion.String()
	TurnApp_GroupVersionKind = CRDGroupVersion.WithKind(TurnApp_Kind)
)

func init() {
	SchemeBuilder.Register(&TurnApp{}, &TurnAppList{})
}
