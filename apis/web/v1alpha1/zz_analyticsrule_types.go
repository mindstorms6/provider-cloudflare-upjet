// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyticsRuleInitParameters struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String)
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (Boolean) Whether the rule includes or excludes traffic from being measured.
	// Whether the rule includes or excludes traffic from being measured.
	Inclusive *bool `json:"inclusive,omitempty" tf:"inclusive,omitempty"`

	// (Boolean) Whether the rule is paused or not.
	// Whether the rule is paused or not.
	IsPaused *bool `json:"isPaused,omitempty" tf:"is_paused,omitempty"`

	// (List of String)
	Paths []*string `json:"paths,omitempty" tf:"paths,omitempty"`

	// (String) The Web Analytics ruleset identifier.
	// The Web Analytics ruleset identifier.
	RulesetID *string `json:"rulesetId,omitempty" tf:"ruleset_id,omitempty"`
}

type AnalyticsRuleObservation struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String)
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// (String)
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (String) The Web Analytics rule identifier.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Whether the rule includes or excludes traffic from being measured.
	// Whether the rule includes or excludes traffic from being measured.
	Inclusive *bool `json:"inclusive,omitempty" tf:"inclusive,omitempty"`

	// (Boolean) Whether the rule is paused or not.
	// Whether the rule is paused or not.
	IsPaused *bool `json:"isPaused,omitempty" tf:"is_paused,omitempty"`

	// (List of String)
	Paths []*string `json:"paths,omitempty" tf:"paths,omitempty"`

	// (Number)
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (String) The Web Analytics ruleset identifier.
	// The Web Analytics ruleset identifier.
	RulesetID *string `json:"rulesetId,omitempty" tf:"ruleset_id,omitempty"`
}

type AnalyticsRuleParameters struct {

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (Boolean) Whether the rule includes or excludes traffic from being measured.
	// Whether the rule includes or excludes traffic from being measured.
	// +kubebuilder:validation:Optional
	Inclusive *bool `json:"inclusive,omitempty" tf:"inclusive,omitempty"`

	// (Boolean) Whether the rule is paused or not.
	// Whether the rule is paused or not.
	// +kubebuilder:validation:Optional
	IsPaused *bool `json:"isPaused,omitempty" tf:"is_paused,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	Paths []*string `json:"paths,omitempty" tf:"paths,omitempty"`

	// (String) The Web Analytics ruleset identifier.
	// The Web Analytics ruleset identifier.
	// +kubebuilder:validation:Optional
	RulesetID *string `json:"rulesetId,omitempty" tf:"ruleset_id,omitempty"`
}

// AnalyticsRuleSpec defines the desired state of AnalyticsRule
type AnalyticsRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AnalyticsRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AnalyticsRuleInitParameters `json:"initProvider,omitempty"`
}

// AnalyticsRuleStatus defines the observed state of AnalyticsRule.
type AnalyticsRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AnalyticsRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AnalyticsRule is the Schema for the AnalyticsRules API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type AnalyticsRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rulesetId) || (has(self.initProvider) && has(self.initProvider.rulesetId))",message="spec.forProvider.rulesetId is a required parameter"
	Spec   AnalyticsRuleSpec   `json:"spec"`
	Status AnalyticsRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AnalyticsRuleList contains a list of AnalyticsRules
type AnalyticsRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AnalyticsRule `json:"items"`
}

// Repository type metadata.
var (
	AnalyticsRule_Kind             = "AnalyticsRule"
	AnalyticsRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AnalyticsRule_Kind}.String()
	AnalyticsRule_KindAPIVersion   = AnalyticsRule_Kind + "." + CRDGroupVersion.String()
	AnalyticsRule_GroupVersionKind = CRDGroupVersion.WithKind(AnalyticsRule_Kind)
)

func init() {
	SchemeBuilder.Register(&AnalyticsRule{}, &AnalyticsRuleList{})
}
