// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountInitParameters struct {

	// (Attributes) Account settings (see below for nested schema)
	Settings *SettingsInitParameters `json:"settings,omitempty" tf:"settings,omitempty"`

	// serve customers, use standard. for enterprise customers, use enterprise.
	// the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// to/manage-accounts/ (see below for nested schema)
	Unit *UnitInitParameters `json:"unit,omitempty" tf:"unit,omitempty"`
}

type AccountObservation struct {

	// (String) Timestamp for the creation of the account
	// Timestamp for the creation of the account
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String) Identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Attributes) Account settings (see below for nested schema)
	Settings *SettingsObservation `json:"settings,omitempty" tf:"settings,omitempty"`

	// serve customers, use standard. for enterprise customers, use enterprise.
	// the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// to/manage-accounts/ (see below for nested schema)
	Unit *UnitObservation `json:"unit,omitempty" tf:"unit,omitempty"`
}

type AccountParameters struct {

	// (Attributes) Account settings (see below for nested schema)
	// +kubebuilder:validation:Optional
	Settings *SettingsParameters `json:"settings,omitempty" tf:"settings,omitempty"`

	// serve customers, use standard. for enterprise customers, use enterprise.
	// the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// to/manage-accounts/ (see below for nested schema)
	// +kubebuilder:validation:Optional
	Unit *UnitParameters `json:"unit,omitempty" tf:"unit,omitempty"`
}

type SettingsInitParameters struct {

	// (String) Sets an abuse contact email to notify for abuse reports.
	// Sets an abuse contact email to notify for abuse reports.
	AbuseContactEmail *string `json:"abuseContactEmail,omitempty" tf:"abuse_contact_email,omitempty"`

	// (String) Specifies the default nameservers to be used for new zones added to this account.
	// Specifies the default nameservers to be used for new zones added to this account.
	//
	// - `cloudflare.standard` for Cloudflare-branded nameservers
	// - `custom.account` for account custom nameservers
	// - `custom.tenant` for tenant custom nameservers
	//
	// See [Custom Nameservers](https://developers.cloudflare.com/dns/additional-options/custom-nameservers/)
	// for more information.
	//
	// Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
	DefaultNameservers *string `json:"defaultNameservers,omitempty" tf:"default_nameservers,omitempty"`

	// Factor Authentication is enabled
	// Indicates whether membership in this account requires that
	// Two-Factor Authentication is enabled
	EnforceTwofactor *bool `json:"enforceTwofactor,omitempty" tf:"enforce_twofactor,omitempty"`

	// level custom
	// nameservers by default.
	// Indicates whether new zones should use the account-level custom
	// nameservers by default.
	//
	// Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
	UseAccountCustomNsByDefault *bool `json:"useAccountCustomNsByDefault,omitempty" tf:"use_account_custom_ns_by_default,omitempty"`
}

type SettingsObservation struct {

	// (String) Sets an abuse contact email to notify for abuse reports.
	// Sets an abuse contact email to notify for abuse reports.
	AbuseContactEmail *string `json:"abuseContactEmail,omitempty" tf:"abuse_contact_email,omitempty"`

	// (String) Specifies the default nameservers to be used for new zones added to this account.
	// Specifies the default nameservers to be used for new zones added to this account.
	//
	// - `cloudflare.standard` for Cloudflare-branded nameservers
	// - `custom.account` for account custom nameservers
	// - `custom.tenant` for tenant custom nameservers
	//
	// See [Custom Nameservers](https://developers.cloudflare.com/dns/additional-options/custom-nameservers/)
	// for more information.
	//
	// Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
	DefaultNameservers *string `json:"defaultNameservers,omitempty" tf:"default_nameservers,omitempty"`

	// Factor Authentication is enabled
	// Indicates whether membership in this account requires that
	// Two-Factor Authentication is enabled
	EnforceTwofactor *bool `json:"enforceTwofactor,omitempty" tf:"enforce_twofactor,omitempty"`

	// level custom
	// nameservers by default.
	// Indicates whether new zones should use the account-level custom
	// nameservers by default.
	//
	// Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
	UseAccountCustomNsByDefault *bool `json:"useAccountCustomNsByDefault,omitempty" tf:"use_account_custom_ns_by_default,omitempty"`
}

type SettingsParameters struct {

	// (String) Sets an abuse contact email to notify for abuse reports.
	// Sets an abuse contact email to notify for abuse reports.
	// +kubebuilder:validation:Optional
	AbuseContactEmail *string `json:"abuseContactEmail,omitempty" tf:"abuse_contact_email,omitempty"`

	// (String) Specifies the default nameservers to be used for new zones added to this account.
	// Specifies the default nameservers to be used for new zones added to this account.
	//
	// - `cloudflare.standard` for Cloudflare-branded nameservers
	// - `custom.account` for account custom nameservers
	// - `custom.tenant` for tenant custom nameservers
	//
	// See [Custom Nameservers](https://developers.cloudflare.com/dns/additional-options/custom-nameservers/)
	// for more information.
	//
	// Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
	// +kubebuilder:validation:Optional
	DefaultNameservers *string `json:"defaultNameservers,omitempty" tf:"default_nameservers,omitempty"`

	// Factor Authentication is enabled
	// Indicates whether membership in this account requires that
	// Two-Factor Authentication is enabled
	// +kubebuilder:validation:Optional
	EnforceTwofactor *bool `json:"enforceTwofactor,omitempty" tf:"enforce_twofactor,omitempty"`

	// level custom
	// nameservers by default.
	// Indicates whether new zones should use the account-level custom
	// nameservers by default.
	//
	// Deprecated in favor of [DNS Settings](https://developers.cloudflare.com/api/operations/dns-settings-for-an-account-update-dns-settings).
	// +kubebuilder:validation:Optional
	UseAccountCustomNsByDefault *bool `json:"useAccountCustomNsByDefault,omitempty" tf:"use_account_custom_ns_by_default,omitempty"`
}

type UnitInitParameters struct {

	// (String) Identifier
	// Tenant unit ID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type UnitObservation struct {

	// (String) Identifier
	// Tenant unit ID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type UnitParameters struct {

	// (String) Identifier
	// Tenant unit ID
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

// AccountSpec defines the desired state of Account
type AccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccountInitParameters `json:"initProvider,omitempty"`
}

// AccountStatus defines the observed state of Account.
type AccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Account is the Schema for the Accounts API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type Account struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   AccountSpec   `json:"spec"`
	Status AccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountList contains a list of Accounts
type AccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Account `json:"items"`
}

// Repository type metadata.
var (
	Account_Kind             = "Account"
	Account_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Account_Kind}.String()
	Account_KindAPIVersion   = Account_Kind + "." + CRDGroupVersion.String()
	Account_GroupVersionKind = CRDGroupVersion.WithKind(Account_Kind)
)

func init() {
	SchemeBuilder.Register(&Account{}, &AccountList{})
}
