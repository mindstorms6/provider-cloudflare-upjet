// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ModifiedRouteInitParameters struct {

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *ScopeInitParameters `json:"scope,omitempty" tf:"scope,omitempty"`
}

type ModifiedRouteObservation struct {

	// (String) When the route was created.
	// When the route was created.
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Identifier
	// Identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) When the route was last modified.
	// When the route was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *ScopeObservation `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type ModifiedRouteParameters struct {

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Scope *ScopeParameters `json:"scope,omitempty" tf:"scope,omitempty"`
}

type RouteInitParameters struct {

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *RouteScopeInitParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RouteObservation struct {

	// (String) When the route was created.
	// When the route was created.
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Identifier
	// Identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) When the route was last modified.
	// When the route was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *RouteScopeObservation `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RouteParameters struct {

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	// +kubebuilder:validation:Optional
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Scope *RouteScopeParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RouteScopeInitParameters struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type RouteScopeObservation struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type RouteScopeParameters struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	// +kubebuilder:validation:Optional
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	// +kubebuilder:validation:Optional
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type RoutesInitParameters struct {

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *RoutesScopeInitParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RoutesObservation struct {

	// (String) When the route was created.
	// When the route was created.
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on,omitempty"`

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Identifier
	// Identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) When the route was last modified.
	// When the route was last modified.
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *RoutesScopeObservation `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RoutesParameters struct {

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	// +kubebuilder:validation:Optional
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Scope *RoutesScopeParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type RoutesScopeInitParameters struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type RoutesScopeObservation struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type RoutesScopeParameters struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	// +kubebuilder:validation:Optional
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	// +kubebuilder:validation:Optional
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type ScopeInitParameters struct {
}

type ScopeObservation struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type ScopeParameters struct {
}

type WanStaticRouteInitParameters struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes) (see below for nested schema)
	ModifiedRoute *ModifiedRouteInitParameters `json:"modifiedRoute,omitempty" tf:"modified_route,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) (see below for nested schema)
	Route *RouteInitParameters `json:"route,omitempty" tf:"route,omitempty"`

	// (String) Identifier
	// Identifier
	RouteID *string `json:"routeId,omitempty" tf:"route_id,omitempty"`

	// (Attributes List) (see below for nested schema)
	Routes []RoutesInitParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *WanStaticRouteScopeInitParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type WanStaticRouteObservation struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean)
	Modified *bool `json:"modified,omitempty" tf:"modified,omitempty"`

	// (Attributes) (see below for nested schema)
	ModifiedRoute *ModifiedRouteObservation `json:"modifiedRoute,omitempty" tf:"modified_route,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) (see below for nested schema)
	Route *RouteObservation `json:"route,omitempty" tf:"route,omitempty"`

	// (String) Identifier
	// Identifier
	RouteID *string `json:"routeId,omitempty" tf:"route_id,omitempty"`

	// (Attributes List) (see below for nested schema)
	Routes []RoutesObservation `json:"routes,omitempty" tf:"routes,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	Scope *WanStaticRouteScopeObservation `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type WanStaticRouteParameters struct {

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) An optional human provided description of the static route.
	// An optional human provided description of the static route.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ModifiedRoute *ModifiedRouteParameters `json:"modifiedRoute,omitempty" tf:"modified_route,omitempty"`

	// hop IP Address for the static route.
	// The next-hop IP Address for the static route.
	// +kubebuilder:validation:Optional
	Nexthop *string `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// Domain Routing format.
	// IP Prefix in Classless Inter-Domain Routing format.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Priority of the static route.
	// Priority of the static route.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Route *RouteParameters `json:"route,omitempty" tf:"route,omitempty"`

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	RouteID *string `json:"routeId,omitempty" tf:"route_id,omitempty"`

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Routes []RoutesParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// (Attributes) Used only for ECMP routes. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Scope *WanStaticRouteScopeParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// if provided.
	// Optional weight of the ECMP scope - if provided.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type WanStaticRouteScopeInitParameters struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type WanStaticRouteScopeObservation struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

type WanStaticRouteScopeParameters struct {

	// (List of String) List of colo names for the ECMP scope.
	// List of colo names for the ECMP scope.
	// +kubebuilder:validation:Optional
	ColoNames []*string `json:"coloNames,omitempty" tf:"colo_names,omitempty"`

	// (List of String) List of colo regions for the ECMP scope.
	// List of colo regions for the ECMP scope.
	// +kubebuilder:validation:Optional
	ColoRegions []*string `json:"coloRegions,omitempty" tf:"colo_regions,omitempty"`
}

// WanStaticRouteSpec defines the desired state of WanStaticRoute
type WanStaticRouteSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WanStaticRouteParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WanStaticRouteInitParameters `json:"initProvider,omitempty"`
}

// WanStaticRouteStatus defines the observed state of WanStaticRoute.
type WanStaticRouteStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WanStaticRouteObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WanStaticRoute is the Schema for the WanStaticRoutes API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type WanStaticRoute struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.routes) || (has(self.initProvider) && has(self.initProvider.routes))",message="spec.forProvider.routes is a required parameter"
	Spec   WanStaticRouteSpec   `json:"spec"`
	Status WanStaticRouteStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WanStaticRouteList contains a list of WanStaticRoutes
type WanStaticRouteList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WanStaticRoute `json:"items"`
}

// Repository type metadata.
var (
	WanStaticRoute_Kind             = "WanStaticRoute"
	WanStaticRoute_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WanStaticRoute_Kind}.String()
	WanStaticRoute_KindAPIVersion   = WanStaticRoute_Kind + "." + CRDGroupVersion.String()
	WanStaticRoute_GroupVersionKind = CRDGroupVersion.WithKind(WanStaticRoute_Kind)
)

func init() {
	SchemeBuilder.Register(&WanStaticRoute{}, &WanStaticRouteList{})
}
