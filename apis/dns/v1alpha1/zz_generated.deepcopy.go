//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttackMitigationInitParameters) DeepCopyInto(out *AttackMitigationInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.OnlyWhenUpstreamUnhealthy != nil {
		in, out := &in.OnlyWhenUpstreamUnhealthy, &out.OnlyWhenUpstreamUnhealthy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttackMitigationInitParameters.
func (in *AttackMitigationInitParameters) DeepCopy() *AttackMitigationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttackMitigationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttackMitigationObservation) DeepCopyInto(out *AttackMitigationObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.OnlyWhenUpstreamUnhealthy != nil {
		in, out := &in.OnlyWhenUpstreamUnhealthy, &out.OnlyWhenUpstreamUnhealthy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttackMitigationObservation.
func (in *AttackMitigationObservation) DeepCopy() *AttackMitigationObservation {
	if in == nil {
		return nil
	}
	out := new(AttackMitigationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttackMitigationParameters) DeepCopyInto(out *AttackMitigationParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.OnlyWhenUpstreamUnhealthy != nil {
		in, out := &in.OnlyWhenUpstreamUnhealthy, &out.OnlyWhenUpstreamUnhealthy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttackMitigationParameters.
func (in *AttackMitigationParameters) DeepCopy() *AttackMitigationParameters {
	if in == nil {
		return nil
	}
	out := new(AttackMitigationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataInitParameters) DeepCopyInto(out *DataInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(float64)
		**out = **in
	}
	if in.Altitude != nil {
		in, out := &in.Altitude, &out.Altitude
		*out = new(float64)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Digest != nil {
		in, out := &in.Digest, &out.Digest
		*out = new(string)
		**out = **in
	}
	if in.DigestType != nil {
		in, out := &in.DigestType, &out.DigestType
		*out = new(float64)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = new(float64)
		**out = **in
	}
	if in.KeyTag != nil {
		in, out := &in.KeyTag, &out.KeyTag
		*out = new(float64)
		**out = **in
	}
	if in.LatDegrees != nil {
		in, out := &in.LatDegrees, &out.LatDegrees
		*out = new(float64)
		**out = **in
	}
	if in.LatDirection != nil {
		in, out := &in.LatDirection, &out.LatDirection
		*out = new(string)
		**out = **in
	}
	if in.LatMinutes != nil {
		in, out := &in.LatMinutes, &out.LatMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LatSeconds != nil {
		in, out := &in.LatSeconds, &out.LatSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LongDegrees != nil {
		in, out := &in.LongDegrees, &out.LongDegrees
		*out = new(float64)
		**out = **in
	}
	if in.LongDirection != nil {
		in, out := &in.LongDirection, &out.LongDirection
		*out = new(string)
		**out = **in
	}
	if in.LongMinutes != nil {
		in, out := &in.LongMinutes, &out.LongMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LongSeconds != nil {
		in, out := &in.LongSeconds, &out.LongSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MatchingType != nil {
		in, out := &in.MatchingType, &out.MatchingType
		*out = new(float64)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrecisionHorz != nil {
		in, out := &in.PrecisionHorz, &out.PrecisionHorz
		*out = new(float64)
		**out = **in
	}
	if in.PrecisionVert != nil {
		in, out := &in.PrecisionVert, &out.PrecisionVert
		*out = new(float64)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Replacement != nil {
		in, out := &in.Replacement, &out.Replacement
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(float64)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
	if in.Usage != nil {
		in, out := &in.Usage, &out.Usage
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataInitParameters.
func (in *DataInitParameters) DeepCopy() *DataInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataObservation) DeepCopyInto(out *DataObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(float64)
		**out = **in
	}
	if in.Altitude != nil {
		in, out := &in.Altitude, &out.Altitude
		*out = new(float64)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Digest != nil {
		in, out := &in.Digest, &out.Digest
		*out = new(string)
		**out = **in
	}
	if in.DigestType != nil {
		in, out := &in.DigestType, &out.DigestType
		*out = new(float64)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = new(float64)
		**out = **in
	}
	if in.KeyTag != nil {
		in, out := &in.KeyTag, &out.KeyTag
		*out = new(float64)
		**out = **in
	}
	if in.LatDegrees != nil {
		in, out := &in.LatDegrees, &out.LatDegrees
		*out = new(float64)
		**out = **in
	}
	if in.LatDirection != nil {
		in, out := &in.LatDirection, &out.LatDirection
		*out = new(string)
		**out = **in
	}
	if in.LatMinutes != nil {
		in, out := &in.LatMinutes, &out.LatMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LatSeconds != nil {
		in, out := &in.LatSeconds, &out.LatSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LongDegrees != nil {
		in, out := &in.LongDegrees, &out.LongDegrees
		*out = new(float64)
		**out = **in
	}
	if in.LongDirection != nil {
		in, out := &in.LongDirection, &out.LongDirection
		*out = new(string)
		**out = **in
	}
	if in.LongMinutes != nil {
		in, out := &in.LongMinutes, &out.LongMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LongSeconds != nil {
		in, out := &in.LongSeconds, &out.LongSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MatchingType != nil {
		in, out := &in.MatchingType, &out.MatchingType
		*out = new(float64)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrecisionHorz != nil {
		in, out := &in.PrecisionHorz, &out.PrecisionHorz
		*out = new(float64)
		**out = **in
	}
	if in.PrecisionVert != nil {
		in, out := &in.PrecisionVert, &out.PrecisionVert
		*out = new(float64)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Replacement != nil {
		in, out := &in.Replacement, &out.Replacement
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(float64)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
	if in.Usage != nil {
		in, out := &in.Usage, &out.Usage
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataObservation.
func (in *DataObservation) DeepCopy() *DataObservation {
	if in == nil {
		return nil
	}
	out := new(DataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataParameters) DeepCopyInto(out *DataParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(float64)
		**out = **in
	}
	if in.Altitude != nil {
		in, out := &in.Altitude, &out.Altitude
		*out = new(float64)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Digest != nil {
		in, out := &in.Digest, &out.Digest
		*out = new(string)
		**out = **in
	}
	if in.DigestType != nil {
		in, out := &in.DigestType, &out.DigestType
		*out = new(float64)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = new(float64)
		**out = **in
	}
	if in.KeyTag != nil {
		in, out := &in.KeyTag, &out.KeyTag
		*out = new(float64)
		**out = **in
	}
	if in.LatDegrees != nil {
		in, out := &in.LatDegrees, &out.LatDegrees
		*out = new(float64)
		**out = **in
	}
	if in.LatDirection != nil {
		in, out := &in.LatDirection, &out.LatDirection
		*out = new(string)
		**out = **in
	}
	if in.LatMinutes != nil {
		in, out := &in.LatMinutes, &out.LatMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LatSeconds != nil {
		in, out := &in.LatSeconds, &out.LatSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LongDegrees != nil {
		in, out := &in.LongDegrees, &out.LongDegrees
		*out = new(float64)
		**out = **in
	}
	if in.LongDirection != nil {
		in, out := &in.LongDirection, &out.LongDirection
		*out = new(string)
		**out = **in
	}
	if in.LongMinutes != nil {
		in, out := &in.LongMinutes, &out.LongMinutes
		*out = new(float64)
		**out = **in
	}
	if in.LongSeconds != nil {
		in, out := &in.LongSeconds, &out.LongSeconds
		*out = new(float64)
		**out = **in
	}
	if in.MatchingType != nil {
		in, out := &in.MatchingType, &out.MatchingType
		*out = new(float64)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrecisionHorz != nil {
		in, out := &in.PrecisionHorz, &out.PrecisionHorz
		*out = new(float64)
		**out = **in
	}
	if in.PrecisionVert != nil {
		in, out := &in.PrecisionVert, &out.PrecisionVert
		*out = new(float64)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(float64)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Replacement != nil {
		in, out := &in.Replacement, &out.Replacement
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(float64)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
	if in.Usage != nil {
		in, out := &in.Usage, &out.Usage
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataParameters.
func (in *DataParameters) DeepCopy() *DataParameters {
	if in == nil {
		return nil
	}
	out := new(DataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Firewall) DeepCopyInto(out *Firewall) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Firewall.
func (in *Firewall) DeepCopy() *Firewall {
	if in == nil {
		return nil
	}
	out := new(Firewall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Firewall) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallInitParameters) DeepCopyInto(out *FirewallInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AttackMitigation != nil {
		in, out := &in.AttackMitigation, &out.AttackMitigation
		*out = new(AttackMitigationInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DeprecateAnyRequests != nil {
		in, out := &in.DeprecateAnyRequests, &out.DeprecateAnyRequests
		*out = new(bool)
		**out = **in
	}
	if in.EcsFallback != nil {
		in, out := &in.EcsFallback, &out.EcsFallback
		*out = new(bool)
		**out = **in
	}
	if in.MaximumCacheTTL != nil {
		in, out := &in.MaximumCacheTTL, &out.MaximumCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.MinimumCacheTTL != nil {
		in, out := &in.MinimumCacheTTL, &out.MinimumCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCacheTTL != nil {
		in, out := &in.NegativeCacheTTL, &out.NegativeCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ratelimit != nil {
		in, out := &in.Ratelimit, &out.Ratelimit
		*out = new(float64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.UpstreamIps != nil {
		in, out := &in.UpstreamIps, &out.UpstreamIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallInitParameters.
func (in *FirewallInitParameters) DeepCopy() *FirewallInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallList) DeepCopyInto(out *FirewallList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Firewall, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallList.
func (in *FirewallList) DeepCopy() *FirewallList {
	if in == nil {
		return nil
	}
	out := new(FirewallList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallObservation) DeepCopyInto(out *FirewallObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AttackMitigation != nil {
		in, out := &in.AttackMitigation, &out.AttackMitigation
		*out = new(AttackMitigationObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.DNSFirewallIps != nil {
		in, out := &in.DNSFirewallIps, &out.DNSFirewallIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DeprecateAnyRequests != nil {
		in, out := &in.DeprecateAnyRequests, &out.DeprecateAnyRequests
		*out = new(bool)
		**out = **in
	}
	if in.EcsFallback != nil {
		in, out := &in.EcsFallback, &out.EcsFallback
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaximumCacheTTL != nil {
		in, out := &in.MaximumCacheTTL, &out.MaximumCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.MinimumCacheTTL != nil {
		in, out := &in.MinimumCacheTTL, &out.MinimumCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.NegativeCacheTTL != nil {
		in, out := &in.NegativeCacheTTL, &out.NegativeCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ratelimit != nil {
		in, out := &in.Ratelimit, &out.Ratelimit
		*out = new(float64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.UpstreamIps != nil {
		in, out := &in.UpstreamIps, &out.UpstreamIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallObservation.
func (in *FirewallObservation) DeepCopy() *FirewallObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallParameters) DeepCopyInto(out *FirewallParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AttackMitigation != nil {
		in, out := &in.AttackMitigation, &out.AttackMitigation
		*out = new(AttackMitigationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.DeprecateAnyRequests != nil {
		in, out := &in.DeprecateAnyRequests, &out.DeprecateAnyRequests
		*out = new(bool)
		**out = **in
	}
	if in.EcsFallback != nil {
		in, out := &in.EcsFallback, &out.EcsFallback
		*out = new(bool)
		**out = **in
	}
	if in.MaximumCacheTTL != nil {
		in, out := &in.MaximumCacheTTL, &out.MaximumCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.MinimumCacheTTL != nil {
		in, out := &in.MinimumCacheTTL, &out.MinimumCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCacheTTL != nil {
		in, out := &in.NegativeCacheTTL, &out.NegativeCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ratelimit != nil {
		in, out := &in.Ratelimit, &out.Ratelimit
		*out = new(float64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.UpstreamIps != nil {
		in, out := &in.UpstreamIps, &out.UpstreamIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallParameters.
func (in *FirewallParameters) DeepCopy() *FirewallParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpec) DeepCopyInto(out *FirewallSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpec.
func (in *FirewallSpec) DeepCopy() *FirewallSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallStatus) DeepCopyInto(out *FirewallStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallStatus.
func (in *FirewallStatus) DeepCopy() *FirewallStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalDNSInitParameters) DeepCopyInto(out *InternalDNSInitParameters) {
	*out = *in
	if in.ReferenceZoneID != nil {
		in, out := &in.ReferenceZoneID, &out.ReferenceZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalDNSInitParameters.
func (in *InternalDNSInitParameters) DeepCopy() *InternalDNSInitParameters {
	if in == nil {
		return nil
	}
	out := new(InternalDNSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalDNSObservation) DeepCopyInto(out *InternalDNSObservation) {
	*out = *in
	if in.ReferenceZoneID != nil {
		in, out := &in.ReferenceZoneID, &out.ReferenceZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalDNSObservation.
func (in *InternalDNSObservation) DeepCopy() *InternalDNSObservation {
	if in == nil {
		return nil
	}
	out := new(InternalDNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalDNSParameters) DeepCopyInto(out *InternalDNSParameters) {
	*out = *in
	if in.ReferenceZoneID != nil {
		in, out := &in.ReferenceZoneID, &out.ReferenceZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalDNSParameters.
func (in *InternalDNSParameters) DeepCopy() *InternalDNSParameters {
	if in == nil {
		return nil
	}
	out := new(InternalDNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NameserversInitParameters) DeepCopyInto(out *NameserversInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NameserversInitParameters.
func (in *NameserversInitParameters) DeepCopy() *NameserversInitParameters {
	if in == nil {
		return nil
	}
	out := new(NameserversInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NameserversObservation) DeepCopyInto(out *NameserversObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NameserversObservation.
func (in *NameserversObservation) DeepCopy() *NameserversObservation {
	if in == nil {
		return nil
	}
	out := new(NameserversObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NameserversParameters) DeepCopyInto(out *NameserversParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NameserversParameters.
func (in *NameserversParameters) DeepCopy() *NameserversParameters {
	if in == nil {
		return nil
	}
	out := new(NameserversParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Record) DeepCopyInto(out *Record) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Record.
func (in *Record) DeepCopy() *Record {
	if in == nil {
		return nil
	}
	out := new(Record)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Record) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordInitParameters) DeepCopyInto(out *RecordInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(DataInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Proxied != nil {
		in, out := &in.Proxied, &out.Proxied
		*out = new(bool)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(SettingsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordInitParameters.
func (in *RecordInitParameters) DeepCopy() *RecordInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordList) DeepCopyInto(out *RecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Record, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordList.
func (in *RecordList) DeepCopy() *RecordList {
	if in == nil {
		return nil
	}
	out := new(RecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordObservation) DeepCopyInto(out *RecordObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CommentModifiedOn != nil {
		in, out := &in.CommentModifiedOn, &out.CommentModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(DataObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = new(string)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Proxiable != nil {
		in, out := &in.Proxiable, &out.Proxiable
		*out = new(bool)
		**out = **in
	}
	if in.Proxied != nil {
		in, out := &in.Proxied, &out.Proxied
		*out = new(bool)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(SettingsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagsModifiedOn != nil {
		in, out := &in.TagsModifiedOn, &out.TagsModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordObservation.
func (in *RecordObservation) DeepCopy() *RecordObservation {
	if in == nil {
		return nil
	}
	out := new(RecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordParameters) DeepCopyInto(out *RecordParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(DataParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Proxied != nil {
		in, out := &in.Proxied, &out.Proxied
		*out = new(bool)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(SettingsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordParameters.
func (in *RecordParameters) DeepCopy() *RecordParameters {
	if in == nil {
		return nil
	}
	out := new(RecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordSpec) DeepCopyInto(out *RecordSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordSpec.
func (in *RecordSpec) DeepCopy() *RecordSpec {
	if in == nil {
		return nil
	}
	out := new(RecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordStatus) DeepCopyInto(out *RecordStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordStatus.
func (in *RecordStatus) DeepCopy() *RecordStatus {
	if in == nil {
		return nil
	}
	out := new(RecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Settings) DeepCopyInto(out *Settings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Settings.
func (in *Settings) DeepCopy() *Settings {
	if in == nil {
		return nil
	}
	out := new(Settings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Settings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.FlattenCname != nil {
		in, out := &in.FlattenCname, &out.FlattenCname
		*out = new(bool)
		**out = **in
	}
	if in.IPv4Only != nil {
		in, out := &in.IPv4Only, &out.IPv4Only
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Only != nil {
		in, out := &in.IPv6Only, &out.IPv6Only
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters_2) DeepCopyInto(out *SettingsInitParameters_2) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ZoneDefaults != nil {
		in, out := &in.ZoneDefaults, &out.ZoneDefaults
		*out = new(ZoneDefaultsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters_2.
func (in *SettingsInitParameters_2) DeepCopy() *SettingsInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalView) DeepCopyInto(out *SettingsInternalView) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalView.
func (in *SettingsInternalView) DeepCopy() *SettingsInternalView {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalView)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingsInternalView) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalViewInitParameters) DeepCopyInto(out *SettingsInternalViewInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalViewInitParameters.
func (in *SettingsInternalViewInitParameters) DeepCopy() *SettingsInternalViewInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalViewInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalViewList) DeepCopyInto(out *SettingsInternalViewList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SettingsInternalView, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalViewList.
func (in *SettingsInternalViewList) DeepCopy() *SettingsInternalViewList {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalViewList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingsInternalViewList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalViewObservation) DeepCopyInto(out *SettingsInternalViewObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModifiedTime != nil {
		in, out := &in.ModifiedTime, &out.ModifiedTime
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalViewObservation.
func (in *SettingsInternalViewObservation) DeepCopy() *SettingsInternalViewObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalViewParameters) DeepCopyInto(out *SettingsInternalViewParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalViewParameters.
func (in *SettingsInternalViewParameters) DeepCopy() *SettingsInternalViewParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalViewSpec) DeepCopyInto(out *SettingsInternalViewSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalViewSpec.
func (in *SettingsInternalViewSpec) DeepCopy() *SettingsInternalViewSpec {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalViewSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInternalViewStatus) DeepCopyInto(out *SettingsInternalViewStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInternalViewStatus.
func (in *SettingsInternalViewStatus) DeepCopy() *SettingsInternalViewStatus {
	if in == nil {
		return nil
	}
	out := new(SettingsInternalViewStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsList) DeepCopyInto(out *SettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Settings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsList.
func (in *SettingsList) DeepCopy() *SettingsList {
	if in == nil {
		return nil
	}
	out := new(SettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.FlattenCname != nil {
		in, out := &in.FlattenCname, &out.FlattenCname
		*out = new(bool)
		**out = **in
	}
	if in.IPv4Only != nil {
		in, out := &in.IPv4Only, &out.IPv4Only
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Only != nil {
		in, out := &in.IPv6Only, &out.IPv6Only
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation_2) DeepCopyInto(out *SettingsObservation_2) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ZoneDefaults != nil {
		in, out := &in.ZoneDefaults, &out.ZoneDefaults
		*out = new(ZoneDefaultsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation_2.
func (in *SettingsObservation_2) DeepCopy() *SettingsObservation_2 {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.FlattenCname != nil {
		in, out := &in.FlattenCname, &out.FlattenCname
		*out = new(bool)
		**out = **in
	}
	if in.IPv4Only != nil {
		in, out := &in.IPv4Only, &out.IPv4Only
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Only != nil {
		in, out := &in.IPv6Only, &out.IPv6Only
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters_2) DeepCopyInto(out *SettingsParameters_2) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ZoneDefaults != nil {
		in, out := &in.ZoneDefaults, &out.ZoneDefaults
		*out = new(ZoneDefaultsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters_2.
func (in *SettingsParameters_2) DeepCopy() *SettingsParameters_2 {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSpec) DeepCopyInto(out *SettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSpec.
func (in *SettingsSpec) DeepCopy() *SettingsSpec {
	if in == nil {
		return nil
	}
	out := new(SettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsStatus) DeepCopyInto(out *SettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsStatus.
func (in *SettingsStatus) DeepCopy() *SettingsStatus {
	if in == nil {
		return nil
	}
	out := new(SettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoaInitParameters) DeepCopyInto(out *SoaInitParameters) {
	*out = *in
	if in.Expire != nil {
		in, out := &in.Expire, &out.Expire
		*out = new(float64)
		**out = **in
	}
	if in.MinTTL != nil {
		in, out := &in.MinTTL, &out.MinTTL
		*out = new(float64)
		**out = **in
	}
	if in.Mname != nil {
		in, out := &in.Mname, &out.Mname
		*out = new(string)
		**out = **in
	}
	if in.Refresh != nil {
		in, out := &in.Refresh, &out.Refresh
		*out = new(float64)
		**out = **in
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(float64)
		**out = **in
	}
	if in.Rname != nil {
		in, out := &in.Rname, &out.Rname
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoaInitParameters.
func (in *SoaInitParameters) DeepCopy() *SoaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SoaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoaObservation) DeepCopyInto(out *SoaObservation) {
	*out = *in
	if in.Expire != nil {
		in, out := &in.Expire, &out.Expire
		*out = new(float64)
		**out = **in
	}
	if in.MinTTL != nil {
		in, out := &in.MinTTL, &out.MinTTL
		*out = new(float64)
		**out = **in
	}
	if in.Mname != nil {
		in, out := &in.Mname, &out.Mname
		*out = new(string)
		**out = **in
	}
	if in.Refresh != nil {
		in, out := &in.Refresh, &out.Refresh
		*out = new(float64)
		**out = **in
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(float64)
		**out = **in
	}
	if in.Rname != nil {
		in, out := &in.Rname, &out.Rname
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoaObservation.
func (in *SoaObservation) DeepCopy() *SoaObservation {
	if in == nil {
		return nil
	}
	out := new(SoaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SoaParameters) DeepCopyInto(out *SoaParameters) {
	*out = *in
	if in.Expire != nil {
		in, out := &in.Expire, &out.Expire
		*out = new(float64)
		**out = **in
	}
	if in.MinTTL != nil {
		in, out := &in.MinTTL, &out.MinTTL
		*out = new(float64)
		**out = **in
	}
	if in.Mname != nil {
		in, out := &in.Mname, &out.Mname
		*out = new(string)
		**out = **in
	}
	if in.Refresh != nil {
		in, out := &in.Refresh, &out.Refresh
		*out = new(float64)
		**out = **in
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(float64)
		**out = **in
	}
	if in.Rname != nil {
		in, out := &in.Rname, &out.Rname
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SoaParameters.
func (in *SoaParameters) DeepCopy() *SoaParameters {
	if in == nil {
		return nil
	}
	out := new(SoaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneDefaultsInitParameters) DeepCopyInto(out *ZoneDefaultsInitParameters) {
	*out = *in
	if in.FlattenAllCnames != nil {
		in, out := &in.FlattenAllCnames, &out.FlattenAllCnames
		*out = new(bool)
		**out = **in
	}
	if in.FoundationDNS != nil {
		in, out := &in.FoundationDNS, &out.FoundationDNS
		*out = new(bool)
		**out = **in
	}
	if in.InternalDNS != nil {
		in, out := &in.InternalDNS, &out.InternalDNS
		*out = new(InternalDNSInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiProvider != nil {
		in, out := &in.MultiProvider, &out.MultiProvider
		*out = new(bool)
		**out = **in
	}
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = new(NameserversInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NsTTL != nil {
		in, out := &in.NsTTL, &out.NsTTL
		*out = new(float64)
		**out = **in
	}
	if in.SecondaryOverrides != nil {
		in, out := &in.SecondaryOverrides, &out.SecondaryOverrides
		*out = new(bool)
		**out = **in
	}
	if in.Soa != nil {
		in, out := &in.Soa, &out.Soa
		*out = new(SoaInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneMode != nil {
		in, out := &in.ZoneMode, &out.ZoneMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneDefaultsInitParameters.
func (in *ZoneDefaultsInitParameters) DeepCopy() *ZoneDefaultsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneDefaultsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneDefaultsObservation) DeepCopyInto(out *ZoneDefaultsObservation) {
	*out = *in
	if in.FlattenAllCnames != nil {
		in, out := &in.FlattenAllCnames, &out.FlattenAllCnames
		*out = new(bool)
		**out = **in
	}
	if in.FoundationDNS != nil {
		in, out := &in.FoundationDNS, &out.FoundationDNS
		*out = new(bool)
		**out = **in
	}
	if in.InternalDNS != nil {
		in, out := &in.InternalDNS, &out.InternalDNS
		*out = new(InternalDNSObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiProvider != nil {
		in, out := &in.MultiProvider, &out.MultiProvider
		*out = new(bool)
		**out = **in
	}
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = new(NameserversObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.NsTTL != nil {
		in, out := &in.NsTTL, &out.NsTTL
		*out = new(float64)
		**out = **in
	}
	if in.SecondaryOverrides != nil {
		in, out := &in.SecondaryOverrides, &out.SecondaryOverrides
		*out = new(bool)
		**out = **in
	}
	if in.Soa != nil {
		in, out := &in.Soa, &out.Soa
		*out = new(SoaObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneMode != nil {
		in, out := &in.ZoneMode, &out.ZoneMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneDefaultsObservation.
func (in *ZoneDefaultsObservation) DeepCopy() *ZoneDefaultsObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneDefaultsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneDefaultsParameters) DeepCopyInto(out *ZoneDefaultsParameters) {
	*out = *in
	if in.FlattenAllCnames != nil {
		in, out := &in.FlattenAllCnames, &out.FlattenAllCnames
		*out = new(bool)
		**out = **in
	}
	if in.FoundationDNS != nil {
		in, out := &in.FoundationDNS, &out.FoundationDNS
		*out = new(bool)
		**out = **in
	}
	if in.InternalDNS != nil {
		in, out := &in.InternalDNS, &out.InternalDNS
		*out = new(InternalDNSParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.MultiProvider != nil {
		in, out := &in.MultiProvider, &out.MultiProvider
		*out = new(bool)
		**out = **in
	}
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = new(NameserversParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.NsTTL != nil {
		in, out := &in.NsTTL, &out.NsTTL
		*out = new(float64)
		**out = **in
	}
	if in.SecondaryOverrides != nil {
		in, out := &in.SecondaryOverrides, &out.SecondaryOverrides
		*out = new(bool)
		**out = **in
	}
	if in.Soa != nil {
		in, out := &in.Soa, &out.Soa
		*out = new(SoaParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneMode != nil {
		in, out := &in.ZoneMode, &out.ZoneMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneDefaultsParameters.
func (in *ZoneDefaultsParameters) DeepCopy() *ZoneDefaultsParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneDefaultsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACL) DeepCopyInto(out *ZoneTransfersACL) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACL.
func (in *ZoneTransfersACL) DeepCopy() *ZoneTransfersACL {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersACL) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACLInitParameters) DeepCopyInto(out *ZoneTransfersACLInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACLInitParameters.
func (in *ZoneTransfersACLInitParameters) DeepCopy() *ZoneTransfersACLInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACLList) DeepCopyInto(out *ZoneTransfersACLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZoneTransfersACL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACLList.
func (in *ZoneTransfersACLList) DeepCopy() *ZoneTransfersACLList {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersACLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACLObservation) DeepCopyInto(out *ZoneTransfersACLObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACLObservation.
func (in *ZoneTransfersACLObservation) DeepCopy() *ZoneTransfersACLObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACLParameters) DeepCopyInto(out *ZoneTransfersACLParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.IPRange != nil {
		in, out := &in.IPRange, &out.IPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACLParameters.
func (in *ZoneTransfersACLParameters) DeepCopy() *ZoneTransfersACLParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACLSpec) DeepCopyInto(out *ZoneTransfersACLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACLSpec.
func (in *ZoneTransfersACLSpec) DeepCopy() *ZoneTransfersACLSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersACLStatus) DeepCopyInto(out *ZoneTransfersACLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersACLStatus.
func (in *ZoneTransfersACLStatus) DeepCopy() *ZoneTransfersACLStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersACLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncoming) DeepCopyInto(out *ZoneTransfersIncoming) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncoming.
func (in *ZoneTransfersIncoming) DeepCopy() *ZoneTransfersIncoming {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncoming)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersIncoming) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncomingInitParameters) DeepCopyInto(out *ZoneTransfersIncomingInitParameters) {
	*out = *in
	if in.AutoRefreshSeconds != nil {
		in, out := &in.AutoRefreshSeconds, &out.AutoRefreshSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncomingInitParameters.
func (in *ZoneTransfersIncomingInitParameters) DeepCopy() *ZoneTransfersIncomingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncomingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncomingList) DeepCopyInto(out *ZoneTransfersIncomingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZoneTransfersIncoming, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncomingList.
func (in *ZoneTransfersIncomingList) DeepCopy() *ZoneTransfersIncomingList {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncomingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersIncomingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncomingObservation) DeepCopyInto(out *ZoneTransfersIncomingObservation) {
	*out = *in
	if in.AutoRefreshSeconds != nil {
		in, out := &in.AutoRefreshSeconds, &out.AutoRefreshSeconds
		*out = new(float64)
		**out = **in
	}
	if in.CheckedTime != nil {
		in, out := &in.CheckedTime, &out.CheckedTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModifiedTime != nil {
		in, out := &in.ModifiedTime, &out.ModifiedTime
		*out = new(string)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SoaSerial != nil {
		in, out := &in.SoaSerial, &out.SoaSerial
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncomingObservation.
func (in *ZoneTransfersIncomingObservation) DeepCopy() *ZoneTransfersIncomingObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncomingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncomingParameters) DeepCopyInto(out *ZoneTransfersIncomingParameters) {
	*out = *in
	if in.AutoRefreshSeconds != nil {
		in, out := &in.AutoRefreshSeconds, &out.AutoRefreshSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncomingParameters.
func (in *ZoneTransfersIncomingParameters) DeepCopy() *ZoneTransfersIncomingParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncomingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncomingSpec) DeepCopyInto(out *ZoneTransfersIncomingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncomingSpec.
func (in *ZoneTransfersIncomingSpec) DeepCopy() *ZoneTransfersIncomingSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncomingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersIncomingStatus) DeepCopyInto(out *ZoneTransfersIncomingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersIncomingStatus.
func (in *ZoneTransfersIncomingStatus) DeepCopy() *ZoneTransfersIncomingStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersIncomingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoing) DeepCopyInto(out *ZoneTransfersOutgoing) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoing.
func (in *ZoneTransfersOutgoing) DeepCopy() *ZoneTransfersOutgoing {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersOutgoing) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoingInitParameters) DeepCopyInto(out *ZoneTransfersOutgoingInitParameters) {
	*out = *in
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoingInitParameters.
func (in *ZoneTransfersOutgoingInitParameters) DeepCopy() *ZoneTransfersOutgoingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoingList) DeepCopyInto(out *ZoneTransfersOutgoingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZoneTransfersOutgoing, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoingList.
func (in *ZoneTransfersOutgoingList) DeepCopy() *ZoneTransfersOutgoingList {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersOutgoingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoingObservation) DeepCopyInto(out *ZoneTransfersOutgoingObservation) {
	*out = *in
	if in.CheckedTime != nil {
		in, out := &in.CheckedTime, &out.CheckedTime
		*out = new(string)
		**out = **in
	}
	if in.CreatedTime != nil {
		in, out := &in.CreatedTime, &out.CreatedTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastTransferredTime != nil {
		in, out := &in.LastTransferredTime, &out.LastTransferredTime
		*out = new(string)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SoaSerial != nil {
		in, out := &in.SoaSerial, &out.SoaSerial
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoingObservation.
func (in *ZoneTransfersOutgoingObservation) DeepCopy() *ZoneTransfersOutgoingObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoingParameters) DeepCopyInto(out *ZoneTransfersOutgoingParameters) {
	*out = *in
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoingParameters.
func (in *ZoneTransfersOutgoingParameters) DeepCopy() *ZoneTransfersOutgoingParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoingSpec) DeepCopyInto(out *ZoneTransfersOutgoingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoingSpec.
func (in *ZoneTransfersOutgoingSpec) DeepCopy() *ZoneTransfersOutgoingSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersOutgoingStatus) DeepCopyInto(out *ZoneTransfersOutgoingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersOutgoingStatus.
func (in *ZoneTransfersOutgoingStatus) DeepCopy() *ZoneTransfersOutgoingStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersOutgoingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeer) DeepCopyInto(out *ZoneTransfersPeer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeer.
func (in *ZoneTransfersPeer) DeepCopy() *ZoneTransfersPeer {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersPeer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeerInitParameters) DeepCopyInto(out *ZoneTransfersPeerInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.IxfrEnable != nil {
		in, out := &in.IxfrEnable, &out.IxfrEnable
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TsigID != nil {
		in, out := &in.TsigID, &out.TsigID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeerInitParameters.
func (in *ZoneTransfersPeerInitParameters) DeepCopy() *ZoneTransfersPeerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeerList) DeepCopyInto(out *ZoneTransfersPeerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZoneTransfersPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeerList.
func (in *ZoneTransfersPeerList) DeepCopy() *ZoneTransfersPeerList {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersPeerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeerObservation) DeepCopyInto(out *ZoneTransfersPeerObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.IxfrEnable != nil {
		in, out := &in.IxfrEnable, &out.IxfrEnable
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TsigID != nil {
		in, out := &in.TsigID, &out.TsigID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeerObservation.
func (in *ZoneTransfersPeerObservation) DeepCopy() *ZoneTransfersPeerObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeerParameters) DeepCopyInto(out *ZoneTransfersPeerParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.IxfrEnable != nil {
		in, out := &in.IxfrEnable, &out.IxfrEnable
		*out = new(bool)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.TsigID != nil {
		in, out := &in.TsigID, &out.TsigID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeerParameters.
func (in *ZoneTransfersPeerParameters) DeepCopy() *ZoneTransfersPeerParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeerSpec) DeepCopyInto(out *ZoneTransfersPeerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeerSpec.
func (in *ZoneTransfersPeerSpec) DeepCopy() *ZoneTransfersPeerSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersPeerStatus) DeepCopyInto(out *ZoneTransfersPeerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersPeerStatus.
func (in *ZoneTransfersPeerStatus) DeepCopy() *ZoneTransfersPeerStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersPeerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsig) DeepCopyInto(out *ZoneTransfersTsig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsig.
func (in *ZoneTransfersTsig) DeepCopy() *ZoneTransfersTsig {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersTsig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsigInitParameters) DeepCopyInto(out *ZoneTransfersTsigInitParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Algo != nil {
		in, out := &in.Algo, &out.Algo
		*out = new(string)
		**out = **in
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsigInitParameters.
func (in *ZoneTransfersTsigInitParameters) DeepCopy() *ZoneTransfersTsigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsigList) DeepCopyInto(out *ZoneTransfersTsigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZoneTransfersTsig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsigList.
func (in *ZoneTransfersTsigList) DeepCopy() *ZoneTransfersTsigList {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneTransfersTsigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsigObservation) DeepCopyInto(out *ZoneTransfersTsigObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Algo != nil {
		in, out := &in.Algo, &out.Algo
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsigObservation.
func (in *ZoneTransfersTsigObservation) DeepCopy() *ZoneTransfersTsigObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsigParameters) DeepCopyInto(out *ZoneTransfersTsigParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.Algo != nil {
		in, out := &in.Algo, &out.Algo
		*out = new(string)
		**out = **in
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsigParameters.
func (in *ZoneTransfersTsigParameters) DeepCopy() *ZoneTransfersTsigParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsigSpec) DeepCopyInto(out *ZoneTransfersTsigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsigSpec.
func (in *ZoneTransfersTsigSpec) DeepCopy() *ZoneTransfersTsigSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneTransfersTsigStatus) DeepCopyInto(out *ZoneTransfersTsigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneTransfersTsigStatus.
func (in *ZoneTransfersTsigStatus) DeepCopy() *ZoneTransfersTsigStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneTransfersTsigStatus)
	in.DeepCopyInto(out)
	return out
}
