// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostnameFallbackOriginInitParameters struct {

	// (String) Your origin hostname that requests to your custom hostnames will be sent to.
	// Your origin hostname that requests to your custom hostnames will be sent to.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type HostnameFallbackOriginObservation struct {

	// (String) This is the time the fallback origin was created.
	// This is the time the fallback origin was created.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (List of String) These are errors that were encountered while trying to activate a fallback origin.
	// These are errors that were encountered while trying to activate a fallback origin.
	Errors []*string `json:"errors,omitempty" tf:"errors,omitempty"`

	// (String) Identifier
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Your origin hostname that requests to your custom hostnames will be sent to.
	// Your origin hostname that requests to your custom hostnames will be sent to.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// (String) Status of the fallback origin's activation.
	// Status of the fallback origin's activation.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// (String) This is the time the fallback origin was updated.
	// This is the time the fallback origin was updated.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type HostnameFallbackOriginParameters struct {

	// (String) Your origin hostname that requests to your custom hostnames will be sent to.
	// Your origin hostname that requests to your custom hostnames will be sent to.
	// +kubebuilder:validation:Optional
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// HostnameFallbackOriginSpec defines the desired state of HostnameFallbackOrigin
type HostnameFallbackOriginSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostnameFallbackOriginParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HostnameFallbackOriginInitParameters `json:"initProvider,omitempty"`
}

// HostnameFallbackOriginStatus defines the observed state of HostnameFallbackOrigin.
type HostnameFallbackOriginStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostnameFallbackOriginObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// HostnameFallbackOrigin is the Schema for the HostnameFallbackOrigins API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type HostnameFallbackOrigin struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.origin) || (has(self.initProvider) && has(self.initProvider.origin))",message="spec.forProvider.origin is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zoneId) || (has(self.initProvider) && has(self.initProvider.zoneId))",message="spec.forProvider.zoneId is a required parameter"
	Spec   HostnameFallbackOriginSpec   `json:"spec"`
	Status HostnameFallbackOriginStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostnameFallbackOriginList contains a list of HostnameFallbackOrigins
type HostnameFallbackOriginList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostnameFallbackOrigin `json:"items"`
}

// Repository type metadata.
var (
	HostnameFallbackOrigin_Kind             = "HostnameFallbackOrigin"
	HostnameFallbackOrigin_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostnameFallbackOrigin_Kind}.String()
	HostnameFallbackOrigin_KindAPIVersion   = HostnameFallbackOrigin_Kind + "." + CRDGroupVersion.String()
	HostnameFallbackOrigin_GroupVersionKind = CRDGroupVersion.WithKind(HostnameFallbackOrigin_Kind)
)

func init() {
	SchemeBuilder.Register(&HostnameFallbackOrigin{}, &HostnameFallbackOriginList{})
}
