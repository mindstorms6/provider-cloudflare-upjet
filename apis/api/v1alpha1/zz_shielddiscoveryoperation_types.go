// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ShieldDiscoveryOperationInitParameters struct {

	// (String) UUID
	// UUID
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Mark state of operation in API Discovery
	// Mark state of operation in API Discovery
	// * `review` - Mark operation as for review
	// * `ignored` - Mark operation as ignored
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ShieldDiscoveryOperationObservation struct {

	// (String) UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) UUID
	// UUID
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Mark state of operation in API Discovery
	// Mark state of operation in API Discovery
	// * `review` - Mark operation as for review
	// * `ignored` - Mark operation as ignored
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ShieldDiscoveryOperationParameters struct {

	// (String) UUID
	// UUID
	// +kubebuilder:validation:Optional
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Mark state of operation in API Discovery
	// Mark state of operation in API Discovery
	// * `review` - Mark operation as for review
	// * `ignored` - Mark operation as ignored
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// ShieldDiscoveryOperationSpec defines the desired state of ShieldDiscoveryOperation
type ShieldDiscoveryOperationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ShieldDiscoveryOperationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ShieldDiscoveryOperationInitParameters `json:"initProvider,omitempty"`
}

// ShieldDiscoveryOperationStatus defines the observed state of ShieldDiscoveryOperation.
type ShieldDiscoveryOperationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ShieldDiscoveryOperationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ShieldDiscoveryOperation is the Schema for the ShieldDiscoveryOperations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type ShieldDiscoveryOperation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.operationId) || (has(self.initProvider) && has(self.initProvider.operationId))",message="spec.forProvider.operationId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zoneId) || (has(self.initProvider) && has(self.initProvider.zoneId))",message="spec.forProvider.zoneId is a required parameter"
	Spec   ShieldDiscoveryOperationSpec   `json:"spec"`
	Status ShieldDiscoveryOperationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ShieldDiscoveryOperationList contains a list of ShieldDiscoveryOperations
type ShieldDiscoveryOperationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ShieldDiscoveryOperation `json:"items"`
}

// Repository type metadata.
var (
	ShieldDiscoveryOperation_Kind             = "ShieldDiscoveryOperation"
	ShieldDiscoveryOperation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ShieldDiscoveryOperation_Kind}.String()
	ShieldDiscoveryOperation_KindAPIVersion   = ShieldDiscoveryOperation_Kind + "." + CRDGroupVersion.String()
	ShieldDiscoveryOperation_GroupVersionKind = CRDGroupVersion.WithKind(ShieldDiscoveryOperation_Kind)
)

func init() {
	SchemeBuilder.Register(&ShieldDiscoveryOperation{}, &ShieldDiscoveryOperationList{})
}
