// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type APIRoutingInitParameters struct {
}

type APIRoutingObservation struct {

	// (String)
	LastUpdated *string `json:"lastUpdated,omitempty" tf:"last_updated,omitempty"`

	// (String) Target route.
	// Target route.
	Route *string `json:"route,omitempty" tf:"route,omitempty"`
}

type APIRoutingParameters struct {
}

type ActiveSchemaInitParameters struct {
}

type ActiveSchemaObservation struct {

	// (String)
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) UUID
	// UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// provided.
	// True if schema is Cloudflare-provided.
	IsLearned *bool `json:"isLearned,omitempty" tf:"is_learned,omitempty"`

	// (String) Schema file name.
	// Schema file name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ActiveSchemaParameters struct {
}

type ConfidenceIntervalsInitParameters struct {

	// (Attributes) (see below for nested schema)
	SuggestedThreshold *SuggestedThresholdInitParameters `json:"suggestedThreshold,omitempty" tf:"suggested_threshold,omitempty"`
}

type ConfidenceIntervalsObservation struct {

	// (String)
	LastUpdated *string `json:"lastUpdated,omitempty" tf:"last_updated,omitempty"`

	// (Attributes) (see below for nested schema)
	SuggestedThreshold *SuggestedThresholdObservation `json:"suggestedThreshold,omitempty" tf:"suggested_threshold,omitempty"`
}

type ConfidenceIntervalsParameters struct {

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	SuggestedThreshold *SuggestedThresholdParameters `json:"suggestedThreshold,omitempty" tf:"suggested_threshold,omitempty"`
}

type FeaturesInitParameters struct {

	// (Attributes) API Routing settings on endpoint. (see below for nested schema)
	APIRouting *APIRoutingInitParameters `json:"apiRouting,omitempty" tf:"api_routing,omitempty"`

	// (Attributes) (see below for nested schema)
	ConfidenceIntervals *ConfidenceIntervalsInitParameters `json:"confidenceIntervals,omitempty" tf:"confidence_intervals,omitempty"`

	// (Attributes) (see below for nested schema)
	ParameterSchemas *ParameterSchemasInitParameters `json:"parameterSchemas,omitempty" tf:"parameter_schemas,omitempty"`

	// (Attributes) (see below for nested schema)
	SchemaInfo *SchemaInfoInitParameters `json:"schemaInfo,omitempty" tf:"schema_info,omitempty"`

	// (Attributes) (see below for nested schema)
	Thresholds *ThresholdsInitParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type FeaturesObservation struct {

	// (Attributes) API Routing settings on endpoint. (see below for nested schema)
	APIRouting *APIRoutingObservation `json:"apiRouting,omitempty" tf:"api_routing,omitempty"`

	// (Attributes) (see below for nested schema)
	ConfidenceIntervals *ConfidenceIntervalsObservation `json:"confidenceIntervals,omitempty" tf:"confidence_intervals,omitempty"`

	// (Attributes) (see below for nested schema)
	ParameterSchemas *ParameterSchemasObservation `json:"parameterSchemas,omitempty" tf:"parameter_schemas,omitempty"`

	// (Attributes) (see below for nested schema)
	SchemaInfo *SchemaInfoObservation `json:"schemaInfo,omitempty" tf:"schema_info,omitempty"`

	// (Attributes) (see below for nested schema)
	Thresholds *ThresholdsObservation `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type FeaturesParameters struct {

	// (Attributes) API Routing settings on endpoint. (see below for nested schema)
	// +kubebuilder:validation:Optional
	APIRouting *APIRoutingParameters `json:"apiRouting,omitempty" tf:"api_routing,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ConfidenceIntervals *ConfidenceIntervalsParameters `json:"confidenceIntervals,omitempty" tf:"confidence_intervals,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ParameterSchemas *ParameterSchemasParameters `json:"parameterSchemas,omitempty" tf:"parameter_schemas,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	SchemaInfo *SchemaInfoParameters `json:"schemaInfo,omitempty" tf:"schema_info,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Thresholds *ThresholdsParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type P90InitParameters struct {
}

type P90Observation struct {

	// (Number) Lower bound for percentile estimate
	// Lower bound for percentile estimate
	Lower *float64 `json:"lower,omitempty" tf:"lower,omitempty"`

	// (Number) Upper bound for percentile estimate
	// Upper bound for percentile estimate
	Upper *float64 `json:"upper,omitempty" tf:"upper,omitempty"`
}

type P90Parameters struct {
}

type P95InitParameters struct {
}

type P95Observation struct {

	// (Number) Lower bound for percentile estimate
	// Lower bound for percentile estimate
	Lower *float64 `json:"lower,omitempty" tf:"lower,omitempty"`

	// (Number) Upper bound for percentile estimate
	// Upper bound for percentile estimate
	Upper *float64 `json:"upper,omitempty" tf:"upper,omitempty"`
}

type P95Parameters struct {
}

type P99InitParameters struct {
}

type P99Observation struct {

	// (Number) Lower bound for percentile estimate
	// Lower bound for percentile estimate
	Lower *float64 `json:"lower,omitempty" tf:"lower,omitempty"`

	// (Number) Upper bound for percentile estimate
	// Upper bound for percentile estimate
	Upper *float64 `json:"upper,omitempty" tf:"upper,omitempty"`
}

type P99Parameters struct {
}

type ParameterSchemasInitParameters struct {

	// (Attributes) (see below for nested schema)
	ParameterSchemas *ParameterSchemasParameterSchemasInitParameters `json:"parameterSchemas,omitempty" tf:"parameter_schemas,omitempty"`
}

type ParameterSchemasObservation struct {

	// (String)
	LastUpdated *string `json:"lastUpdated,omitempty" tf:"last_updated,omitempty"`

	// (Attributes) (see below for nested schema)
	ParameterSchemas *ParameterSchemasParameterSchemasObservation `json:"parameterSchemas,omitempty" tf:"parameter_schemas,omitempty"`
}

type ParameterSchemasParameterSchemasInitParameters struct {
}

type ParameterSchemasParameterSchemasObservation struct {

	// (List of String) An array containing the learned parameter schemas.
	// An array containing the learned parameter schemas.
	Parameters []*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (String) An empty response object. This field is required to yield a valid operation schema.
	// An empty response object. This field is required to yield a valid operation schema.
	Responses *string `json:"responses,omitempty" tf:"responses,omitempty"`
}

type ParameterSchemasParameterSchemasParameters struct {
}

type ParameterSchemasParameters struct {

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ParameterSchemas *ParameterSchemasParameterSchemasParameters `json:"parameterSchemas,omitempty" tf:"parameter_schemas,omitempty"`
}

type SchemaInfoInitParameters struct {

	// (Attributes) Schema active on endpoint. (see below for nested schema)
	ActiveSchema *ActiveSchemaInitParameters `json:"activeSchema,omitempty" tf:"active_schema,omitempty"`
}

type SchemaInfoObservation struct {

	// (Attributes) Schema active on endpoint. (see below for nested schema)
	ActiveSchema *ActiveSchemaObservation `json:"activeSchema,omitempty" tf:"active_schema,omitempty"`

	// provided learned schema is available for this endpoint.
	// True if a Cloudflare-provided learned schema is available for this endpoint.
	LearnedAvailable *bool `json:"learnedAvailable,omitempty" tf:"learned_available,omitempty"`

	// (String) Action taken on requests failing validation.
	// Action taken on requests failing validation.
	MitigationAction *string `json:"mitigationAction,omitempty" tf:"mitigation_action,omitempty"`
}

type SchemaInfoParameters struct {

	// (Attributes) Schema active on endpoint. (see below for nested schema)
	// +kubebuilder:validation:Optional
	ActiveSchema *ActiveSchemaParameters `json:"activeSchema,omitempty" tf:"active_schema,omitempty"`
}

type ShieldOperationInitParameters struct {

	// normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
	// The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// (Attributes) (see below for nested schema)
	Features *FeaturesInitParameters `json:"features,omitempty" tf:"features,omitempty"`

	// compliant host.
	// RFC3986-compliant host.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (String) The HTTP method used to access the endpoint.
	// The HTTP method used to access the endpoint.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ShieldOperationObservation struct {

	// normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
	// The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// (Attributes) (see below for nested schema)
	Features *FeaturesObservation `json:"features,omitempty" tf:"features,omitempty"`

	// compliant host.
	// RFC3986-compliant host.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (String) UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	LastUpdated *string `json:"lastUpdated,omitempty" tf:"last_updated,omitempty"`

	// (String) The HTTP method used to access the endpoint.
	// The HTTP method used to access the endpoint.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// (String) UUID
	// UUID
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ShieldOperationParameters struct {

	// normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
	// The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Features *FeaturesParameters `json:"features,omitempty" tf:"features,omitempty"`

	// compliant host.
	// RFC3986-compliant host.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (String) The HTTP method used to access the endpoint.
	// The HTTP method used to access the endpoint.
	// +kubebuilder:validation:Optional
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type SuggestedThresholdConfidenceIntervalsInitParameters struct {

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	P90 *P90InitParameters `json:"p90,omitempty" tf:"p90,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	P95 *P95InitParameters `json:"p95,omitempty" tf:"p95,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	P99 *P99InitParameters `json:"p99,omitempty" tf:"p99,omitempty"`
}

type SuggestedThresholdConfidenceIntervalsObservation struct {

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	P90 *P90Observation `json:"p90,omitempty" tf:"p90,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	P95 *P95Observation `json:"p95,omitempty" tf:"p95,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	P99 *P99Observation `json:"p99,omitempty" tf:"p99,omitempty"`
}

type SuggestedThresholdConfidenceIntervalsParameters struct {

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	// +kubebuilder:validation:Optional
	P90 *P90Parameters `json:"p90,omitempty" tf:"p90,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	// +kubebuilder:validation:Optional
	P95 *P95Parameters `json:"p95,omitempty" tf:"p95,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	// +kubebuilder:validation:Optional
	P99 *P99Parameters `json:"p99,omitempty" tf:"p99,omitempty"`
}

type SuggestedThresholdInitParameters struct {

	// (Attributes) (see below for nested schema)
	ConfidenceIntervals *SuggestedThresholdConfidenceIntervalsInitParameters `json:"confidenceIntervals,omitempty" tf:"confidence_intervals,omitempty"`
}

type SuggestedThresholdObservation struct {

	// (Attributes) (see below for nested schema)
	ConfidenceIntervals *SuggestedThresholdConfidenceIntervalsObservation `json:"confidenceIntervals,omitempty" tf:"confidence_intervals,omitempty"`

	// (Number) Suggested threshold.
	// Suggested threshold.
	Mean *float64 `json:"mean,omitempty" tf:"mean,omitempty"`
}

type SuggestedThresholdParameters struct {

	// (Attributes) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ConfidenceIntervals *SuggestedThresholdConfidenceIntervalsParameters `json:"confidenceIntervals,omitempty" tf:"confidence_intervals,omitempty"`
}

type ThresholdsInitParameters struct {
}

type ThresholdsObservation struct {

	// ids seen across this calculation.
	// The total number of auth-ids seen across this calculation.
	AuthIDTokens *float64 `json:"authIdTokens,omitempty" tf:"auth_id_tokens,omitempty"`

	// (Number) The number of data points used for the threshold suggestion calculation.
	// The number of data points used for the threshold suggestion calculation.
	DataPoints *float64 `json:"dataPoints,omitempty" tf:"data_points,omitempty"`

	// (String)
	LastUpdated *string `json:"lastUpdated,omitempty" tf:"last_updated,omitempty"`

	// (Number) The p50 quantile of requests (in period_seconds).
	// The p50 quantile of requests (in period_seconds).
	P50 *float64 `json:"p50,omitempty" tf:"p50,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	// The p90 quantile of requests (in period_seconds).
	P90 *float64 `json:"p90,omitempty" tf:"p90,omitempty"`

	// (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
	// The p99 quantile of requests (in period_seconds).
	P99 *float64 `json:"p99,omitempty" tf:"p99,omitempty"`

	// (Number) The period over which this threshold is suggested.
	// The period over which this threshold is suggested.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// (Number) The estimated number of requests covered by these calculations.
	// The estimated number of requests covered by these calculations.
	Requests *float64 `json:"requests,omitempty" tf:"requests,omitempty"`

	// (Attributes) (see below for nested schema)
	// The suggested threshold in requests done by the same auth_id or period_seconds.
	SuggestedThreshold *float64 `json:"suggestedThreshold,omitempty" tf:"suggested_threshold,omitempty"`
}

type ThresholdsParameters struct {
}

// ShieldOperationSpec defines the desired state of ShieldOperation
type ShieldOperationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ShieldOperationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ShieldOperationInitParameters `json:"initProvider,omitempty"`
}

// ShieldOperationStatus defines the observed state of ShieldOperation.
type ShieldOperationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ShieldOperationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ShieldOperation is the Schema for the ShieldOperations API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type ShieldOperation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.endpoint) || (has(self.initProvider) && has(self.initProvider.endpoint))",message="spec.forProvider.endpoint is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.host) || (has(self.initProvider) && has(self.initProvider.host))",message="spec.forProvider.host is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.method) || (has(self.initProvider) && has(self.initProvider.method))",message="spec.forProvider.method is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zoneId) || (has(self.initProvider) && has(self.initProvider.zoneId))",message="spec.forProvider.zoneId is a required parameter"
	Spec   ShieldOperationSpec   `json:"spec"`
	Status ShieldOperationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ShieldOperationList contains a list of ShieldOperations
type ShieldOperationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ShieldOperation `json:"items"`
}

// Repository type metadata.
var (
	ShieldOperation_Kind             = "ShieldOperation"
	ShieldOperation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ShieldOperation_Kind}.String()
	ShieldOperation_KindAPIVersion   = ShieldOperation_Kind + "." + CRDGroupVersion.String()
	ShieldOperation_GroupVersionKind = CRDGroupVersion.WithKind(ShieldOperation_Kind)
)

func init() {
	SchemeBuilder.Register(&ShieldOperation{}, &ShieldOperationList{})
}
