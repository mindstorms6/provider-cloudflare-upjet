// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ShieldOperationSchemaValidationSettingsInitParameters struct {

	// (String) When set, this applies a mitigation action to this operation
	// When set, this applies a mitigation action to this operation
	//
	// - `log` log request when request does not conform to schema for this operation
	// - `block` deny access to the site when request does not conform to schema for this operation
	// - `none` will skip mitigation for this operation
	// - `null` indicates that no operation level mitigation is in place, see Zone Level Schema Validation Settings for mitigation action that will be applied
	MitigationAction *string `json:"mitigationAction,omitempty" tf:"mitigation_action,omitempty"`

	// (String) UUID
	// UUID
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ShieldOperationSchemaValidationSettingsObservation struct {

	// (String) UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) When set, this applies a mitigation action to this operation
	// When set, this applies a mitigation action to this operation
	//
	// - `log` log request when request does not conform to schema for this operation
	// - `block` deny access to the site when request does not conform to schema for this operation
	// - `none` will skip mitigation for this operation
	// - `null` indicates that no operation level mitigation is in place, see Zone Level Schema Validation Settings for mitigation action that will be applied
	MitigationAction *string `json:"mitigationAction,omitempty" tf:"mitigation_action,omitempty"`

	// (String) UUID
	// UUID
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Identifier
	// Identifier
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ShieldOperationSchemaValidationSettingsParameters struct {

	// (String) When set, this applies a mitigation action to this operation
	// When set, this applies a mitigation action to this operation
	//
	// - `log` log request when request does not conform to schema for this operation
	// - `block` deny access to the site when request does not conform to schema for this operation
	// - `none` will skip mitigation for this operation
	// - `null` indicates that no operation level mitigation is in place, see Zone Level Schema Validation Settings for mitigation action that will be applied
	// +kubebuilder:validation:Optional
	MitigationAction *string `json:"mitigationAction,omitempty" tf:"mitigation_action,omitempty"`

	// (String) UUID
	// UUID
	// +kubebuilder:validation:Optional
	OperationID *string `json:"operationId,omitempty" tf:"operation_id,omitempty"`

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// ShieldOperationSchemaValidationSettingsSpec defines the desired state of ShieldOperationSchemaValidationSettings
type ShieldOperationSchemaValidationSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ShieldOperationSchemaValidationSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ShieldOperationSchemaValidationSettingsInitParameters `json:"initProvider,omitempty"`
}

// ShieldOperationSchemaValidationSettingsStatus defines the observed state of ShieldOperationSchemaValidationSettings.
type ShieldOperationSchemaValidationSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ShieldOperationSchemaValidationSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ShieldOperationSchemaValidationSettings is the Schema for the ShieldOperationSchemaValidationSettingss API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type ShieldOperationSchemaValidationSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.operationId) || (has(self.initProvider) && has(self.initProvider.operationId))",message="spec.forProvider.operationId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zoneId) || (has(self.initProvider) && has(self.initProvider.zoneId))",message="spec.forProvider.zoneId is a required parameter"
	Spec   ShieldOperationSchemaValidationSettingsSpec   `json:"spec"`
	Status ShieldOperationSchemaValidationSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ShieldOperationSchemaValidationSettingsList contains a list of ShieldOperationSchemaValidationSettingss
type ShieldOperationSchemaValidationSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ShieldOperationSchemaValidationSettings `json:"items"`
}

// Repository type metadata.
var (
	ShieldOperationSchemaValidationSettings_Kind             = "ShieldOperationSchemaValidationSettings"
	ShieldOperationSchemaValidationSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ShieldOperationSchemaValidationSettings_Kind}.String()
	ShieldOperationSchemaValidationSettings_KindAPIVersion   = ShieldOperationSchemaValidationSettings_Kind + "." + CRDGroupVersion.String()
	ShieldOperationSchemaValidationSettings_GroupVersionKind = CRDGroupVersion.WithKind(ShieldOperationSchemaValidationSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&ShieldOperationSchemaValidationSettings{}, &ShieldOperationSchemaValidationSettingsList{})
}
