// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EmailInitParameters struct {

	// (String) UUID
	// The email address
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type EmailObservation struct {

	// (String) UUID
	// The email address
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type EmailParameters struct {

	// (String) UUID
	// The email address
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type FiltersInitParameters struct {

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// (List of String) Used for configuring radar_notification
	// Used for configuring radar_notification
	AffectedAsns []*string `json:"affectedAsns,omitempty" tf:"affected_asns,omitempty"`

	// (List of String) Used for configuring incident_alert
	// Used for configuring incident_alert
	AffectedComponents []*string `json:"affectedComponents,omitempty" tf:"affected_components,omitempty"`

	// (List of String) Used for configuring radar_notification
	// Used for configuring radar_notification
	AffectedLocations []*string `json:"affectedLocations,omitempty" tf:"affected_locations,omitempty"`

	// (List of String) Used for configuring maintenance_event_notification
	// Used for configuring maintenance_event_notification
	AirportCode []*string `json:"airportCode,omitempty" tf:"airport_code,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	AlertTriggerPreferences []*string `json:"alertTriggerPreferences,omitempty" tf:"alert_trigger_preferences,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	AlertTriggerPreferencesValue []*string `json:"alertTriggerPreferencesValue,omitempty" tf:"alert_trigger_preferences_value,omitempty"`

	// (Boolean) Whether or not the Notification policy is enabled.
	// Used for configuring load_balancing_pool_enablement_alert
	Enabled []*string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	Environment []*string `json:"environment,omitempty" tf:"environment,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	Event []*string `json:"event,omitempty" tf:"event,omitempty"`

	// (List of String) Used for configuring load_balancing_health_alert
	// Used for configuring load_balancing_health_alert
	EventSource []*string `json:"eventSource,omitempty" tf:"event_source,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	EventType []*string `json:"eventType,omitempty" tf:"event_type,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	GroupBy []*string `json:"groupBy,omitempty" tf:"group_by,omitempty"`

	// (List of String) Used for configuring health_check_status_notification
	// Used for configuring health_check_status_notification
	HealthCheckID []*string `json:"healthCheckId,omitempty" tf:"health_check_id,omitempty"`

	// (List of String) Used for configuring incident_alert
	// Used for configuring incident_alert
	IncidentImpact []*string `json:"incidentImpact,omitempty" tf:"incident_impact,omitempty"`

	// (List of String) Used for configuring stream_live_notifications
	// Used for configuring stream_live_notifications
	InputID []*string `json:"inputId,omitempty" tf:"input_id,omitempty"`

	// (List of String) Used for configuring security_insights_alert
	// Used for configuring security_insights_alert
	InsightClass []*string `json:"insightClass,omitempty" tf:"insight_class,omitempty"`

	// (List of String) Used for configuring billing_usage_alert
	// Used for configuring billing_usage_alert
	Limit []*string `json:"limit,omitempty" tf:"limit,omitempty"`

	// (List of String) Used for configuring logo_match_alert
	// Used for configuring logo_match_alert
	LogoTag []*string `json:"logoTag,omitempty" tf:"logo_tag,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	MegabitsPerSecond []*string `json:"megabitsPerSecond,omitempty" tf:"megabits_per_second,omitempty"`

	// (List of String) Used for configuring load_balancing_health_alert
	// Used for configuring load_balancing_health_alert
	NewHealth []*string `json:"newHealth,omitempty" tf:"new_health,omitempty"`

	// (List of String) Used for configuring tunnel_health_event
	// Used for configuring tunnel_health_event
	NewStatus []*string `json:"newStatus,omitempty" tf:"new_status,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	PacketsPerSecond []*string `json:"packetsPerSecond,omitempty" tf:"packets_per_second,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	PoolID []*string `json:"poolId,omitempty" tf:"pool_id,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	PopNames []*string `json:"popNames,omitempty" tf:"pop_names,omitempty"`

	// (List of String) Used for configuring billing_usage_alert
	// Used for configuring billing_usage_alert
	Product []*string `json:"product,omitempty" tf:"product,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	ProjectID []*string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	Protocol []*string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	QueryTag []*string `json:"queryTag,omitempty" tf:"query_tag,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	RequestsPerSecond []*string `json:"requestsPerSecond,omitempty" tf:"requests_per_second,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	SLO []*string `json:"slo,omitempty" tf:"slo,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Selectors []*string `json:"selectors,omitempty" tf:"selectors,omitempty"`

	// (List of String) Used for configuring clickhouse_alert_fw_ent_anomaly
	// Used for configuring clickhouse_alert_fw_ent_anomaly
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`

	// (List of String) Used for configuring health_check_status_notification
	// Used for configuring health_check_status_notification
	Status []*string `json:"status,omitempty" tf:"status,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	TargetHostname []*string `json:"targetHostname,omitempty" tf:"target_hostname,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	TargetIP []*string `json:"targetIp,omitempty" tf:"target_ip,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	TargetZoneName []*string `json:"targetZoneName,omitempty" tf:"target_zone_name,omitempty"`

	// (List of String) Used for configuring traffic_anomalies_alert
	// Used for configuring traffic_anomalies_alert
	TrafficExclusions []*string `json:"trafficExclusions,omitempty" tf:"traffic_exclusions,omitempty"`

	// (List of String) Used for configuring tunnel_health_event
	// Used for configuring tunnel_health_event
	TunnelID []*string `json:"tunnelId,omitempty" tf:"tunnel_id,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	TunnelName []*string `json:"tunnelName,omitempty" tf:"tunnel_name,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Where []*string `json:"where,omitempty" tf:"where,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type FiltersObservation struct {

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// (List of String) Used for configuring radar_notification
	// Used for configuring radar_notification
	AffectedAsns []*string `json:"affectedAsns,omitempty" tf:"affected_asns,omitempty"`

	// (List of String) Used for configuring incident_alert
	// Used for configuring incident_alert
	AffectedComponents []*string `json:"affectedComponents,omitempty" tf:"affected_components,omitempty"`

	// (List of String) Used for configuring radar_notification
	// Used for configuring radar_notification
	AffectedLocations []*string `json:"affectedLocations,omitempty" tf:"affected_locations,omitempty"`

	// (List of String) Used for configuring maintenance_event_notification
	// Used for configuring maintenance_event_notification
	AirportCode []*string `json:"airportCode,omitempty" tf:"airport_code,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	AlertTriggerPreferences []*string `json:"alertTriggerPreferences,omitempty" tf:"alert_trigger_preferences,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	AlertTriggerPreferencesValue []*string `json:"alertTriggerPreferencesValue,omitempty" tf:"alert_trigger_preferences_value,omitempty"`

	// (Boolean) Whether or not the Notification policy is enabled.
	// Used for configuring load_balancing_pool_enablement_alert
	Enabled []*string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	Environment []*string `json:"environment,omitempty" tf:"environment,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	Event []*string `json:"event,omitempty" tf:"event,omitempty"`

	// (List of String) Used for configuring load_balancing_health_alert
	// Used for configuring load_balancing_health_alert
	EventSource []*string `json:"eventSource,omitempty" tf:"event_source,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	EventType []*string `json:"eventType,omitempty" tf:"event_type,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	GroupBy []*string `json:"groupBy,omitempty" tf:"group_by,omitempty"`

	// (List of String) Used for configuring health_check_status_notification
	// Used for configuring health_check_status_notification
	HealthCheckID []*string `json:"healthCheckId,omitempty" tf:"health_check_id,omitempty"`

	// (List of String) Used for configuring incident_alert
	// Used for configuring incident_alert
	IncidentImpact []*string `json:"incidentImpact,omitempty" tf:"incident_impact,omitempty"`

	// (List of String) Used for configuring stream_live_notifications
	// Used for configuring stream_live_notifications
	InputID []*string `json:"inputId,omitempty" tf:"input_id,omitempty"`

	// (List of String) Used for configuring security_insights_alert
	// Used for configuring security_insights_alert
	InsightClass []*string `json:"insightClass,omitempty" tf:"insight_class,omitempty"`

	// (List of String) Used for configuring billing_usage_alert
	// Used for configuring billing_usage_alert
	Limit []*string `json:"limit,omitempty" tf:"limit,omitempty"`

	// (List of String) Used for configuring logo_match_alert
	// Used for configuring logo_match_alert
	LogoTag []*string `json:"logoTag,omitempty" tf:"logo_tag,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	MegabitsPerSecond []*string `json:"megabitsPerSecond,omitempty" tf:"megabits_per_second,omitempty"`

	// (List of String) Used for configuring load_balancing_health_alert
	// Used for configuring load_balancing_health_alert
	NewHealth []*string `json:"newHealth,omitempty" tf:"new_health,omitempty"`

	// (List of String) Used for configuring tunnel_health_event
	// Used for configuring tunnel_health_event
	NewStatus []*string `json:"newStatus,omitempty" tf:"new_status,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	PacketsPerSecond []*string `json:"packetsPerSecond,omitempty" tf:"packets_per_second,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	PoolID []*string `json:"poolId,omitempty" tf:"pool_id,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	PopNames []*string `json:"popNames,omitempty" tf:"pop_names,omitempty"`

	// (List of String) Used for configuring billing_usage_alert
	// Used for configuring billing_usage_alert
	Product []*string `json:"product,omitempty" tf:"product,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	ProjectID []*string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	Protocol []*string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	QueryTag []*string `json:"queryTag,omitempty" tf:"query_tag,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	RequestsPerSecond []*string `json:"requestsPerSecond,omitempty" tf:"requests_per_second,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	SLO []*string `json:"slo,omitempty" tf:"slo,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Selectors []*string `json:"selectors,omitempty" tf:"selectors,omitempty"`

	// (List of String) Used for configuring clickhouse_alert_fw_ent_anomaly
	// Used for configuring clickhouse_alert_fw_ent_anomaly
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`

	// (List of String) Used for configuring health_check_status_notification
	// Used for configuring health_check_status_notification
	Status []*string `json:"status,omitempty" tf:"status,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	TargetHostname []*string `json:"targetHostname,omitempty" tf:"target_hostname,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	TargetIP []*string `json:"targetIp,omitempty" tf:"target_ip,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	TargetZoneName []*string `json:"targetZoneName,omitempty" tf:"target_zone_name,omitempty"`

	// (List of String) Used for configuring traffic_anomalies_alert
	// Used for configuring traffic_anomalies_alert
	TrafficExclusions []*string `json:"trafficExclusions,omitempty" tf:"traffic_exclusions,omitempty"`

	// (List of String) Used for configuring tunnel_health_event
	// Used for configuring tunnel_health_event
	TunnelID []*string `json:"tunnelId,omitempty" tf:"tunnel_id,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	TunnelName []*string `json:"tunnelName,omitempty" tf:"tunnel_name,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Where []*string `json:"where,omitempty" tf:"where,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type FiltersParameters struct {

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// (List of String) Used for configuring radar_notification
	// Used for configuring radar_notification
	// +kubebuilder:validation:Optional
	AffectedAsns []*string `json:"affectedAsns,omitempty" tf:"affected_asns,omitempty"`

	// (List of String) Used for configuring incident_alert
	// Used for configuring incident_alert
	// +kubebuilder:validation:Optional
	AffectedComponents []*string `json:"affectedComponents,omitempty" tf:"affected_components,omitempty"`

	// (List of String) Used for configuring radar_notification
	// Used for configuring radar_notification
	// +kubebuilder:validation:Optional
	AffectedLocations []*string `json:"affectedLocations,omitempty" tf:"affected_locations,omitempty"`

	// (List of String) Used for configuring maintenance_event_notification
	// Used for configuring maintenance_event_notification
	// +kubebuilder:validation:Optional
	AirportCode []*string `json:"airportCode,omitempty" tf:"airport_code,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	AlertTriggerPreferences []*string `json:"alertTriggerPreferences,omitempty" tf:"alert_trigger_preferences,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	AlertTriggerPreferencesValue []*string `json:"alertTriggerPreferencesValue,omitempty" tf:"alert_trigger_preferences_value,omitempty"`

	// (Boolean) Whether or not the Notification policy is enabled.
	// Used for configuring load_balancing_pool_enablement_alert
	// +kubebuilder:validation:Optional
	Enabled []*string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	// +kubebuilder:validation:Optional
	Environment []*string `json:"environment,omitempty" tf:"environment,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	// +kubebuilder:validation:Optional
	Event []*string `json:"event,omitempty" tf:"event,omitempty"`

	// (List of String) Used for configuring load_balancing_health_alert
	// Used for configuring load_balancing_health_alert
	// +kubebuilder:validation:Optional
	EventSource []*string `json:"eventSource,omitempty" tf:"event_source,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	EventType []*string `json:"eventType,omitempty" tf:"event_type,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	GroupBy []*string `json:"groupBy,omitempty" tf:"group_by,omitempty"`

	// (List of String) Used for configuring health_check_status_notification
	// Used for configuring health_check_status_notification
	// +kubebuilder:validation:Optional
	HealthCheckID []*string `json:"healthCheckId,omitempty" tf:"health_check_id,omitempty"`

	// (List of String) Used for configuring incident_alert
	// Used for configuring incident_alert
	// +kubebuilder:validation:Optional
	IncidentImpact []*string `json:"incidentImpact,omitempty" tf:"incident_impact,omitempty"`

	// (List of String) Used for configuring stream_live_notifications
	// Used for configuring stream_live_notifications
	// +kubebuilder:validation:Optional
	InputID []*string `json:"inputId,omitempty" tf:"input_id,omitempty"`

	// (List of String) Used for configuring security_insights_alert
	// Used for configuring security_insights_alert
	// +kubebuilder:validation:Optional
	InsightClass []*string `json:"insightClass,omitempty" tf:"insight_class,omitempty"`

	// (List of String) Used for configuring billing_usage_alert
	// Used for configuring billing_usage_alert
	// +kubebuilder:validation:Optional
	Limit []*string `json:"limit,omitempty" tf:"limit,omitempty"`

	// (List of String) Used for configuring logo_match_alert
	// Used for configuring logo_match_alert
	// +kubebuilder:validation:Optional
	LogoTag []*string `json:"logoTag,omitempty" tf:"logo_tag,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	// +kubebuilder:validation:Optional
	MegabitsPerSecond []*string `json:"megabitsPerSecond,omitempty" tf:"megabits_per_second,omitempty"`

	// (List of String) Used for configuring load_balancing_health_alert
	// Used for configuring load_balancing_health_alert
	// +kubebuilder:validation:Optional
	NewHealth []*string `json:"newHealth,omitempty" tf:"new_health,omitempty"`

	// (List of String) Used for configuring tunnel_health_event
	// Used for configuring tunnel_health_event
	// +kubebuilder:validation:Optional
	NewStatus []*string `json:"newStatus,omitempty" tf:"new_status,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	// +kubebuilder:validation:Optional
	PacketsPerSecond []*string `json:"packetsPerSecond,omitempty" tf:"packets_per_second,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	PoolID []*string `json:"poolId,omitempty" tf:"pool_id,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	PopNames []*string `json:"popNames,omitempty" tf:"pop_names,omitempty"`

	// (List of String) Used for configuring billing_usage_alert
	// Used for configuring billing_usage_alert
	// +kubebuilder:validation:Optional
	Product []*string `json:"product,omitempty" tf:"product,omitempty"`

	// (List of String) Used for configuring pages_event_alert
	// Used for configuring pages_event_alert
	// +kubebuilder:validation:Optional
	ProjectID []*string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	// +kubebuilder:validation:Optional
	Protocol []*string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	QueryTag []*string `json:"queryTag,omitempty" tf:"query_tag,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	// +kubebuilder:validation:Optional
	RequestsPerSecond []*string `json:"requestsPerSecond,omitempty" tf:"requests_per_second,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	SLO []*string `json:"slo,omitempty" tf:"slo,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	Selectors []*string `json:"selectors,omitempty" tf:"selectors,omitempty"`

	// (List of String) Used for configuring clickhouse_alert_fw_ent_anomaly
	// Used for configuring clickhouse_alert_fw_ent_anomaly
	// +kubebuilder:validation:Optional
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`

	// (List of String) Used for configuring health_check_status_notification
	// Used for configuring health_check_status_notification
	// +kubebuilder:validation:Optional
	Status []*string `json:"status,omitempty" tf:"status,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	// +kubebuilder:validation:Optional
	TargetHostname []*string `json:"targetHostname,omitempty" tf:"target_hostname,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l4_alert
	// Used for configuring advanced_ddos_attack_l4_alert
	// +kubebuilder:validation:Optional
	TargetIP []*string `json:"targetIp,omitempty" tf:"target_ip,omitempty"`

	// (List of String) Used for configuring advanced_ddos_attack_l7_alert
	// Used for configuring advanced_ddos_attack_l7_alert
	// +kubebuilder:validation:Optional
	TargetZoneName []*string `json:"targetZoneName,omitempty" tf:"target_zone_name,omitempty"`

	// (List of String) Used for configuring traffic_anomalies_alert
	// Used for configuring traffic_anomalies_alert
	// +kubebuilder:validation:Optional
	TrafficExclusions []*string `json:"trafficExclusions,omitempty" tf:"traffic_exclusions,omitempty"`

	// (List of String) Used for configuring tunnel_health_event
	// Used for configuring tunnel_health_event
	// +kubebuilder:validation:Optional
	TunnelID []*string `json:"tunnelId,omitempty" tf:"tunnel_id,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	TunnelName []*string `json:"tunnelName,omitempty" tf:"tunnel_name,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	Where []*string `json:"where,omitempty" tf:"where,omitempty"`

	// (List of String) Usage depends on specific alert type
	// Usage depends on specific alert type
	// +kubebuilder:validation:Optional
	Zones []*string `json:"zones,omitempty" tf:"zones,omitempty"`
}

type MechanismsInitParameters struct {

	// (Attributes List) (see below for nested schema)
	Email []EmailInitParameters `json:"email,omitempty" tf:"email,omitempty"`

	// (Attributes List) (see below for nested schema)
	Pagerduty []PagerdutyInitParameters `json:"pagerduty,omitempty" tf:"pagerduty,omitempty"`

	// (Attributes List) (see below for nested schema)
	Webhooks []WebhooksInitParameters `json:"webhooks,omitempty" tf:"webhooks,omitempty"`
}

type MechanismsObservation struct {

	// (Attributes List) (see below for nested schema)
	Email []EmailObservation `json:"email,omitempty" tf:"email,omitempty"`

	// (Attributes List) (see below for nested schema)
	Pagerduty []PagerdutyObservation `json:"pagerduty,omitempty" tf:"pagerduty,omitempty"`

	// (Attributes List) (see below for nested schema)
	Webhooks []WebhooksObservation `json:"webhooks,omitempty" tf:"webhooks,omitempty"`
}

type MechanismsParameters struct {

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Email []EmailParameters `json:"email" tf:"email,omitempty"`

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Pagerduty []PagerdutyParameters `json:"pagerduty" tf:"pagerduty,omitempty"`

	// (Attributes List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Webhooks []WebhooksParameters `json:"webhooks" tf:"webhooks,omitempty"`
}

type PagerdutyInitParameters struct {
}

type PagerdutyObservation struct {

	// (String) UUID
	// UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type PagerdutyParameters struct {
}

type PolicyInitParameters struct {

	// (String) The account id
	// The account id
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// alert from the same incident, not support on all alert types.
	// Optional specification of how often to re-alert from the same incident, not support on all alert types.
	AlertInterval *string `json:"alertInterval,omitempty" tf:"alert_interval,omitempty"`

	// (String) Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
	// Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
	AlertType *string `json:"alertType,omitempty" tf:"alert_type,omitempty"`

	// (String) Optional description for the Notification policy.
	// Optional description for the Notification policy.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Whether or not the Notification policy is enabled.
	// Whether or not the Notification policy is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details. (see below for nested schema)
	Filters *FiltersInitParameters `json:"filters,omitempty" tf:"filters,omitempty"`

	// (Attributes) List of IDs that will be used when dispatching a notification. IDs for email type will be the email address. (see below for nested schema)
	Mechanisms *MechanismsInitParameters `json:"mechanisms,omitempty" tf:"mechanisms,omitempty"`
}

type PolicyObservation struct {

	// (String) The account id
	// The account id
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// alert from the same incident, not support on all alert types.
	// Optional specification of how often to re-alert from the same incident, not support on all alert types.
	AlertInterval *string `json:"alertInterval,omitempty" tf:"alert_interval,omitempty"`

	// (String) Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
	// Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
	AlertType *string `json:"alertType,omitempty" tf:"alert_type,omitempty"`

	// (String)
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// (String) Optional description for the Notification policy.
	// Optional description for the Notification policy.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Whether or not the Notification policy is enabled.
	// Whether or not the Notification policy is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details. (see below for nested schema)
	Filters *FiltersObservation `json:"filters,omitempty" tf:"filters,omitempty"`

	// (String) UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Attributes) List of IDs that will be used when dispatching a notification. IDs for email type will be the email address. (see below for nested schema)
	Mechanisms *MechanismsObservation `json:"mechanisms,omitempty" tf:"mechanisms,omitempty"`

	// (String)
	Modified *string `json:"modified,omitempty" tf:"modified,omitempty"`
}

type PolicyParameters struct {

	// (String) The account id
	// The account id
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// alert from the same incident, not support on all alert types.
	// Optional specification of how often to re-alert from the same incident, not support on all alert types.
	// +kubebuilder:validation:Optional
	AlertInterval *string `json:"alertInterval,omitempty" tf:"alert_interval,omitempty"`

	// (String) Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
	// Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
	// +kubebuilder:validation:Optional
	AlertType *string `json:"alertType,omitempty" tf:"alert_type,omitempty"`

	// (String) Optional description for the Notification policy.
	// Optional description for the Notification policy.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Whether or not the Notification policy is enabled.
	// Whether or not the Notification policy is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Attributes) Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Filters *FiltersParameters `json:"filters,omitempty" tf:"filters,omitempty"`

	// (Attributes) List of IDs that will be used when dispatching a notification. IDs for email type will be the email address. (see below for nested schema)
	// +kubebuilder:validation:Optional
	Mechanisms *MechanismsParameters `json:"mechanisms,omitempty" tf:"mechanisms,omitempty"`
}

type WebhooksInitParameters struct {
}

type WebhooksObservation struct {

	// (String) UUID
	// UUID
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebhooksParameters struct {
}

// PolicySpec defines the desired state of Policy
type PolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PolicyInitParameters `json:"initProvider,omitempty"`
}

// PolicyStatus defines the observed state of Policy.
type PolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Policy is the Schema for the Policys API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type Policy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.alertType) || (has(self.initProvider) && has(self.initProvider.alertType))",message="spec.forProvider.alertType is a required parameter"
	Spec   PolicySpec   `json:"spec"`
	Status PolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyList contains a list of Policys
type PolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Policy `json:"items"`
}

// Repository type metadata.
var (
	Policy_Kind             = "Policy"
	Policy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Policy_Kind}.String()
	Policy_KindAPIVersion   = Policy_Kind + "." + CRDGroupVersion.String()
	Policy_GroupVersionKind = CRDGroupVersion.WithKind(Policy_Kind)
)

func init() {
	SchemeBuilder.Register(&Policy{}, &PolicyList{})
}
