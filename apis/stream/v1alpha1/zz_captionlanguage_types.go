// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CaptionLanguageInitParameters struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The WebVTT file containing the caption or subtitle content.
	// The WebVTT file containing the caption or subtitle content.
	File *string `json:"file,omitempty" tf:"file,omitempty"`

	// generated unique identifier for a media item.
	// A Cloudflare-generated unique identifier for a media item.
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) The language tag in BCP 47 format.
	// The language tag in BCP 47 format.
	Language *string `json:"language,omitempty" tf:"language,omitempty"`
}

type CaptionLanguageObservation struct {

	// (String) Identifier
	// Identifier
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The WebVTT file containing the caption or subtitle content.
	// The WebVTT file containing the caption or subtitle content.
	File *string `json:"file,omitempty" tf:"file,omitempty"`

	// (Boolean) Whether the caption was generated via AI.
	// Whether the caption was generated via AI.
	Generated *bool `json:"generated,omitempty" tf:"generated,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// generated unique identifier for a media item.
	// A Cloudflare-generated unique identifier for a media item.
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) The language label displayed in the native language to users.
	// The language label displayed in the native language to users.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) The language tag in BCP 47 format.
	// The language tag in BCP 47 format.
	Language *string `json:"language,omitempty" tf:"language,omitempty"`

	// (String) The status of a generated caption.
	// The status of a generated caption.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type CaptionLanguageParameters struct {

	// (String) Identifier
	// Identifier
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) The WebVTT file containing the caption or subtitle content.
	// The WebVTT file containing the caption or subtitle content.
	// +kubebuilder:validation:Optional
	File *string `json:"file,omitempty" tf:"file,omitempty"`

	// generated unique identifier for a media item.
	// A Cloudflare-generated unique identifier for a media item.
	// +kubebuilder:validation:Optional
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) The language tag in BCP 47 format.
	// The language tag in BCP 47 format.
	// +kubebuilder:validation:Optional
	Language *string `json:"language,omitempty" tf:"language,omitempty"`
}

// CaptionLanguageSpec defines the desired state of CaptionLanguage
type CaptionLanguageSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CaptionLanguageParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CaptionLanguageInitParameters `json:"initProvider,omitempty"`
}

// CaptionLanguageStatus defines the observed state of CaptionLanguage.
type CaptionLanguageStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CaptionLanguageObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CaptionLanguage is the Schema for the CaptionLanguages API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare-upjet}
type CaptionLanguage struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.identifier) || (has(self.initProvider) && has(self.initProvider.identifier))",message="spec.forProvider.identifier is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.language) || (has(self.initProvider) && has(self.initProvider.language))",message="spec.forProvider.language is a required parameter"
	Spec   CaptionLanguageSpec   `json:"spec"`
	Status CaptionLanguageStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CaptionLanguageList contains a list of CaptionLanguages
type CaptionLanguageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CaptionLanguage `json:"items"`
}

// Repository type metadata.
var (
	CaptionLanguage_Kind             = "CaptionLanguage"
	CaptionLanguage_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CaptionLanguage_Kind}.String()
	CaptionLanguage_KindAPIVersion   = CaptionLanguage_Kind + "." + CRDGroupVersion.String()
	CaptionLanguage_GroupVersionKind = CRDGroupVersion.WithKind(CaptionLanguage_Kind)
)

func init() {
	SchemeBuilder.Register(&CaptionLanguage{}, &CaptionLanguageList{})
}
