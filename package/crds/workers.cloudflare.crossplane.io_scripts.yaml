---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: scripts.workers.cloudflare.crossplane.io
spec:
  group: workers.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare-upjet
    kind: Script
    listKind: ScriptList
    plural: scripts
    singular: script
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Script is the Schema for the Scripts API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScriptSpec defines the desired state of Script
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                  assets:
                    description: (Attributes) Configuration for assets within a Worker
                      (see below for nested schema)
                    properties:
                      config:
                        description: (Attributes) Configuration for assets within
                          a Worker. (see below for nested schema)
                        properties:
                          htmlHandling:
                            description: |-
                              (String) Determines the redirects and rewrites of requests for HTML content.
                              Determines the redirects and rewrites of requests for HTML content.
                            type: string
                          notFoundHandling:
                            description: |-
                              (String) Determines the response when a request does not match a static asset, and there is no Worker script.
                              Determines the response when a request does not match a static asset, and there is no Worker script.
                            type: string
                          runWorkerFirst:
                            description: |-
                              (Boolean) When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
                              When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
                            type: boolean
                          serveDirectly:
                            description: |-
                              (Boolean) When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
                              When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
                            type: boolean
                        type: object
                      jwt:
                        description: |-
                          (String) Token provided upon successful upload of all files from a registered manifest.
                          Token provided upon successful upload of all files from a registered manifest.
                        type: string
                    type: object
                  bindings:
                    description: upload-metadata/#bindings. (see below for nested
                      schema)
                    items:
                      properties:
                        bucketName:
                          description: |-
                            (String) R2 bucket to bind to.
                            R2 bucket to bind to.
                          type: string
                        certificateId:
                          description: |-
                            (String) Identifier of the certificate to bind to.
                            Identifier of the certificate to bind to.
                          type: string
                        className:
                          description: |-
                            (String) The exported class name of the Durable Object.
                            The exported class name of the Durable Object.
                          type: string
                        dataset:
                          description: |-
                            (String) The dataset name to bind to.
                            The dataset name to bind to.
                          type: string
                        environment:
                          description: |-
                            (String) The environment of the script_name to bind to.
                            The environment of the script_name to bind to.
                          type: string
                        id:
                          description: |-
                            (String) Name of the script, used in URLs and route configuration.
                            Identifier of the D1 database to bind to.
                          type: string
                        indexName:
                          description: |-
                            (String) Name of the Vectorize index to bind to.
                            Name of the Vectorize index to bind to.
                          type: string
                        json:
                          description: |-
                            (String) JSON data to use.
                            JSON data to use.
                          type: string
                        name:
                          description: |-
                            (String) A JavaScript variable name for the binding.
                            A JavaScript variable name for the binding.
                          type: string
                        namespace:
                          description: |-
                            (String) Namespace to bind to.
                            Namespace to bind to.
                          type: string
                        namespaceId:
                          description: |-
                            (String) Namespace identifier tag.
                            Namespace identifier tag.
                          type: string
                        outbound:
                          description: (Attributes) Outbound worker. (see below for
                            nested schema)
                          properties:
                            params:
                              description: |-
                                (List of String) Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
                                Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
                              items:
                                type: string
                              type: array
                            worker:
                              description: (Attributes) Outbound worker. (see below
                                for nested schema)
                              properties:
                                environment:
                                  description: |-
                                    (String) The environment of the script_name to bind to.
                                    Environment of the outbound worker.
                                  type: string
                                service:
                                  description: |-
                                    (String) Name of Worker to bind to.
                                    Name of the outbound worker.
                                  type: string
                              type: object
                          type: object
                        queueName:
                          description: |-
                            (String) Name of the Queue to bind to.
                            Name of the Queue to bind to.
                          type: string
                        scriptName:
                          description: |-
                            (String) Name of the script, used in URLs and route configuration.
                            The script where the Durable Object is defined, if it is external to this Worker.
                          type: string
                        service:
                          description: |-
                            (String) Name of Worker to bind to.
                            Name of Worker to bind to.
                          type: string
                        text:
                          description: |-
                            (String) The text value to use.
                            The text value to use.
                          type: string
                        type:
                          description: |-
                            (String) The kind of resource that the binding provides.
                            The kind of resource that the binding provides.
                          type: string
                      type: object
                    type: array
                  bodyPart:
                    description: |-
                      (String) Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the fetch event). Indicates a service worker syntax Worker.
                      Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the `fetch` event). Indicates a `service worker syntax` Worker.
                    type: string
                  compatibilityDate:
                    description: |-
                      (String) Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
                      Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
                    type: string
                  compatibilityFlags:
                    description: |-
                      (List of String) Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a compatibility_date.
                      Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.
                    items:
                      type: string
                    type: array
                  content:
                    description: |-
                      (String) Module or Service Worker contents of the Worker.
                      Module or Service Worker contents of the Worker.
                    type: string
                  keepAssets:
                    description: |-
                      (Boolean) Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
                      Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
                    type: boolean
                  keepBindings:
                    description: |-
                      (List of String) List of binding types to keep from previous_upload.
                      List of binding types to keep from previous_upload.
                    items:
                      type: string
                    type: array
                  mainModule:
                    description: |-
                      (String) Name of the part in the multipart request that contains the main module (e.g. the file exporting a fetch handler). Indicates a module syntax Worker.
                      Name of the part in the multipart request that contains the main module (e.g. the file exporting a `fetch` handler). Indicates a `module syntax` Worker.
                    type: string
                  migrations:
                    description: (Attributes) Migrations to apply for Durable Objects
                      associated with this Worker. (see below for nested schema)
                    properties:
                      deletedClasses:
                        description: |-
                          (List of String) A list of classes to delete Durable Object namespaces from.
                          A list of classes to delete Durable Object namespaces from.
                        items:
                          type: string
                        type: array
                      newClasses:
                        description: |-
                          (List of String) A list of classes to create Durable Object namespaces from.
                          A list of classes to create Durable Object namespaces from.
                        items:
                          type: string
                        type: array
                      newSqliteClasses:
                        description: |-
                          (List of String) A list of classes to create Durable Object namespaces with SQLite from.
                          A list of classes to create Durable Object namespaces with SQLite from.
                        items:
                          type: string
                        type: array
                      newTag:
                        description: |-
                          (String) Tag to set as the latest migration tag.
                          Tag to set as the latest migration tag.
                        type: string
                      oldTag:
                        description: |-
                          (String) Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
                          Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
                        type: string
                      renamedClasses:
                        description: (Attributes List) A list of classes with Durable
                          Object namespaces that were renamed. (see below for nested
                          schema)
                        items:
                          properties:
                            from:
                              description: (String)
                              type: string
                            to:
                              description: (String)
                              type: string
                          type: object
                        type: array
                      steps:
                        description: (Attributes List) Migrations to apply in order.
                          (see below for nested schema)
                        items:
                          properties:
                            deletedClasses:
                              description: |-
                                (List of String) A list of classes to delete Durable Object namespaces from.
                                A list of classes to delete Durable Object namespaces from.
                              items:
                                type: string
                              type: array
                            newClasses:
                              description: |-
                                (List of String) A list of classes to create Durable Object namespaces from.
                                A list of classes to create Durable Object namespaces from.
                              items:
                                type: string
                              type: array
                            newSqliteClasses:
                              description: |-
                                (List of String) A list of classes to create Durable Object namespaces with SQLite from.
                                A list of classes to create Durable Object namespaces with SQLite from.
                              items:
                                type: string
                              type: array
                            renamedClasses:
                              description: (Attributes List) A list of classes with
                                Durable Object namespaces that were renamed. (see
                                below for nested schema)
                              items:
                                properties:
                                  from:
                                    description: (String)
                                    type: string
                                  to:
                                    description: (String)
                                    type: string
                                type: object
                              type: array
                            transferredClasses:
                              description: (Attributes List) A list of transfers for
                                Durable Object namespaces from a different Worker
                                and class to a class defined in this Worker. (see
                                below for nested schema)
                              items:
                                properties:
                                  from:
                                    description: (String)
                                    type: string
                                  fromScript:
                                    description: (String)
                                    type: string
                                  to:
                                    description: (String)
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      transferredClasses:
                        description: (Attributes List) A list of transfers for Durable
                          Object namespaces from a different Worker and class to a
                          class defined in this Worker. (see below for nested schema)
                        items:
                          properties:
                            from:
                              description: (String)
                              type: string
                            fromScript:
                              description: (String)
                              type: string
                            to:
                              description: (String)
                              type: string
                          type: object
                        type: array
                    type: object
                  observability:
                    description: (Attributes) Observability settings for the Worker.
                      (see below for nested schema)
                    properties:
                      enabled:
                        description: |-
                          (Boolean) Whether observability is enabled for the Worker.
                          Whether observability is enabled for the Worker.
                        type: boolean
                      headSamplingRate:
                        description: |-
                          (Number) The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
                          The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
                        type: number
                    type: object
                  placement:
                    description: (Attributes) Configuration for Smart Placement. (see
                      below for nested schema)
                    properties:
                      mode:
                        description: |-
                          (String) Enables Smart Placement.
                          Enables [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
                        type: string
                    type: object
                  scriptName:
                    description: |-
                      (String) Name of the script, used in URLs and route configuration.
                      Name of the script, used in URLs and route configuration.
                    type: string
                  tailConsumers:
                    description: (Attributes List) List of Workers that will consume
                      logs from the attached Worker. (see below for nested schema)
                    items:
                      properties:
                        environment:
                          description: |-
                            (String) The environment of the script_name to bind to.
                            Optional environment if the Worker utilizes one.
                          type: string
                        namespace:
                          description: |-
                            (String) Namespace to bind to.
                            Optional dispatch namespace the script belongs to.
                          type: string
                        service:
                          description: |-
                            (String) Name of Worker to bind to.
                            Name of Worker that is to be the consumer.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accountId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                  assets:
                    description: (Attributes) Configuration for assets within a Worker
                      (see below for nested schema)
                    properties:
                      config:
                        description: (Attributes) Configuration for assets within
                          a Worker. (see below for nested schema)
                        properties:
                          htmlHandling:
                            description: |-
                              (String) Determines the redirects and rewrites of requests for HTML content.
                              Determines the redirects and rewrites of requests for HTML content.
                            type: string
                          notFoundHandling:
                            description: |-
                              (String) Determines the response when a request does not match a static asset, and there is no Worker script.
                              Determines the response when a request does not match a static asset, and there is no Worker script.
                            type: string
                          runWorkerFirst:
                            description: |-
                              (Boolean) When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
                              When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
                            type: boolean
                          serveDirectly:
                            description: |-
                              (Boolean) When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
                              When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
                            type: boolean
                        type: object
                      jwt:
                        description: |-
                          (String) Token provided upon successful upload of all files from a registered manifest.
                          Token provided upon successful upload of all files from a registered manifest.
                        type: string
                    type: object
                  bindings:
                    description: upload-metadata/#bindings. (see below for nested
                      schema)
                    items:
                      properties:
                        bucketName:
                          description: |-
                            (String) R2 bucket to bind to.
                            R2 bucket to bind to.
                          type: string
                        certificateId:
                          description: |-
                            (String) Identifier of the certificate to bind to.
                            Identifier of the certificate to bind to.
                          type: string
                        className:
                          description: |-
                            (String) The exported class name of the Durable Object.
                            The exported class name of the Durable Object.
                          type: string
                        dataset:
                          description: |-
                            (String) The dataset name to bind to.
                            The dataset name to bind to.
                          type: string
                        environment:
                          description: |-
                            (String) The environment of the script_name to bind to.
                            The environment of the script_name to bind to.
                          type: string
                        id:
                          description: |-
                            (String) Name of the script, used in URLs and route configuration.
                            Identifier of the D1 database to bind to.
                          type: string
                        indexName:
                          description: |-
                            (String) Name of the Vectorize index to bind to.
                            Name of the Vectorize index to bind to.
                          type: string
                        json:
                          description: |-
                            (String) JSON data to use.
                            JSON data to use.
                          type: string
                        name:
                          description: |-
                            (String) A JavaScript variable name for the binding.
                            A JavaScript variable name for the binding.
                          type: string
                        namespace:
                          description: |-
                            (String) Namespace to bind to.
                            Namespace to bind to.
                          type: string
                        namespaceId:
                          description: |-
                            (String) Namespace identifier tag.
                            Namespace identifier tag.
                          type: string
                        outbound:
                          description: (Attributes) Outbound worker. (see below for
                            nested schema)
                          properties:
                            params:
                              description: |-
                                (List of String) Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
                                Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
                              items:
                                type: string
                              type: array
                            worker:
                              description: (Attributes) Outbound worker. (see below
                                for nested schema)
                              properties:
                                environment:
                                  description: |-
                                    (String) The environment of the script_name to bind to.
                                    Environment of the outbound worker.
                                  type: string
                                service:
                                  description: |-
                                    (String) Name of Worker to bind to.
                                    Name of the outbound worker.
                                  type: string
                              type: object
                          type: object
                        queueName:
                          description: |-
                            (String) Name of the Queue to bind to.
                            Name of the Queue to bind to.
                          type: string
                        scriptName:
                          description: |-
                            (String) Name of the script, used in URLs and route configuration.
                            The script where the Durable Object is defined, if it is external to this Worker.
                          type: string
                        service:
                          description: |-
                            (String) Name of Worker to bind to.
                            Name of Worker to bind to.
                          type: string
                        text:
                          description: |-
                            (String) The text value to use.
                            The text value to use.
                          type: string
                        type:
                          description: |-
                            (String) The kind of resource that the binding provides.
                            The kind of resource that the binding provides.
                          type: string
                      type: object
                    type: array
                  bodyPart:
                    description: |-
                      (String) Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the fetch event). Indicates a service worker syntax Worker.
                      Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the `fetch` event). Indicates a `service worker syntax` Worker.
                    type: string
                  compatibilityDate:
                    description: |-
                      (String) Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
                      Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
                    type: string
                  compatibilityFlags:
                    description: |-
                      (List of String) Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a compatibility_date.
                      Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.
                    items:
                      type: string
                    type: array
                  content:
                    description: |-
                      (String) Module or Service Worker contents of the Worker.
                      Module or Service Worker contents of the Worker.
                    type: string
                  keepAssets:
                    description: |-
                      (Boolean) Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
                      Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
                    type: boolean
                  keepBindings:
                    description: |-
                      (List of String) List of binding types to keep from previous_upload.
                      List of binding types to keep from previous_upload.
                    items:
                      type: string
                    type: array
                  mainModule:
                    description: |-
                      (String) Name of the part in the multipart request that contains the main module (e.g. the file exporting a fetch handler). Indicates a module syntax Worker.
                      Name of the part in the multipart request that contains the main module (e.g. the file exporting a `fetch` handler). Indicates a `module syntax` Worker.
                    type: string
                  migrations:
                    description: (Attributes) Migrations to apply for Durable Objects
                      associated with this Worker. (see below for nested schema)
                    properties:
                      deletedClasses:
                        description: |-
                          (List of String) A list of classes to delete Durable Object namespaces from.
                          A list of classes to delete Durable Object namespaces from.
                        items:
                          type: string
                        type: array
                      newClasses:
                        description: |-
                          (List of String) A list of classes to create Durable Object namespaces from.
                          A list of classes to create Durable Object namespaces from.
                        items:
                          type: string
                        type: array
                      newSqliteClasses:
                        description: |-
                          (List of String) A list of classes to create Durable Object namespaces with SQLite from.
                          A list of classes to create Durable Object namespaces with SQLite from.
                        items:
                          type: string
                        type: array
                      newTag:
                        description: |-
                          (String) Tag to set as the latest migration tag.
                          Tag to set as the latest migration tag.
                        type: string
                      oldTag:
                        description: |-
                          (String) Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
                          Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
                        type: string
                      renamedClasses:
                        description: (Attributes List) A list of classes with Durable
                          Object namespaces that were renamed. (see below for nested
                          schema)
                        items:
                          properties:
                            from:
                              description: (String)
                              type: string
                            to:
                              description: (String)
                              type: string
                          type: object
                        type: array
                      steps:
                        description: (Attributes List) Migrations to apply in order.
                          (see below for nested schema)
                        items:
                          properties:
                            deletedClasses:
                              description: |-
                                (List of String) A list of classes to delete Durable Object namespaces from.
                                A list of classes to delete Durable Object namespaces from.
                              items:
                                type: string
                              type: array
                            newClasses:
                              description: |-
                                (List of String) A list of classes to create Durable Object namespaces from.
                                A list of classes to create Durable Object namespaces from.
                              items:
                                type: string
                              type: array
                            newSqliteClasses:
                              description: |-
                                (List of String) A list of classes to create Durable Object namespaces with SQLite from.
                                A list of classes to create Durable Object namespaces with SQLite from.
                              items:
                                type: string
                              type: array
                            renamedClasses:
                              description: (Attributes List) A list of classes with
                                Durable Object namespaces that were renamed. (see
                                below for nested schema)
                              items:
                                properties:
                                  from:
                                    description: (String)
                                    type: string
                                  to:
                                    description: (String)
                                    type: string
                                type: object
                              type: array
                            transferredClasses:
                              description: (Attributes List) A list of transfers for
                                Durable Object namespaces from a different Worker
                                and class to a class defined in this Worker. (see
                                below for nested schema)
                              items:
                                properties:
                                  from:
                                    description: (String)
                                    type: string
                                  fromScript:
                                    description: (String)
                                    type: string
                                  to:
                                    description: (String)
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      transferredClasses:
                        description: (Attributes List) A list of transfers for Durable
                          Object namespaces from a different Worker and class to a
                          class defined in this Worker. (see below for nested schema)
                        items:
                          properties:
                            from:
                              description: (String)
                              type: string
                            fromScript:
                              description: (String)
                              type: string
                            to:
                              description: (String)
                              type: string
                          type: object
                        type: array
                    type: object
                  observability:
                    description: (Attributes) Observability settings for the Worker.
                      (see below for nested schema)
                    properties:
                      enabled:
                        description: |-
                          (Boolean) Whether observability is enabled for the Worker.
                          Whether observability is enabled for the Worker.
                        type: boolean
                      headSamplingRate:
                        description: |-
                          (Number) The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
                          The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
                        type: number
                    type: object
                  placement:
                    description: (Attributes) Configuration for Smart Placement. (see
                      below for nested schema)
                    properties:
                      mode:
                        description: |-
                          (String) Enables Smart Placement.
                          Enables [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
                        type: string
                    type: object
                  scriptName:
                    description: |-
                      (String) Name of the script, used in URLs and route configuration.
                      Name of the script, used in URLs and route configuration.
                    type: string
                  tailConsumers:
                    description: (Attributes List) List of Workers that will consume
                      logs from the attached Worker. (see below for nested schema)
                    items:
                      properties:
                        environment:
                          description: |-
                            (String) The environment of the script_name to bind to.
                            Optional environment if the Worker utilizes one.
                          type: string
                        namespace:
                          description: |-
                            (String) Namespace to bind to.
                            Optional dispatch namespace the script belongs to.
                          type: string
                        service:
                          description: |-
                            (String) Name of Worker to bind to.
                            Name of Worker that is to be the consumer.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.accountId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.accountId)
                || (has(self.initProvider) && has(self.initProvider.accountId))'
            - message: spec.forProvider.bindings is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.bindings)
                || (has(self.initProvider) && has(self.initProvider.bindings))'
            - message: spec.forProvider.content is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.content)
                || (has(self.initProvider) && has(self.initProvider.content))'
            - message: spec.forProvider.observability is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.observability)
                || (has(self.initProvider) && has(self.initProvider.observability))'
            - message: spec.forProvider.scriptName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scriptName)
                || (has(self.initProvider) && has(self.initProvider.scriptName))'
            - message: spec.forProvider.tailConsumers is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.tailConsumers)
                || (has(self.initProvider) && has(self.initProvider.tailConsumers))'
          status:
            description: ScriptStatus defines the observed state of Script.
            properties:
              atProvider:
                properties:
                  accountId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                  assets:
                    description: (Attributes) Configuration for assets within a Worker
                      (see below for nested schema)
                    properties:
                      config:
                        description: (Attributes) Configuration for assets within
                          a Worker. (see below for nested schema)
                        properties:
                          htmlHandling:
                            description: |-
                              (String) Determines the redirects and rewrites of requests for HTML content.
                              Determines the redirects and rewrites of requests for HTML content.
                            type: string
                          notFoundHandling:
                            description: |-
                              (String) Determines the response when a request does not match a static asset, and there is no Worker script.
                              Determines the response when a request does not match a static asset, and there is no Worker script.
                            type: string
                          runWorkerFirst:
                            description: |-
                              (Boolean) When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
                              When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
                            type: boolean
                          serveDirectly:
                            description: |-
                              (Boolean) When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
                              When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
                            type: boolean
                        type: object
                      jwt:
                        description: |-
                          (String) Token provided upon successful upload of all files from a registered manifest.
                          Token provided upon successful upload of all files from a registered manifest.
                        type: string
                    type: object
                  bindings:
                    description: upload-metadata/#bindings. (see below for nested
                      schema)
                    items:
                      properties:
                        bucketName:
                          description: |-
                            (String) R2 bucket to bind to.
                            R2 bucket to bind to.
                          type: string
                        certificateId:
                          description: |-
                            (String) Identifier of the certificate to bind to.
                            Identifier of the certificate to bind to.
                          type: string
                        className:
                          description: |-
                            (String) The exported class name of the Durable Object.
                            The exported class name of the Durable Object.
                          type: string
                        dataset:
                          description: |-
                            (String) The dataset name to bind to.
                            The dataset name to bind to.
                          type: string
                        environment:
                          description: |-
                            (String) The environment of the script_name to bind to.
                            The environment of the script_name to bind to.
                          type: string
                        id:
                          description: |-
                            (String) Name of the script, used in URLs and route configuration.
                            Identifier of the D1 database to bind to.
                          type: string
                        indexName:
                          description: |-
                            (String) Name of the Vectorize index to bind to.
                            Name of the Vectorize index to bind to.
                          type: string
                        json:
                          description: |-
                            (String) JSON data to use.
                            JSON data to use.
                          type: string
                        name:
                          description: |-
                            (String) A JavaScript variable name for the binding.
                            A JavaScript variable name for the binding.
                          type: string
                        namespace:
                          description: |-
                            (String) Namespace to bind to.
                            Namespace to bind to.
                          type: string
                        namespaceId:
                          description: |-
                            (String) Namespace identifier tag.
                            Namespace identifier tag.
                          type: string
                        outbound:
                          description: (Attributes) Outbound worker. (see below for
                            nested schema)
                          properties:
                            params:
                              description: |-
                                (List of String) Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
                                Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
                              items:
                                type: string
                              type: array
                            worker:
                              description: (Attributes) Outbound worker. (see below
                                for nested schema)
                              properties:
                                environment:
                                  description: |-
                                    (String) The environment of the script_name to bind to.
                                    Environment of the outbound worker.
                                  type: string
                                service:
                                  description: |-
                                    (String) Name of Worker to bind to.
                                    Name of the outbound worker.
                                  type: string
                              type: object
                          type: object
                        queueName:
                          description: |-
                            (String) Name of the Queue to bind to.
                            Name of the Queue to bind to.
                          type: string
                        scriptName:
                          description: |-
                            (String) Name of the script, used in URLs and route configuration.
                            The script where the Durable Object is defined, if it is external to this Worker.
                          type: string
                        service:
                          description: |-
                            (String) Name of Worker to bind to.
                            Name of Worker to bind to.
                          type: string
                        text:
                          description: |-
                            (String) The text value to use.
                            The text value to use.
                          type: string
                        type:
                          description: |-
                            (String) The kind of resource that the binding provides.
                            The kind of resource that the binding provides.
                          type: string
                      type: object
                    type: array
                  bodyPart:
                    description: |-
                      (String) Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the fetch event). Indicates a service worker syntax Worker.
                      Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the `fetch` event). Indicates a `service worker syntax` Worker.
                    type: string
                  compatibilityDate:
                    description: |-
                      (String) Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
                      Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
                    type: string
                  compatibilityFlags:
                    description: |-
                      (List of String) Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a compatibility_date.
                      Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a `compatibility_date`.
                    items:
                      type: string
                    type: array
                  content:
                    description: |-
                      (String) Module or Service Worker contents of the Worker.
                      Module or Service Worker contents of the Worker.
                    type: string
                  createdOn:
                    description: |-
                      (String) When the script was created.
                      When the script was created.
                    type: string
                  etag:
                    description: |-
                      None-Match header when updating.
                      Hashed script content, can be used in a If-None-Match header when updating.
                    type: string
                  hasAssets:
                    description: |-
                      (Boolean) Whether a Worker contains assets.
                      Whether a Worker contains assets.
                    type: boolean
                  hasModules:
                    description: |-
                      (Boolean) Whether a Worker contains modules.
                      Whether a Worker contains modules.
                    type: boolean
                  id:
                    description: (String) Name of the script, used in URLs and route
                      configuration.
                    type: string
                  keepAssets:
                    description: |-
                      (Boolean) Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
                      Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
                    type: boolean
                  keepBindings:
                    description: |-
                      (List of String) List of binding types to keep from previous_upload.
                      List of binding types to keep from previous_upload.
                    items:
                      type: string
                    type: array
                  logpush:
                    description: |-
                      (Boolean) Whether Logpush is turned on for the Worker.
                      Whether Logpush is turned on for the Worker.
                    type: boolean
                  mainModule:
                    description: |-
                      (String) Name of the part in the multipart request that contains the main module (e.g. the file exporting a fetch handler). Indicates a module syntax Worker.
                      Name of the part in the multipart request that contains the main module (e.g. the file exporting a `fetch` handler). Indicates a `module syntax` Worker.
                    type: string
                  migrations:
                    description: (Attributes) Migrations to apply for Durable Objects
                      associated with this Worker. (see below for nested schema)
                    properties:
                      deletedClasses:
                        description: |-
                          (List of String) A list of classes to delete Durable Object namespaces from.
                          A list of classes to delete Durable Object namespaces from.
                        items:
                          type: string
                        type: array
                      newClasses:
                        description: |-
                          (List of String) A list of classes to create Durable Object namespaces from.
                          A list of classes to create Durable Object namespaces from.
                        items:
                          type: string
                        type: array
                      newSqliteClasses:
                        description: |-
                          (List of String) A list of classes to create Durable Object namespaces with SQLite from.
                          A list of classes to create Durable Object namespaces with SQLite from.
                        items:
                          type: string
                        type: array
                      newTag:
                        description: |-
                          (String) Tag to set as the latest migration tag.
                          Tag to set as the latest migration tag.
                        type: string
                      oldTag:
                        description: |-
                          (String) Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
                          Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
                        type: string
                      renamedClasses:
                        description: (Attributes List) A list of classes with Durable
                          Object namespaces that were renamed. (see below for nested
                          schema)
                        items:
                          properties:
                            from:
                              description: (String)
                              type: string
                            to:
                              description: (String)
                              type: string
                          type: object
                        type: array
                      steps:
                        description: (Attributes List) Migrations to apply in order.
                          (see below for nested schema)
                        items:
                          properties:
                            deletedClasses:
                              description: |-
                                (List of String) A list of classes to delete Durable Object namespaces from.
                                A list of classes to delete Durable Object namespaces from.
                              items:
                                type: string
                              type: array
                            newClasses:
                              description: |-
                                (List of String) A list of classes to create Durable Object namespaces from.
                                A list of classes to create Durable Object namespaces from.
                              items:
                                type: string
                              type: array
                            newSqliteClasses:
                              description: |-
                                (List of String) A list of classes to create Durable Object namespaces with SQLite from.
                                A list of classes to create Durable Object namespaces with SQLite from.
                              items:
                                type: string
                              type: array
                            renamedClasses:
                              description: (Attributes List) A list of classes with
                                Durable Object namespaces that were renamed. (see
                                below for nested schema)
                              items:
                                properties:
                                  from:
                                    description: (String)
                                    type: string
                                  to:
                                    description: (String)
                                    type: string
                                type: object
                              type: array
                            transferredClasses:
                              description: (Attributes List) A list of transfers for
                                Durable Object namespaces from a different Worker
                                and class to a class defined in this Worker. (see
                                below for nested schema)
                              items:
                                properties:
                                  from:
                                    description: (String)
                                    type: string
                                  fromScript:
                                    description: (String)
                                    type: string
                                  to:
                                    description: (String)
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      transferredClasses:
                        description: (Attributes List) A list of transfers for Durable
                          Object namespaces from a different Worker and class to a
                          class defined in this Worker. (see below for nested schema)
                        items:
                          properties:
                            from:
                              description: (String)
                              type: string
                            fromScript:
                              description: (String)
                              type: string
                            to:
                              description: (String)
                              type: string
                          type: object
                        type: array
                    type: object
                  modifiedOn:
                    description: |-
                      (String) When the script was last modified.
                      When the script was last modified.
                    type: string
                  observability:
                    description: (Attributes) Observability settings for the Worker.
                      (see below for nested schema)
                    properties:
                      enabled:
                        description: |-
                          (Boolean) Whether observability is enabled for the Worker.
                          Whether observability is enabled for the Worker.
                        type: boolean
                      headSamplingRate:
                        description: |-
                          (Number) The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
                          The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
                        type: number
                    type: object
                  placement:
                    description: (Attributes) Configuration for Smart Placement. (see
                      below for nested schema)
                    properties:
                      mode:
                        description: |-
                          (String) Enables Smart Placement.
                          Enables [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
                        type: string
                      status:
                        description: |-
                          (String) Status of Smart Placement.
                          Status of [Smart Placement](https://developers.cloudflare.com/workers/configuration/smart-placement).
                        type: string
                    type: object
                  scriptName:
                    description: |-
                      (String) Name of the script, used in URLs and route configuration.
                      Name of the script, used in URLs and route configuration.
                    type: string
                  startupTimeMs:
                    description: (Number)
                    type: number
                  tailConsumers:
                    description: (Attributes List) List of Workers that will consume
                      logs from the attached Worker. (see below for nested schema)
                    items:
                      properties:
                        environment:
                          description: |-
                            (String) The environment of the script_name to bind to.
                            Optional environment if the Worker utilizes one.
                          type: string
                        namespace:
                          description: |-
                            (String) Namespace to bind to.
                            Optional dispatch namespace the script belongs to.
                          type: string
                        service:
                          description: |-
                            (String) Name of Worker to bind to.
                            Name of Worker that is to be the consumer.
                          type: string
                      type: object
                    type: array
                  usageModel:
                    description: |-
                      (String) Usage model for the Worker invocations.
                      Usage model for the Worker invocations.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
