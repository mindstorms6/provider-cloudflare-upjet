---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ssls.custom.cloudflare.crossplane.io
spec:
  group: custom.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare-upjet
    kind: SSL
    listKind: SSLList
    plural: ssls
    singular: ssl
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SSL is the Schema for the SSLs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SSLSpec defines the desired state of SSL
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bundleMethod:
                    description: |-
                      (String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
                      A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
                    type: string
                  certificate:
                    description: |-
                      (String) The zone's SSL certificate or certificate and the intermediate(s).
                      The zone's SSL certificate or certificate and the intermediate(s).
                    type: string
                  geoRestrictions:
                    description: (Attributes) Specify the region where your private
                      key can be held locally for optimal TLS performance. HTTPS connections
                      to any excluded data center will still be fully encrypted, but
                      will incur some latency while Keyless SSL is used to complete
                      the handshake with the nearest allowed data center. Options
                      allow distribution to only to U.S. data centers, only to E.U.
                      data centers, or only to highest security data centers. Default
                      distribution is to all Cloudflare datacenters, for optimal performance.
                      (see below for nested schema)
                    properties:
                      label:
                        description: (String)
                        type: string
                    type: object
                  keylessServer:
                    description: (Attributes) (see below for nested schema)
                    properties:
                      tunnel:
                        description: (Attributes) Configuration for using Keyless
                          SSL through a Cloudflare Tunnel (see below for nested schema)
                        type: object
                    type: object
                  policy:
                    description: |-
                      1_alpha-2#Officially_assigned_code_elements) can be chosen, such as 'country: IN', as well as 'region: EU' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.
                      Specify the policy that determines the region where your private key will be held locally. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Any combination of countries, specified by their two letter country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) can be chosen, such as 'country: IN', as well as 'region: EU' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.
                    type: string
                  privateKey:
                    description: |-
                      (String) The zone's private key.
                      The zone's private key.
                    type: string
                  type:
                    description: |-
                      (String) The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
                      The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
                    type: string
                  zoneId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bundleMethod:
                    description: |-
                      (String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
                      A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
                    type: string
                  certificate:
                    description: |-
                      (String) The zone's SSL certificate or certificate and the intermediate(s).
                      The zone's SSL certificate or certificate and the intermediate(s).
                    type: string
                  geoRestrictions:
                    description: (Attributes) Specify the region where your private
                      key can be held locally for optimal TLS performance. HTTPS connections
                      to any excluded data center will still be fully encrypted, but
                      will incur some latency while Keyless SSL is used to complete
                      the handshake with the nearest allowed data center. Options
                      allow distribution to only to U.S. data centers, only to E.U.
                      data centers, or only to highest security data centers. Default
                      distribution is to all Cloudflare datacenters, for optimal performance.
                      (see below for nested schema)
                    properties:
                      label:
                        description: (String)
                        type: string
                    type: object
                  keylessServer:
                    description: (Attributes) (see below for nested schema)
                    properties:
                      tunnel:
                        description: (Attributes) Configuration for using Keyless
                          SSL through a Cloudflare Tunnel (see below for nested schema)
                        type: object
                    type: object
                  policy:
                    description: |-
                      1_alpha-2#Officially_assigned_code_elements) can be chosen, such as 'country: IN', as well as 'region: EU' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.
                      Specify the policy that determines the region where your private key will be held locally. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Any combination of countries, specified by their two letter country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) can be chosen, such as 'country: IN', as well as 'region: EU' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.
                    type: string
                  privateKey:
                    description: |-
                      (String) The zone's private key.
                      The zone's private key.
                    type: string
                  type:
                    description: |-
                      (String) The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
                      The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
                    type: string
                  zoneId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.certificate is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.certificate)
                || (has(self.initProvider) && has(self.initProvider.certificate))'
            - message: spec.forProvider.privateKey is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.privateKey)
                || (has(self.initProvider) && has(self.initProvider.privateKey))'
            - message: spec.forProvider.zoneId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.zoneId)
                || (has(self.initProvider) && has(self.initProvider.zoneId))'
          status:
            description: SSLStatus defines the observed state of SSL.
            properties:
              atProvider:
                properties:
                  bundleMethod:
                    description: |-
                      (String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
                      A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
                    type: string
                  certificate:
                    description: |-
                      (String) The zone's SSL certificate or certificate and the intermediate(s).
                      The zone's SSL certificate or certificate and the intermediate(s).
                    type: string
                  expiresOn:
                    description: |-
                      (String) When the certificate from the authority expires.
                      When the certificate from the authority expires.
                    type: string
                  geoRestrictions:
                    description: (Attributes) Specify the region where your private
                      key can be held locally for optimal TLS performance. HTTPS connections
                      to any excluded data center will still be fully encrypted, but
                      will incur some latency while Keyless SSL is used to complete
                      the handshake with the nearest allowed data center. Options
                      allow distribution to only to U.S. data centers, only to E.U.
                      data centers, or only to highest security data centers. Default
                      distribution is to all Cloudflare datacenters, for optimal performance.
                      (see below for nested schema)
                    properties:
                      label:
                        description: (String)
                        type: string
                    type: object
                  hosts:
                    description: (List of String)
                    items:
                      type: string
                    type: array
                  id:
                    description: (String) Identifier
                    type: string
                  issuer:
                    description: |-
                      (String) The certificate authority that issued the certificate.
                      The certificate authority that issued the certificate.
                    type: string
                  keylessServer:
                    description: (Attributes) (see below for nested schema)
                    properties:
                      createdOn:
                        description: |-
                          (String) When the Keyless SSL was created.
                          When the Keyless SSL was created.
                        type: string
                      enabled:
                        description: |-
                          (Boolean) Whether or not the Keyless SSL is on or off.
                          Whether or not the Keyless SSL is on or off.
                        type: boolean
                      host:
                        description: |-
                          (String) The keyless SSL name.
                          The keyless SSL name.
                        type: string
                      id:
                        description: |-
                          (String) Identifier
                          Keyless certificate identifier tag.
                        type: string
                      modifiedOn:
                        description: |-
                          (String) When the certificate was last modified.
                          When the Keyless SSL was last modified.
                        type: string
                      name:
                        description: |-
                          (String) The keyless SSL name.
                          The keyless SSL name.
                        type: string
                      permissions:
                        description: |-
                          (List of String) Available permissions for the Keyless SSL for the current user requesting the item.
                          Available permissions for the Keyless SSL for the current user requesting the item.
                        items:
                          type: string
                        type: array
                      port:
                        description: |-
                          (Number) The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.
                          The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.
                        type: number
                      status:
                        description: |-
                          (String) Status of the zone's custom SSL.
                          Status of the Keyless SSL.
                        type: string
                      tunnel:
                        description: (Attributes) Configuration for using Keyless
                          SSL through a Cloudflare Tunnel (see below for nested schema)
                        properties:
                          privateIp:
                            description: |-
                              (String) Private IP of the Key Server Host
                              Private IP of the Key Server Host
                            type: string
                          vnetId:
                            description: |-
                              (String) Cloudflare Tunnel Virtual Network ID
                              Cloudflare Tunnel Virtual Network ID
                            type: string
                        type: object
                    type: object
                  modifiedOn:
                    description: |-
                      (String) When the certificate was last modified.
                      When the certificate was last modified.
                    type: string
                  policy:
                    description: |-
                      1_alpha-2#Officially_assigned_code_elements) can be chosen, such as 'country: IN', as well as 'region: EU' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.
                      Specify the policy that determines the region where your private key will be held locally. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Any combination of countries, specified by their two letter country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) can be chosen, such as 'country: IN', as well as 'region: EU' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.
                    type: string
                  priority:
                    description: |-
                      (Number) The order/priority in which the certificate will be used in a request. The higher priority will break ties across overlapping 'legacy_custom' certificates, but 'legacy_custom' certificates will always supercede 'sni_custom' certificates.
                      The order/priority in which the certificate will be used in a request. The higher priority will break ties across overlapping 'legacy_custom' certificates, but 'legacy_custom' certificates will always supercede 'sni_custom' certificates.
                    type: number
                  privateKey:
                    description: |-
                      (String) The zone's private key.
                      The zone's private key.
                    type: string
                  signature:
                    description: |-
                      (String) The type of hash used for the certificate.
                      The type of hash used for the certificate.
                    type: string
                  status:
                    description: |-
                      (String) Status of the zone's custom SSL.
                      Status of the zone's custom SSL.
                    type: string
                  type:
                    description: |-
                      (String) The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
                      The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
                    type: string
                  uploadedOn:
                    description: |-
                      (String) When the certificate was uploaded to Cloudflare.
                      When the certificate was uploaded to Cloudflare.
                    type: string
                  zoneId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
