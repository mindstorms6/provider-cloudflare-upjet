---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: rooms.waiting.cloudflare.crossplane.io
spec:
  group: waiting.cloudflare.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare-upjet
    kind: Room
    listKind: RoomList
    plural: rooms
    singular: room
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Room is the Schema for the Rooms API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RoomSpec defines the desired state of Room
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalRoutes:
                    description: (Attributes List) Only available for the Waiting
                      Room Advanced subscription. Additional hostname and path combinations
                      to which this waiting room will be applied. There is an implied
                      wildcard at the end of the path. The hostname and path combination
                      must be unique to this and all other waiting rooms. (see below
                      for nested schema)
                    items:
                      properties:
                        host:
                          description: |-
                            (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                            The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).
                          type: string
                        path:
                          description: |-
                            (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                            Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                          type: string
                      type: object
                    type: array
                  cookieAttributes:
                    description: (Attributes) Configures cookie attributes for the
                      waiting room cookie. This encrypted cookie stores a user's status
                      in the waiting room, such as queue position. (see below for
                      nested schema)
                    properties:
                      samesite:
                        description: |-
                          (String) Configures the SameSite attribute on the waiting room cookie. Value auto will be translated to lax or none depending if Always Use HTTPS is enabled. Note that when using value none, the secure attribute cannot be set to never.
                          Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.
                        type: string
                      secure:
                        description: |-
                          Cookie header, never indicates that the Secure attribute will not be set, and auto will set the Secure attribute depending if Always Use HTTPS is enabled.
                          Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.
                        type: string
                    type: object
                  cookieSuffix:
                    description: |-
                      (String) Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If cookie_suffix is "abcd", the cookie name will be __cf_waitingroom_abcd. This field is required if using additional_routes.
                      Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is "abcd", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.
                    type: string
                  customPageHtml:
                    description: |-
                      (String) Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
                      Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
                      1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.
                      2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:
                      3. {{`waitTime`}} Number of minutes of estimated wait for a user.
                      4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).
                      5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).
                      6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.


                      To view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.
                    type: string
                  defaultTemplateLanguage:
                    description: |-
                      US (English) will be used.
                      The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.
                    type: string
                  description:
                    description: |-
                      (String) A note that you can use to add more details about the waiting room.
                      A note that you can use to add more details about the waiting room.
                    type: string
                  disableSessionRenewal:
                    description: |-
                      (Boolean) Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If true, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If false, a user's session cookie will be automatically renewed on every request.
                      Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.
                    type: boolean
                  enabledOriginCommands:
                    description: |-
                      (List of String) A list of enabled origin commands.
                      A list of enabled origin commands.
                    items:
                      type: string
                    type: array
                  host:
                    description: |-
                      (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                      The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                    type: string
                  jsonResponseEnabled:
                    description: |-
                      (Boolean) Only available for the Waiting Room Advanced subscription. If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property cfWaitingRoom which is an object containing the following fields:
                      Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:
                      1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).
                      2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.
                      3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.
                      4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).
                      5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.
                      6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).
                      7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.
                      8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.
                      9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.
                      10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.
                      11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.
                      12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.
                      13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.
                      14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.
                      15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.
                      16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.
                      17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.
                      18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.
                      19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.
                      20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.
                      21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.
                      22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.
                      23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.


                      An example cURL to a waiting room could be:


                      curl -X GET "https://example.com/waitingroom" \
                      -H "Accept: application/json"


                      If `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:


                      {
                      "cfWaitingRoom": {
                      "inWaitingRoom": true,
                      "waitTimeKnown": true,
                      "waitTime": 10,
                      "waitTime25Percentile": 0,
                      "waitTime50Percentile": 0,
                      "waitTime75Percentile": 0,
                      "waitTimeFormatted": "10 minutes",
                      "queueIsFull": false,
                      "queueAll": false,
                      "lastUpdated": "2020-08-03T23:46:00.000Z",
                      "refreshIntervalSeconds": 20,
                      "queueingMethod": "fifo",
                      "isFIFOQueue": true,
                      "isRandomQueue": false,
                      "isPassthroughQueue": false,
                      "isRejectQueue": false,
                      "isEventActive": false,
                      "isEventPrequeueing": false,
                      "timeUntilEventStart": 0,
                      "timeUntilEventStartFormatted": "unavailable",
                      "timeUntilEventEnd": 0,
                      "timeUntilEventEndFormatted": "unavailable",
                      "shuffleAtEventStart": false
                      }
                      }


                      If `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:


                      {
                      "cfWaitingRoom": {
                      "inWaitingRoom": true,
                      "waitTimeKnown": true,
                      "waitTime": 10,
                      "waitTime25Percentile": 5,
                      "waitTime50Percentile": 10,
                      "waitTime75Percentile": 15,
                      "waitTimeFormatted": "5 minutes to 15 minutes",
                      "queueIsFull": false,
                      "queueAll": false,
                      "lastUpdated": "2020-08-03T23:46:00.000Z",
                      "refreshIntervalSeconds": 20,
                      "queueingMethod": "random",
                      "isFIFOQueue": false,
                      "isRandomQueue": true,
                      "isPassthroughQueue": false,
                      "isRejectQueue": false,
                      "isEventActive": true,
                      "isEventPrequeueing": false,
                      "timeUntilEventStart": 0,
                      "timeUntilEventStartFormatted": "unavailable",
                      "timeUntilEventEnd": 15,
                      "timeUntilEventEndFormatted": "15 minutes",
                      "shuffleAtEventStart": true
                      }
                      }.
                    type: boolean
                  newUsersPerMinute:
                    description: |-
                      (Number) Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
                      Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
                    type: number
                  path:
                    description: |-
                      (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                      Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                    type: string
                  queueAll:
                    description: |-
                      (Boolean) If queue_all is true, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
                      If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
                    type: boolean
                  queueingMethod:
                    description: |-
                      (String) Sets the queueing method used by the waiting room. Changing this parameter from the default queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if queue_all is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:
                      Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:
                      1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.
                      2. `random`: Random queue where customers gain access randomly, regardless of arrival time.
                      3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.
                      4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.
                    type: string
                  queueingStatusCode:
                    description: |-
                      (Number) HTTP status code returned to a user while in the queue.
                      HTTP status code returned to a user while in the queue.
                    type: number
                  sessionDuration:
                    description: |-
                      (Number) Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
                      Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
                    type: number
                  suspended:
                    description: |-
                      (Boolean) Suspends or allows traffic going to the waiting room. If set to true, the traffic will not go to the waiting room.
                      Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.
                    type: boolean
                  totalActiveUsers:
                    description: |-
                      (Number) Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
                      Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
                    type: number
                  turnstileAction:
                    description: |-
                      (String) Which action to take when a bot is detected using Turnstile. log will
                      have no impact on queueing behavior, simply keeping track of how many
                      bots are detected in Waiting Room Analytics. infinite_queue will send
                      bots to a false queueing state, where they will never reach your
                      origin. infinite_queue requires Advanced Waiting Room.
                      Which action to take when a bot is detected using Turnstile. `log` will
                      have no impact on queueing behavior, simply keeping track of how many
                      bots are detected in Waiting Room Analytics. `infinite_queue` will send
                      bots to a false queueing state, where they will never reach your
                      origin. `infinite_queue` requires Advanced Waiting Room.
                    type: string
                  turnstileMode:
                    description: |-
                      (String) Which Turnstile widget type to use for detecting bot traffic. See
                      the Turnstile documentation
                      for the definitions of these widget types. Set to off to disable the
                      Turnstile integration entirely. Setting this to anything other than
                      off or invisible requires Advanced Waiting Room.
                      Which Turnstile widget type to use for detecting bot traffic. See
                      [the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)
                      for the definitions of these widget types. Set to `off` to disable the
                      Turnstile integration entirely. Setting this to anything other than
                      `off` or `invisible` requires Advanced Waiting Room.
                    type: string
                  zoneId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  additionalRoutes:
                    description: (Attributes List) Only available for the Waiting
                      Room Advanced subscription. Additional hostname and path combinations
                      to which this waiting room will be applied. There is an implied
                      wildcard at the end of the path. The hostname and path combination
                      must be unique to this and all other waiting rooms. (see below
                      for nested schema)
                    items:
                      properties:
                        host:
                          description: |-
                            (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                            The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).
                          type: string
                        path:
                          description: |-
                            (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                            Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                          type: string
                      type: object
                    type: array
                  cookieAttributes:
                    description: (Attributes) Configures cookie attributes for the
                      waiting room cookie. This encrypted cookie stores a user's status
                      in the waiting room, such as queue position. (see below for
                      nested schema)
                    properties:
                      samesite:
                        description: |-
                          (String) Configures the SameSite attribute on the waiting room cookie. Value auto will be translated to lax or none depending if Always Use HTTPS is enabled. Note that when using value none, the secure attribute cannot be set to never.
                          Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.
                        type: string
                      secure:
                        description: |-
                          Cookie header, never indicates that the Secure attribute will not be set, and auto will set the Secure attribute depending if Always Use HTTPS is enabled.
                          Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.
                        type: string
                    type: object
                  cookieSuffix:
                    description: |-
                      (String) Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If cookie_suffix is "abcd", the cookie name will be __cf_waitingroom_abcd. This field is required if using additional_routes.
                      Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is "abcd", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.
                    type: string
                  customPageHtml:
                    description: |-
                      (String) Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
                      Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
                      1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.
                      2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:
                      3. {{`waitTime`}} Number of minutes of estimated wait for a user.
                      4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).
                      5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).
                      6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.


                      To view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.
                    type: string
                  defaultTemplateLanguage:
                    description: |-
                      US (English) will be used.
                      The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.
                    type: string
                  description:
                    description: |-
                      (String) A note that you can use to add more details about the waiting room.
                      A note that you can use to add more details about the waiting room.
                    type: string
                  disableSessionRenewal:
                    description: |-
                      (Boolean) Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If true, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If false, a user's session cookie will be automatically renewed on every request.
                      Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.
                    type: boolean
                  enabledOriginCommands:
                    description: |-
                      (List of String) A list of enabled origin commands.
                      A list of enabled origin commands.
                    items:
                      type: string
                    type: array
                  host:
                    description: |-
                      (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                      The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                    type: string
                  jsonResponseEnabled:
                    description: |-
                      (Boolean) Only available for the Waiting Room Advanced subscription. If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property cfWaitingRoom which is an object containing the following fields:
                      Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:
                      1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).
                      2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.
                      3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.
                      4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).
                      5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.
                      6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).
                      7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.
                      8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.
                      9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.
                      10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.
                      11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.
                      12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.
                      13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.
                      14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.
                      15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.
                      16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.
                      17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.
                      18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.
                      19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.
                      20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.
                      21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.
                      22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.
                      23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.


                      An example cURL to a waiting room could be:


                      curl -X GET "https://example.com/waitingroom" \
                      -H "Accept: application/json"


                      If `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:


                      {
                      "cfWaitingRoom": {
                      "inWaitingRoom": true,
                      "waitTimeKnown": true,
                      "waitTime": 10,
                      "waitTime25Percentile": 0,
                      "waitTime50Percentile": 0,
                      "waitTime75Percentile": 0,
                      "waitTimeFormatted": "10 minutes",
                      "queueIsFull": false,
                      "queueAll": false,
                      "lastUpdated": "2020-08-03T23:46:00.000Z",
                      "refreshIntervalSeconds": 20,
                      "queueingMethod": "fifo",
                      "isFIFOQueue": true,
                      "isRandomQueue": false,
                      "isPassthroughQueue": false,
                      "isRejectQueue": false,
                      "isEventActive": false,
                      "isEventPrequeueing": false,
                      "timeUntilEventStart": 0,
                      "timeUntilEventStartFormatted": "unavailable",
                      "timeUntilEventEnd": 0,
                      "timeUntilEventEndFormatted": "unavailable",
                      "shuffleAtEventStart": false
                      }
                      }


                      If `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:


                      {
                      "cfWaitingRoom": {
                      "inWaitingRoom": true,
                      "waitTimeKnown": true,
                      "waitTime": 10,
                      "waitTime25Percentile": 5,
                      "waitTime50Percentile": 10,
                      "waitTime75Percentile": 15,
                      "waitTimeFormatted": "5 minutes to 15 minutes",
                      "queueIsFull": false,
                      "queueAll": false,
                      "lastUpdated": "2020-08-03T23:46:00.000Z",
                      "refreshIntervalSeconds": 20,
                      "queueingMethod": "random",
                      "isFIFOQueue": false,
                      "isRandomQueue": true,
                      "isPassthroughQueue": false,
                      "isRejectQueue": false,
                      "isEventActive": true,
                      "isEventPrequeueing": false,
                      "timeUntilEventStart": 0,
                      "timeUntilEventStartFormatted": "unavailable",
                      "timeUntilEventEnd": 15,
                      "timeUntilEventEndFormatted": "15 minutes",
                      "shuffleAtEventStart": true
                      }
                      }.
                    type: boolean
                  newUsersPerMinute:
                    description: |-
                      (Number) Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
                      Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
                    type: number
                  path:
                    description: |-
                      (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                      Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                    type: string
                  queueAll:
                    description: |-
                      (Boolean) If queue_all is true, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
                      If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
                    type: boolean
                  queueingMethod:
                    description: |-
                      (String) Sets the queueing method used by the waiting room. Changing this parameter from the default queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if queue_all is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:
                      Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:
                      1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.
                      2. `random`: Random queue where customers gain access randomly, regardless of arrival time.
                      3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.
                      4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.
                    type: string
                  queueingStatusCode:
                    description: |-
                      (Number) HTTP status code returned to a user while in the queue.
                      HTTP status code returned to a user while in the queue.
                    type: number
                  sessionDuration:
                    description: |-
                      (Number) Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
                      Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
                    type: number
                  suspended:
                    description: |-
                      (Boolean) Suspends or allows traffic going to the waiting room. If set to true, the traffic will not go to the waiting room.
                      Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.
                    type: boolean
                  totalActiveUsers:
                    description: |-
                      (Number) Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
                      Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
                    type: number
                  turnstileAction:
                    description: |-
                      (String) Which action to take when a bot is detected using Turnstile. log will
                      have no impact on queueing behavior, simply keeping track of how many
                      bots are detected in Waiting Room Analytics. infinite_queue will send
                      bots to a false queueing state, where they will never reach your
                      origin. infinite_queue requires Advanced Waiting Room.
                      Which action to take when a bot is detected using Turnstile. `log` will
                      have no impact on queueing behavior, simply keeping track of how many
                      bots are detected in Waiting Room Analytics. `infinite_queue` will send
                      bots to a false queueing state, where they will never reach your
                      origin. `infinite_queue` requires Advanced Waiting Room.
                    type: string
                  turnstileMode:
                    description: |-
                      (String) Which Turnstile widget type to use for detecting bot traffic. See
                      the Turnstile documentation
                      for the definitions of these widget types. Set to off to disable the
                      Turnstile integration entirely. Setting this to anything other than
                      off or invisible requires Advanced Waiting Room.
                      Which Turnstile widget type to use for detecting bot traffic. See
                      [the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)
                      for the definitions of these widget types. Set to `off` to disable the
                      Turnstile integration entirely. Setting this to anything other than
                      `off` or `invisible` requires Advanced Waiting Room.
                    type: string
                  zoneId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.additionalRoutes is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.additionalRoutes)
                || (has(self.initProvider) && has(self.initProvider.additionalRoutes))'
            - message: spec.forProvider.host is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.host)
                || (has(self.initProvider) && has(self.initProvider.host))'
            - message: spec.forProvider.newUsersPerMinute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.newUsersPerMinute)
                || (has(self.initProvider) && has(self.initProvider.newUsersPerMinute))'
            - message: spec.forProvider.totalActiveUsers is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.totalActiveUsers)
                || (has(self.initProvider) && has(self.initProvider.totalActiveUsers))'
            - message: spec.forProvider.zoneId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.zoneId)
                || (has(self.initProvider) && has(self.initProvider.zoneId))'
          status:
            description: RoomStatus defines the observed state of Room.
            properties:
              atProvider:
                properties:
                  additionalRoutes:
                    description: (Attributes List) Only available for the Waiting
                      Room Advanced subscription. Additional hostname and path combinations
                      to which this waiting room will be applied. There is an implied
                      wildcard at the end of the path. The hostname and path combination
                      must be unique to this and all other waiting rooms. (see below
                      for nested schema)
                    items:
                      properties:
                        host:
                          description: |-
                            (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                            The hostname to which this waiting room will be applied (no wildcards). The hostname must be the primary domain, subdomain, or custom hostname (if using SSL for SaaS) of this zone. Please do not include the scheme (http:// or https://).
                          type: string
                        path:
                          description: |-
                            (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                            Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                          type: string
                      type: object
                    type: array
                  cookieAttributes:
                    description: (Attributes) Configures cookie attributes for the
                      waiting room cookie. This encrypted cookie stores a user's status
                      in the waiting room, such as queue position. (see below for
                      nested schema)
                    properties:
                      samesite:
                        description: |-
                          (String) Configures the SameSite attribute on the waiting room cookie. Value auto will be translated to lax or none depending if Always Use HTTPS is enabled. Note that when using value none, the secure attribute cannot be set to never.
                          Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.
                        type: string
                      secure:
                        description: |-
                          Cookie header, never indicates that the Secure attribute will not be set, and auto will set the Secure attribute depending if Always Use HTTPS is enabled.
                          Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.
                        type: string
                    type: object
                  cookieSuffix:
                    description: |-
                      (String) Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If cookie_suffix is "abcd", the cookie name will be __cf_waitingroom_abcd. This field is required if using additional_routes.
                      Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If `cookie_suffix` is "abcd", the cookie name will be `__cf_waitingroom_abcd`. This field is required if using `additional_routes`.
                    type: string
                  createdOn:
                    description: (String)
                    type: string
                  customPageHtml:
                    description: |-
                      (String) Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
                      Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:
                      1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**.
                      2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use:
                      3. {{`waitTime`}} Number of minutes of estimated wait for a user.
                      4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`).
                      5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`).
                      6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.


                      To view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.
                    type: string
                  defaultTemplateLanguage:
                    description: |-
                      US (English) will be used.
                      The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.
                    type: string
                  description:
                    description: |-
                      (String) A note that you can use to add more details about the waiting room.
                      A note that you can use to add more details about the waiting room.
                    type: string
                  disableSessionRenewal:
                    description: |-
                      (Boolean) Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If true, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If false, a user's session cookie will be automatically renewed on every request.
                      Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.
                    type: boolean
                  enabledOriginCommands:
                    description: |-
                      (List of String) A list of enabled origin commands.
                      A list of enabled origin commands.
                    items:
                      type: string
                    type: array
                  host:
                    description: |-
                      (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                      The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  jsonResponseEnabled:
                    description: |-
                      (Boolean) Only available for the Waiting Room Advanced subscription. If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property cfWaitingRoom which is an object containing the following fields:
                      Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:
                      1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).
                      2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.
                      3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.
                      4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).
                      5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.
                      6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).
                      7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.
                      8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.
                      9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.
                      10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.
                      11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.
                      12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.
                      13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.
                      14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.
                      15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.
                      16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.
                      17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.
                      18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.
                      19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.
                      20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.
                      21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.
                      22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.
                      23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.


                      An example cURL to a waiting room could be:


                      curl -X GET "https://example.com/waitingroom" \
                      -H "Accept: application/json"


                      If `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:


                      {
                      "cfWaitingRoom": {
                      "inWaitingRoom": true,
                      "waitTimeKnown": true,
                      "waitTime": 10,
                      "waitTime25Percentile": 0,
                      "waitTime50Percentile": 0,
                      "waitTime75Percentile": 0,
                      "waitTimeFormatted": "10 minutes",
                      "queueIsFull": false,
                      "queueAll": false,
                      "lastUpdated": "2020-08-03T23:46:00.000Z",
                      "refreshIntervalSeconds": 20,
                      "queueingMethod": "fifo",
                      "isFIFOQueue": true,
                      "isRandomQueue": false,
                      "isPassthroughQueue": false,
                      "isRejectQueue": false,
                      "isEventActive": false,
                      "isEventPrequeueing": false,
                      "timeUntilEventStart": 0,
                      "timeUntilEventStartFormatted": "unavailable",
                      "timeUntilEventEnd": 0,
                      "timeUntilEventEndFormatted": "unavailable",
                      "shuffleAtEventStart": false
                      }
                      }


                      If `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:


                      {
                      "cfWaitingRoom": {
                      "inWaitingRoom": true,
                      "waitTimeKnown": true,
                      "waitTime": 10,
                      "waitTime25Percentile": 5,
                      "waitTime50Percentile": 10,
                      "waitTime75Percentile": 15,
                      "waitTimeFormatted": "5 minutes to 15 minutes",
                      "queueIsFull": false,
                      "queueAll": false,
                      "lastUpdated": "2020-08-03T23:46:00.000Z",
                      "refreshIntervalSeconds": 20,
                      "queueingMethod": "random",
                      "isFIFOQueue": false,
                      "isRandomQueue": true,
                      "isPassthroughQueue": false,
                      "isRejectQueue": false,
                      "isEventActive": true,
                      "isEventPrequeueing": false,
                      "timeUntilEventStart": 0,
                      "timeUntilEventStartFormatted": "unavailable",
                      "timeUntilEventEnd": 15,
                      "timeUntilEventEndFormatted": "15 minutes",
                      "shuffleAtEventStart": true
                      }
                      }.
                    type: boolean
                  modifiedOn:
                    description: (String)
                    type: string
                  newUsersPerMinute:
                    description: |-
                      (Number) Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
                      Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
                    type: number
                  nextEventPrequeueStartTime:
                    description: |-
                      (String) An ISO 8601 timestamp that marks when the next event will begin queueing.
                      An ISO 8601 timestamp that marks when the next event will begin queueing.
                    type: string
                  nextEventStartTime:
                    description: |-
                      (String) An ISO 8601 timestamp that marks when the next event will start.
                      An ISO 8601 timestamp that marks when the next event will start.
                    type: string
                  path:
                    description: |-
                      (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                      Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
                    type: string
                  queueAll:
                    description: |-
                      (Boolean) If queue_all is true, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
                      If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
                    type: boolean
                  queueingMethod:
                    description: |-
                      (String) Sets the queueing method used by the waiting room. Changing this parameter from the default queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if queue_all is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:
                      Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:
                      1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.
                      2. `random`: Random queue where customers gain access randomly, regardless of arrival time.
                      3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.
                      4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.
                    type: string
                  queueingStatusCode:
                    description: |-
                      (Number) HTTP status code returned to a user while in the queue.
                      HTTP status code returned to a user while in the queue.
                    type: number
                  sessionDuration:
                    description: |-
                      (Number) Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
                      Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
                    type: number
                  suspended:
                    description: |-
                      (Boolean) Suspends or allows traffic going to the waiting room. If set to true, the traffic will not go to the waiting room.
                      Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.
                    type: boolean
                  totalActiveUsers:
                    description: |-
                      (Number) Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
                      Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
                    type: number
                  turnstileAction:
                    description: |-
                      (String) Which action to take when a bot is detected using Turnstile. log will
                      have no impact on queueing behavior, simply keeping track of how many
                      bots are detected in Waiting Room Analytics. infinite_queue will send
                      bots to a false queueing state, where they will never reach your
                      origin. infinite_queue requires Advanced Waiting Room.
                      Which action to take when a bot is detected using Turnstile. `log` will
                      have no impact on queueing behavior, simply keeping track of how many
                      bots are detected in Waiting Room Analytics. `infinite_queue` will send
                      bots to a false queueing state, where they will never reach your
                      origin. `infinite_queue` requires Advanced Waiting Room.
                    type: string
                  turnstileMode:
                    description: |-
                      (String) Which Turnstile widget type to use for detecting bot traffic. See
                      the Turnstile documentation
                      for the definitions of these widget types. Set to off to disable the
                      Turnstile integration entirely. Setting this to anything other than
                      off or invisible requires Advanced Waiting Room.
                      Which Turnstile widget type to use for detecting bot traffic. See
                      [the Turnstile documentation](https://developers.cloudflare.com/turnstile/concepts/widget/#widget-types)
                      for the definitions of these widget types. Set to `off` to disable the
                      Turnstile integration entirely. Setting this to anything other than
                      `off` or `invisible` requires Advanced Waiting Room.
                    type: string
                  zoneId:
                    description: |-
                      (String) Identifier
                      Identifier
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
