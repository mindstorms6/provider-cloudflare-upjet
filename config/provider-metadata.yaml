name: cloudflare/cloudflare
resources:
    cloudflare_access_rule:
        subCategory: ""
        name: cloudflare_access_rule
        title: cloudflare_access_rule Resource - Cloudflare
        examples:
            - name: example_access_rule
              manifest: |-
                {
                  "configuration": {
                    "target": "ip",
                    "value": "198.51.100.4"
                  },
                  "mode": "block",
                  "notes": "This rule is enabled because of an event that occurred on date X.",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            allowed_modes: (List of String) The available actions that a rule can apply to a matched request.
            configuration: (Attributes) The rule configuration. (see below for nested schema)
            created_on: (String) The timestamp of when the rule was created.
            email: (String) The contact email address of the user.
            id: (String) The unique identifier of the IP Access rule.
            mode: (String) The action to apply to a matched request.
            modified_on: (String) The timestamp of when the rule was last modified.
            notes: (String) An informative summary of the rule, typically used as a reminder or explanation.
            scope: (Attributes) All zones owned by the user will have the rule applied. (see below for nested schema)
            target: (String) The configuration target. You must set the target to ip when specifying an IP address in the rule.
            type: (String) The scope of the rule.
            value: (String) The IP address to match. This address will be compared to the IP address of incoming requests.
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_access_rule.example '<{accounts|zones}/{account_id|zone_id}>/<rule_id>'
    cloudflare_account:
        subCategory: ""
        name: cloudflare_account
        title: cloudflare_account Resource - Cloudflare
        examples:
            - name: example_account
              manifest: |-
                {
                  "name": "name",
                  "type": "standard",
                  "unit": {
                    "id": "f267e341f3dd4697bd3b9f71dd96247f"
                  }
                }
        argumentDocs:
            abuse_contact_email: (String) Sets an abuse contact email to notify for abuse reports.
            cloudflare.standard: for Cloudflare-branded nameservers
            created_on: (String) Timestamp for the creation of the account
            custom.account: for account custom nameservers
            custom.tenant: for tenant custom nameservers
            default_nameservers: (String) Specifies the default nameservers to be used for new zones added to this account.
            enforce_twofactor: |-
                (Boolean) Indicates whether membership in this account requires that
                Two-Factor Authentication is enabled
            id: (String) Identifier
            name: (String) Account name
            settings: (Attributes) Account settings (see below for nested schema)
            type: (String) the type of account being created. For self-serve customers, use standard. for enterprise customers, use enterprise.
            unit: (Attributes) information related to the tenant unit, and optionally, an id of the unit to create the account on. see https://developers.cloudflare.com/tenant/how-to/manage-accounts/ (see below for nested schema)
            use_account_custom_ns_by_default: |-
                (Boolean) Indicates whether new zones should use the account-level custom
                nameservers by default.
        importStatements:
            - $ terraform import cloudflare_account.example '<account_id>'
    cloudflare_account_member:
        subCategory: ""
        name: cloudflare_account_member
        title: cloudflare_account_member Resource - Cloudflare
        examples:
            - name: example_account_member
              manifest: |-
                {
                  "account_id": "eb78d65290b24279ba6f44721b3ea3c4",
                  "email": "user@example.com",
                  "roles": [
                    "3536bcfad5faccb999b47003c79917fb"
                  ],
                  "status": "accepted"
                }
        argumentDocs:
            access: (String) Allow or deny operations against the resources.
            account_id: (String) Account identifier tag.
            email: (String) The contact email address of the user.
            first_name: (String) User's first name
            id: (String) Membership identifier tag.
            last_name: (String) User's last name
            permission_groups: (Attributes List) A set of permission groups that are specified to the policy. (see below for nested schema)
            policies: (Attributes List) Array of policies associated with this member. (see below for nested schema)
            resource_groups: (Attributes List) A list of resource groups that the policy applies to. (see below for nested schema)
            roles: (List of String) Array of roles associated with this member.
            status: (String)
            two_factor_authentication_enabled: (Boolean) Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.
            user: (Attributes) Details of the user associated to the membership. (see below for nested schema)
        importStatements:
            - $ terraform import cloudflare_account_member.example '<account_id>/<member_id>'
    cloudflare_account_subscription:
        subCategory: ""
        name: cloudflare_account_subscription
        title: cloudflare_account_subscription Resource - Cloudflare
        examples:
            - name: example_account_subscription
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "frequency": "weekly",
                  "rate_plan": {
                    "currency": "USD",
                    "externally_managed": false,
                    "id": "free",
                    "is_contract": false,
                    "public_name": "Business Plan",
                    "scope": "zone",
                    "sets": [
                      "string"
                    ]
                  }
                }
        argumentDocs:
            account_id: (String) Identifier
            currency: (String) The monetary unit in which pricing information is displayed.
            current_period_end: (String) The end of the current period and also when the next billing is due.
            current_period_start: (String) When the current billing period started. May match initial_period_start if this is the first period.
            externally_managed: (Boolean) Whether this rate plan is managed externally from Cloudflare.
            frequency: (String) How often the subscription is renewed automatically.
            id: (String) Subscription identifier tag.
            is_contract: (Boolean) Whether a rate plan is enterprise-based (or newly adopted term contract).
            price: (Number) The price of the subscription that will be billed, in US dollars.
            public_name: (String) The full name of the rate plan.
            rate_plan: (Attributes) The rate plan applied to the subscription. (see below for nested schema)
            scope: (String) The scope that this rate plan applies to.
            sets: (List of String) The list of sets this rate plan applies to.
            state: (String) The state that the subscription is in.
            subscription_identifier: (String) Subscription identifier tag.
        importStatements: []
    cloudflare_account_token:
        subCategory: ""
        name: cloudflare_account_token
        title: cloudflare_account_token Resource - Cloudflare
        examples:
            - name: example_account_token
              manifest: |-
                {
                  "account_id": "eb78d65290b24279ba6f44721b3ea3c4",
                  "condition": {
                    "request_ip": {
                      "in": [
                        "123.123.123.0/24",
                        "2606:4700::/32"
                      ],
                      "not_in": [
                        "123.123.123.100/24",
                        "2606:4700:4700::/48"
                      ]
                    }
                  },
                  "expires_on": "2020-01-01T00:00:00Z",
                  "name": "readonly token",
                  "not_before": "2018-07-01T05:20:00Z",
                  "policies": [
                    {
                      "effect": "allow",
                      "permission_groups": [
                        {
                          "id": "c8fed203ed3043cba015a93ad1616f1f",
                          "meta": {
                            "key": "key",
                            "value": "value"
                          }
                        },
                        {
                          "id": "82e64a83756745bbbb1c9c2701bf816b",
                          "meta": {
                            "key": "key",
                            "value": "value"
                          }
                        }
                      ],
                      "resources": {
                        "com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*",
                        "com.cloudflare.api.account.zone.eb78d65290b24279ba6f44721b3ea3c4": "*"
                      }
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) Account identifier tag.
            condition: (Attributes) (see below for nested schema)
            effect: (String) Allow or deny operations against the resources.
            expires_on: (String) The expiration time on or after which the JWT MUST NOT be accepted for processing.
            id: (String) Token identifier tag.
            in: (List of String) List of IPv4/IPv6 CIDR addresses.
            issued_on: (String) The time on which the token was created.
            key: (String)
            last_used_on: (String) Last time the token was used.
            meta: (Attributes) Attributes associated to the permission group. (see below for nested schema)
            modified_on: (String) Last time the token was modified.
            name: (String) Token name.
            not_before: (String) The time before which the token MUST NOT be accepted for processing.
            not_in: (List of String) List of IPv4/IPv6 CIDR addresses.
            permission_groups: (Attributes List) A set of permission groups that are specified to the policy. (see below for nested schema)
            policies: (Attributes List) List of access policies assigned to the token. (see below for nested schema)
            request_ip: (Attributes) Client IP restrictions. (see below for nested schema)
            resources: (Map of String) A list of resource names that the policy applies to.
            status: (String) Status of the token.
            value: (String) The token value.
        importStatements:
            - $ terraform import cloudflare_account_token.example '<account_id>/<token_id>'
    cloudflare_address_map:
        subCategory: ""
        name: cloudflare_address_map
        title: cloudflare_address_map Resource - Cloudflare
        examples:
            - name: example_address_map
              manifest: |-
                {
                  "account_id": "258def64c72dae45f3e4c8516e2111f2",
                  "description": "My Ecommerce zones",
                  "enabled": true,
                  "ips": [
                    "192.0.2.1"
                  ],
                  "memberships": [
                    {
                      "identifier": "023e105f4ecef8ad9ca31a8372d0c353",
                      "kind": "zone"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) Identifier of a Cloudflare account.
            can_delete: (Boolean) If set to false, then the Address Map cannot be deleted via API. This is true for Cloudflare-managed maps.
            can_modify_ips: (Boolean) If set to false, then the IPs on the Address Map cannot be modified via the API. This is true for Cloudflare-managed maps.
            created_at: (String)
            default_sni: (String) If you have legacy TLS clients which do not send the TLS server name indicator, then you can specify one default SNI on the map. If Cloudflare receives a TLS handshake from a client without an SNI, it will respond with the default SNI on those IPs. The default SNI can be any valid zone or subdomain owned by the account.
            description: (String) An optional description field which may be used to describe the types of IPs or zones on the map.
            enabled: (Boolean) Whether the Address Map is enabled or not. Cloudflare's DNS will not respond with IP addresses on an Address Map until the map is enabled.
            id: (String) Identifier of an Address Map.
            identifier: (String) The identifier for the membership (eg. a zone or account tag).
            ips: (List of String)
            kind: (String) The type of the membership.
            memberships: (Attributes List) Zones and Accounts which will be assigned IPs on this Address Map. A zone membership will take priority over an account membership. (see below for nested schema)
            modified_at: (String)
        importStatements:
            - $ terraform import cloudflare_address_map.example '<account_id>/<address_map_id>'
    cloudflare_api_shield:
        subCategory: ""
        name: cloudflare_api_shield
        title: cloudflare_api_shield Resource - Cloudflare
        examples:
            - name: example_api_shield
              manifest: |-
                {
                  "auth_id_characteristics": [
                    {
                      "name": "authorization",
                      "type": "header"
                    }
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            auth_id_characteristics: (Attributes List) (see below for nested schema)
            code: (Number)
            errors: (Attributes List) (see below for nested schema)
            id: (String) Identifier
            message: (String)
            messages: (Attributes List) (see below for nested schema)
            name: (String) The name of the characteristic field, i.e., the header or cookie name.
            success: (Boolean) Whether the API call was successful
            type: (String) The type of characteristic.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_api_shield.example '<zone_id>'
    cloudflare_api_shield_discovery_operation:
        subCategory: ""
        name: cloudflare_api_shield_discovery_operation
        title: cloudflare_api_shield_discovery_operation Resource - Cloudflare
        examples:
            - name: example_api_shield_discovery_operation
              manifest: |-
                {
                  "operation_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
                  "state": "review",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            id: (String) UUID
            ignored: '- Mark operation as ignored'
            operation_id: (String) UUID
            review: '- Mark operation as for review'
            state: (String) Mark state of operation in API Discovery
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_api_shield_operation:
        subCategory: ""
        name: cloudflare_api_shield_operation
        title: cloudflare_api_shield_operation Resource - Cloudflare
        examples:
            - name: example_api_shield_operation
              manifest: |-
                {
                  "endpoint": "/api/v1/users/{var1}",
                  "host": "www.example.com",
                  "method": "GET",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            active_schema: (Attributes) Schema active on endpoint. (see below for nested schema)
            api_routing: (Attributes) API Routing settings on endpoint. (see below for nested schema)
            auth_id_tokens: (Number) The total number of auth-ids seen across this calculation.
            confidence_intervals: (Attributes) (see below for nested schema)
            created_at: (String)
            data_points: (Number) The number of data points used for the threshold suggestion calculation.
            endpoint: '(String) The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.'
            features: (Attributes) (see below for nested schema)
            host: (String) RFC3986-compliant host.
            id: (String) UUID
            is_learned: (Boolean) True if schema is Cloudflare-provided.
            last_updated: (String)
            learned_available: (Boolean) True if a Cloudflare-provided learned schema is available for this endpoint.
            lower: (Number) Lower bound for percentile estimate
            mean: (Number) Suggested threshold.
            method: (String) The HTTP method used to access the endpoint.
            mitigation_action: (String) Action taken on requests failing validation.
            name: (String) Schema file name.
            operation_id: (String) UUID
            p50: (Number) The p50 quantile of requests (in period_seconds).
            p90: (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
            p95: (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
            p99: (Attributes) Upper and lower bound for percentile estimate (see below for nested schema)
            parameter_schemas: (Attributes) (see below for nested schema)
            parameters: (List of String) An array containing the learned parameter schemas.
            period_seconds: (Number) The period over which this threshold is suggested.
            requests: (Number) The estimated number of requests covered by these calculations.
            responses: (String) An empty response object. This field is required to yield a valid operation schema.
            route: (String) Target route.
            schema_info: (Attributes) (see below for nested schema)
            suggested_threshold: (Attributes) (see below for nested schema)
            thresholds: (Attributes) (see below for nested schema)
            upper: (Number) Upper bound for percentile estimate
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_api_shield_operation.example '<zone_id>/<operation_id>'
    cloudflare_api_shield_operation_schema_validation_settings:
        subCategory: ""
        name: cloudflare_api_shield_operation_schema_validation_settings
        title: cloudflare_api_shield_operation_schema_validation_settings Resource - Cloudflare
        examples:
            - name: example_api_shield_operation_schema_validation_settings
              manifest: |-
                {
                  "mitigation_action": "log",
                  "operation_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            block: deny access to the site when request does not conform to schema for this operation
            id: (String) UUID
            log: log request when request does not conform to schema for this operation
            mitigation_action: (String) When set, this applies a mitigation action to this operation
            none: will skip mitigation for this operation
            "null": indicates that no operation level mitigation is in place, see Zone Level Schema Validation Settings for mitigation action that will be applied
            operation_id: (String) UUID
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_api_shield_operation_schema_validation_settings.example '<zone_id>/<operation_id>'
    cloudflare_api_shield_schema:
        subCategory: ""
        name: cloudflare_api_shield_schema
        title: cloudflare_api_shield_schema Resource - Cloudflare
        examples:
            - name: example_api_shield_schema
              manifest: |-
                {
                  "file": "file.txt",
                  "kind": "openapi_v3",
                  "name": "petstore schema",
                  "validation_enabled": "true",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            code: (Number) Code that identifies the event that occurred.
            created_at: (String)
            file: (String) Schema file bytes
            kind: (String) Kind of schema
            locations: (List of String) JSONPath location(s) in the schema where these events were encountered.  See https://goessner.net/articles/JsonPath/ for JSONPath specification.
            message: (String) Diagnostic message that describes the event.
            name: (String) Name of the schema
            schema: (Attributes) (see below for nested schema)
            schema_id: (String)
            source: (String) Source of the schema
            upload_details: (Attributes) (see below for nested schema)
            validation_enabled: (String) Flag whether schema is enabled for validation.
            warnings: (Attributes List) Diagnostic warning events that occurred during processing. These events are non-critical errors found within the schema. (see below for nested schema)
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_api_shield_schema_validation_settings:
        subCategory: ""
        name: cloudflare_api_shield_schema_validation_settings
        title: cloudflare_api_shield_schema_validation_settings Resource - Cloudflare
        examples:
            - name: example_api_shield_schema_validation_settings
              manifest: |-
                {
                  "validation_default_mitigation_action": "none",
                  "validation_override_mitigation_action": "none",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            block: '- deny access to the site when request does not conform to schema'
            id: (String) Identifier
            log: '- log request when request does not conform to schema'
            none: will skip running schema validation entirely for the request
            "null": indicates that no override is in place
            validation_default_mitigation_action: (String) The default mitigation action used when there is no mitigation action defined on the operation
            validation_override_mitigation_action: (String) When set, this overrides both zone level and operation level mitigation actions.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_api_shield_schema_validation_settings.example '<zone_id>'
    cloudflare_api_token:
        subCategory: ""
        name: cloudflare_api_token
        title: cloudflare_api_token Resource - Cloudflare
        examples:
            - name: example_api_token
              manifest: |-
                {
                  "condition": {
                    "request_ip": {
                      "in": [
                        "123.123.123.0/24",
                        "2606:4700::/32"
                      ],
                      "not_in": [
                        "123.123.123.100/24",
                        "2606:4700:4700::/48"
                      ]
                    }
                  },
                  "expires_on": "2020-01-01T00:00:00Z",
                  "name": "readonly token",
                  "not_before": "2018-07-01T05:20:00Z",
                  "policies": [
                    {
                      "effect": "allow",
                      "permission_groups": [
                        {
                          "id": "c8fed203ed3043cba015a93ad1616f1f",
                          "meta": {
                            "key": "key",
                            "value": "value"
                          }
                        },
                        {
                          "id": "82e64a83756745bbbb1c9c2701bf816b",
                          "meta": {
                            "key": "key",
                            "value": "value"
                          }
                        }
                      ],
                      "resources": {
                        "com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*",
                        "com.cloudflare.api.account.zone.eb78d65290b24279ba6f44721b3ea3c4": "*"
                      }
                    }
                  ]
                }
        argumentDocs:
            condition: (Attributes) (see below for nested schema)
            effect: (String) Allow or deny operations against the resources.
            expires_on: (String) The expiration time on or after which the JWT MUST NOT be accepted for processing.
            id: (String) Token identifier tag.
            in: (List of String) List of IPv4/IPv6 CIDR addresses.
            issued_on: (String) The time on which the token was created.
            key: (String)
            last_used_on: (String) Last time the token was used.
            meta: (Attributes) Attributes associated to the permission group. (see below for nested schema)
            modified_on: (String) Last time the token was modified.
            name: (String) Token name.
            not_before: (String) The time before which the token MUST NOT be accepted for processing.
            not_in: (List of String) List of IPv4/IPv6 CIDR addresses.
            permission_groups: (Attributes List) A set of permission groups that are specified to the policy. (see below for nested schema)
            policies: (Attributes List) List of access policies assigned to the token. (see below for nested schema)
            request_ip: (Attributes) Client IP restrictions. (see below for nested schema)
            resources: (Map of String) A list of resource names that the policy applies to.
            status: (String) Status of the token.
            value: (String) The token value.
        importStatements:
            - $ terraform import cloudflare_api_token.example '<token_id>'
    cloudflare_argo_smart_routing:
        subCategory: ""
        name: cloudflare_argo_smart_routing
        title: cloudflare_argo_smart_routing Resource - Cloudflare
        examples:
            - name: example_argo_smart_routing
              manifest: |-
                {
                  "value": "on",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            id: (String) Identifier
            value: (String) Enables Argo Smart Routing.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_argo_smart_routing.example '<zone_id>'
    cloudflare_argo_tiered_caching:
        subCategory: ""
        name: cloudflare_argo_tiered_caching
        title: cloudflare_argo_tiered_caching Resource - Cloudflare
        examples:
            - name: example_argo_tiered_caching
              manifest: |-
                {
                  "value": "on",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            editable: (Boolean) Whether the setting is editable
            id: (String) Identifier
            modified_on: (String) Last time this setting was modified.
            value: (String) Enables Tiered Caching.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_argo_tiered_caching.example '<zone_id>'
    cloudflare_authenticated_origin_pulls:
        subCategory: ""
        name: cloudflare_authenticated_origin_pulls
        title: cloudflare_authenticated_origin_pulls Resource - Cloudflare
        examples:
            - name: example_authenticated_origin_pulls
              manifest: |-
                {
                  "config": [
                    {
                      "cert_id": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60",
                      "enabled": true,
                      "hostname": "app.example.com"
                    }
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            cert_id: (String) Identifier
            cert_status: (String) Status of the certificate or the association.
            cert_updated_at: (String) The time when the certificate was updated.
            cert_uploaded_on: (String) The time when the certificate was uploaded.
            certificate: (String) The hostname certificate.
            config: (Attributes List) (see below for nested schema)
            created_at: (String) The time when the certificate was created.
            enabled: (Boolean) Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
            expires_on: (String) The date when the certificate expires.
            hostname: (String) The hostname on the origin for which the client certificate uploaded will be used.
            id: (String) Identifier
            issuer: (String) The certificate authority that issued the certificate.
            private_key: (String) The hostname certificate's private key.
            serial_number: (String) The serial number on the uploaded certificate.
            signature: (String) The type of hash used for the certificate.
            status: (String) Status of the certificate or the association.
            updated_at: (String) The time when the certificate was updated.
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_authenticated_origin_pulls_certificate:
        subCategory: ""
        name: cloudflare_authenticated_origin_pulls_certificate
        title: cloudflare_authenticated_origin_pulls_certificate Resource - Cloudflare
        examples:
            - name: example_authenticated_origin_pulls_certificate
              manifest: |-
                {
                  "certificate": "  -----BEGIN CERTIFICATE-----\n  MIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\n  BAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\n  aWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\n  MQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\n  ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\n  CgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\n  CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\n  KwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n  0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\n  dZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\n  izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n  9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\n  GKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\n  BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\n  MAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n  2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\n  Mlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\n  SvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n  2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\n  YbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n  -----END CERTIFICATE-----\n\n",
                  "private_key": "  -----BEGIN RSA PRIVATE KEY-----\n  MIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\n  dtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\n  abIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\n  tnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\n  FxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\n  ewooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\n  HBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\n  axiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n  +ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n  +j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\n  KLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n  9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n  /WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\n  iacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\n  N2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\n  VAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\n  vULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\n  lySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n  9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\n  mEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\n  dFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\n  PG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\n  fhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\n  qu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\n  lv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n  -----END RSA PRIVATE KEY-----\n\n",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            certificate: (String) The zone's leaf certificate.
            certificate_id: (String) Identifier
            enabled: (Boolean) Indicates whether zone-level authenticated origin pulls is enabled.
            expires_on: (String) When the certificate from the authority expires.
            id: (String) Identifier
            issuer: (String) The certificate authority that issued the certificate.
            private_key: (String) The zone's private key.
            signature: (String) The type of hash used for the certificate.
            status: (String) Status of the certificate activation.
            uploaded_on: (String) This is the time the certificate was uploaded.
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_bot_management:
        subCategory: ""
        name: cloudflare_bot_management
        title: cloudflare_bot_management Resource - Cloudflare
        examples:
            - name: example_bot_management
              manifest: |-
                {
                  "ai_bots_protection": "block",
                  "enable_js": true,
                  "fight_mode": true,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            ai_bots_protection: (String) Enable rule to block AI Scrapers and Crawlers.
            auto_update_model: (Boolean) Automatically update to the newest bot detection models created by Cloudflare as they are released. Learn more.
            enable_js: (Boolean) Use lightweight, invisible JavaScript detections to improve Bot Management. Learn more about JavaScript Detections.
            fight_mode: (Boolean) Whether to enable Bot Fight Mode.
            id: (String) Identifier
            optimize_wordpress: (Boolean) Whether to optimize Super Bot Fight Mode protections for Wordpress.
            sbfm_definitely_automated: (String) Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
            sbfm_likely_automated: (String) Super Bot Fight Mode (SBFM) action to take on likely automated requests.
            sbfm_static_resource_protection: |-
                (Boolean) Super Bot Fight Mode (SBFM) to enable static resource protection.
                Enable if static resources on your application need bot protection.
                Note: Static resource protection can also result in legitimate traffic being blocked.
            sbfm_verified_bots: (String) Super Bot Fight Mode (SBFM) action to take on verified bots requests.
            stale_zone_configuration: (Attributes) A read-only field that shows which unauthorized settings are currently active on the zone. These settings typically result from upgrades or downgrades. (see below for nested schema)
            suppress_session_score: (Boolean) Whether to disable tracking the highest bot score for a session in the Bot Management cookie.
            using_latest_model: (Boolean) A read-only field that indicates whether the zone currently is running the latest ML model.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_bot_management.example '<zone_id>'
    cloudflare_byo_ip_prefix:
        subCategory: ""
        name: cloudflare_byo_ip_prefix
        title: cloudflare_byo_ip_prefix Resource - Cloudflare
        examples:
            - name: example_byo_ip_prefix
              manifest: |-
                {
                  "account_id": "258def64c72dae45f3e4c8516e2111f2",
                  "asn": 209242,
                  "cidr": "192.0.2.0/24",
                  "loa_document_id": "d933b1530bc56c9953cf8ce166da8004"
                }
        argumentDocs:
            account_id: (String) Identifier of a Cloudflare account.
            advertised: (Boolean) Prefix advertisement status to the Internet. This field is only not 'null' if on demand is enabled.
            advertised_modified_at: (String) Last time the advertisement status was changed. This field is only not 'null' if on demand is enabled.
            approved: (String) Approval state of the prefix (P = pending, V = active).
            asn: (Number) Autonomous System Number (ASN) the prefix will be advertised under.
            cidr: (String) IP Prefix in Classless Inter-Domain Routing format.
            created_at: (String)
            description: (String) Description of the prefix.
            id: (String) Identifier of an IP Prefix.
            loa_document_id: (String) Identifier for the uploaded LOA document.
            modified_at: (String)
            on_demand_enabled: (Boolean) Whether advertisement of the prefix to the Internet may be dynamically enabled or disabled.
            on_demand_locked: (Boolean) Whether advertisement status of the prefix is locked, meaning it cannot be changed.
        importStatements:
            - $ terraform import cloudflare_byo_ip_prefix.example '<account_id>/<prefix_id>'
    cloudflare_calls_sfu_app:
        subCategory: ""
        name: cloudflare_calls_sfu_app
        title: cloudflare_calls_sfu_app Resource - Cloudflare
        examples:
            - name: example_calls_sfu_app
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "production-realtime-app"
                }
        argumentDocs:
            account_id: (String) The account identifier tag.
            app_id: (String) A Cloudflare-generated unique identifier for a item.
            created: (String) The date and time the item was created.
            modified: (String) The date and time the item was last modified.
            name: (String) A short description of Calls app, not shown to end users.
            secret: (String) Bearer token
            uid: (String) A Cloudflare-generated unique identifier for a item.
        importStatements: []
    cloudflare_calls_turn_app:
        subCategory: ""
        name: cloudflare_calls_turn_app
        title: cloudflare_calls_turn_app Resource - Cloudflare
        examples:
            - name: example_calls_turn_app
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "my-turn-key"
                }
        argumentDocs:
            account_id: (String) The account identifier tag.
            created: (String) The date and time the item was created.
            key: (String) Bearer token
            key_id: (String) A Cloudflare-generated unique identifier for a item.
            modified: (String) The date and time the item was last modified.
            name: (String) A short description of a TURN key, not shown to end users.
            uid: (String) A Cloudflare-generated unique identifier for a item.
        importStatements: []
    cloudflare_certificate_pack:
        subCategory: ""
        name: cloudflare_certificate_pack
        title: cloudflare_certificate_pack Resource - Cloudflare
        examples:
            - name: example_certificate_pack
              manifest: |-
                {
                  "certificate_authority": "google",
                  "cloudflare_branding": false,
                  "hosts": [
                    "example.com",
                    "*.example.com",
                    "www.example.com"
                  ],
                  "type": "advanced",
                  "validation_method": "txt",
                  "validity_days": 14,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            certificate_authority: (String) Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions see this page for more details.
            cloudflare_branding: (Boolean) Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.
            hosts: (List of String) Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.
            id: (String) Identifier
            status: (String) Status of certificate pack.
            type: (String) Type of certificate pack.
            validation_method: (String) Validation Method selected for the order.
            validity_days: (Number) Validity Days selected for the order.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_certificate_pack.example '<zone_id>/<certificate_pack_id>'
    cloudflare_cloud_connector_rules:
        subCategory: ""
        name: cloudflare_cloud_connector_rules
        title: cloudflare_cloud_connector_rules Resource - Cloudflare
        examples:
            - name: example_cloud_connector_rules
              manifest: |-
                {
                  "rules": [
                    {
                      "cloud_provider": "aws_s3",
                      "description": "Rule description",
                      "enabled": true,
                      "expression": "http.cookie eq \"a=b\"",
                      "id": "95c365e17e1b46599cd99e5b231fac4e",
                      "parameters": {
                        "host": "examplebucket.s3.eu-north-1.amazonaws.com"
                      }
                    }
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            cloud_provider: (String) Cloud Provider type
            description: (String)
            enabled: (Boolean)
            expression: (String)
            host: (String) Host to perform Cloud Connection to
            id: (String) The ID of this resource.
            parameters: (Attributes) Parameters of Cloud Connector Rule (see below for nested schema)
            rules: (Attributes List) List of Cloud Connector rules (see below for nested schema)
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_cloudforce_one_request:
        subCategory: ""
        name: cloudflare_cloudforce_one_request
        title: cloudflare_cloudforce_one_request Resource - Cloudflare
        examples:
            - name: example_cloudforce_one_request
              manifest: |-
                {
                  "account_identifier": "023e105f4ecef8ad9ca31a8372d0c353",
                  "content": "What regions were most effected by the recent DoS?",
                  "priority": "routine",
                  "request_type": "Victomology",
                  "summary": "DoS attack",
                  "tlp": "clear"
                }
        argumentDocs:
            account_identifier: (String) Identifier
            completed: (String)
            content: (String) Request content
            created: (String)
            id: (String) UUID
            message_tokens: (Number) Tokens for the request messages
            priority: (String) Priority for analyzing the request
            readable_id: (String) Readable Request ID
            request: (String) Requested information from request
            request_type: (String) Requested information from request
            status: (String) Request Status
            summary: (String) Brief description of the request
            tlp: (String) The CISA defined Traffic Light Protocol (TLP)
            tokens: (Number) Tokens for the request
            updated: (String)
        importStatements:
            - $ terraform import cloudflare_cloudforce_one_request.example '<account_identifier>/<request_identifier>'
    cloudflare_cloudforce_one_request_asset:
        subCategory: ""
        name: cloudflare_cloudforce_one_request_asset
        title: cloudflare_cloudforce_one_request_asset Resource - Cloudflare
        examples:
            - name: example_cloudforce_one_request_asset
              manifest: |-
                {
                  "account_identifier": "023e105f4ecef8ad9ca31a8372d0c353",
                  "page": 0,
                  "per_page": 10,
                  "request_identifier": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
                }
        argumentDocs:
            account_identifier: (String) Identifier
            created: (String) Asset creation time
            description: (String) Asset description
            file_type: (String) Asset file type
            id: (Number) Asset ID
            name: (String) Asset name
            page: (Number) Page number of results
            per_page: (Number) Number of results per page
            request_identifier: (String) UUID
            source: (String) Asset file to upload
        importStatements:
            - $ terraform import cloudflare_cloudforce_one_request_asset.example '<account_identifier>/<request_identifier>/<asset_identifer>'
    cloudflare_cloudforce_one_request_message:
        subCategory: ""
        name: cloudflare_cloudforce_one_request_message
        title: cloudflare_cloudforce_one_request_message Resource - Cloudflare
        examples:
            - name: example_cloudforce_one_request_message
              manifest: |-
                {
                  "account_identifier": "023e105f4ecef8ad9ca31a8372d0c353",
                  "content": "Can you elaborate on the type of DoS that occurred?",
                  "request_identifier": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
                }
        argumentDocs:
            account_identifier: (String) Identifier
            author: (String) Author of message
            content: (String) Content of message
            created: (String) Message creation time
            id: (Number) Message ID
            is_follow_on_request: (Boolean) Whether the message is a follow-on request
            request_identifier: (String) UUID
            updated: (String) Message last updated time
        importStatements:
            - $ terraform import cloudflare_cloudforce_one_request_message.example '<account_identifier>/<request_identifier>'
    cloudflare_cloudforce_one_request_priority:
        subCategory: ""
        name: cloudflare_cloudforce_one_request_priority
        title: cloudflare_cloudforce_one_request_priority Resource - Cloudflare
        examples:
            - name: example_cloudforce_one_request_priority
              manifest: |-
                {
                  "account_identifier": "023e105f4ecef8ad9ca31a8372d0c353",
                  "labels": [
                    "DoS",
                    "CVE"
                  ],
                  "priority": 1,
                  "requirement": "DoS attacks carried out by CVEs",
                  "tlp": "clear"
                }
        argumentDocs:
            account_identifier: (String) Identifier
            completed: (String)
            content: (String) Request content
            created: (String)
            id: (String) UUID
            labels: (List of String) List of labels
            message_tokens: (Number) Tokens for the request messages
            priority: (Number) Priority
            readable_id: (String) Readable Request ID
            request: (String) Requested information from request
            requirement: (String) Requirement
            status: (String) Request Status
            summary: (String) Brief description of the request
            tlp: (String) The CISA defined Traffic Light Protocol (TLP)
            tokens: (Number) Tokens for the request
            updated: (String)
        importStatements:
            - $ terraform import cloudflare_cloudforce_one_request_priority.example '<account_identifier>/<priority_identifer>'
    cloudflare_content_scanning_expression:
        subCategory: ""
        name: cloudflare_content_scanning_expression
        title: cloudflare_content_scanning_expression Resource - Cloudflare
        examples:
            - name: example_content_scanning_expression
              manifest: |-
                {
                  "body": [
                    {
                      "payload": "lookup_json_string(http.request.body.raw, \"file\")"
                    }
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            body: (Attributes List) (see below for nested schema)
            id: (String) The unique ID for this custom scan expression
            payload: (String) Ruleset expression to use in matching content objects
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_custom_hostname:
        subCategory: ""
        name: cloudflare_custom_hostname
        title: cloudflare_custom_hostname Resource - Cloudflare
        examples:
            - name: example_custom_hostname
              manifest: |-
                {
                  "custom_metadata": {
                    "foo": "string"
                  },
                  "hostname": "app.example.com",
                  "ssl": {
                    "bundle_method": "ubiquitous",
                    "certificate_authority": "digicert",
                    "cloudflare_branding": false,
                    "custom_cert_bundle": [
                      {
                        "custom_certificate": "      -----BEGIN CERTIFICATE-----\n      MIIDdjCCAl6gAwIBAgIJAPnMg0Fs+/B0MA0GCSqGSIb3DQEBCwUAMFsx...\n      -----END CERTIFICATE-----\n\n",
                        "custom_key": "      -----BEGIN PRIVATE KEY-----\n      MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC/SCB5...\n      -----END PRIVATE KEY-----\n\n"
                      }
                    ],
                    "custom_certificate": "-----BEGIN CERTIFICATE-----\\nMIIFJDCCBAygAwIBAgIQD0ifmj/Yi5NP/2gdUySbfzANBgkqhkiG9w0BAQsFADBN\\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E...SzSHfXp5lnu/3V08I72q1QNzOCgY1XeL4GKVcj4or6cT6tX6oJH7ePPmfrBfqI/O\\nOeH8gMJ+FuwtXYEPa4hBf38M5eU5xWG7\\n-----END CERTIFICATE-----\\n",
                    "custom_key": "    -----BEGIN RSA PRIVATE KEY-----\n    MIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\n    dtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\n    abIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\n    tnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\n    FxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\n    ewooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\n    HBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\n    axiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n    +ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n    +j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\n    KLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n    9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n    /WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\n    iacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\n    N2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\n    VAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\n    vULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\n    lySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n    9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\n    mEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\n    dFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\n    PG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\n    fhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\n    qu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\n    lv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n    -----END RSA PRIVATE KEY-----\n\n",
                    "method": "http",
                    "settings": {
                      "ciphers": [
                        "ECDHE-RSA-AES128-GCM-SHA256",
                        "AES128-SHA"
                      ],
                      "early_hints": "on",
                      "http2": "on",
                      "min_tls_version": "1.0",
                      "tls_1_3": "on"
                    },
                    "type": "dv",
                    "wildcard": false
                  },
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            bundle_method: (String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
            certificate_authority: (String) The Certificate Authority that will issue the certificate
            ciphers: (List of String) An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.
            cloudflare_branding: (Boolean) Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true
            created_at: (String) This is the time the hostname was created.
            custom_cert_bundle: (Attributes List) Array of custom certificate and key pairs (1 or 2 pairs allowed) (see below for nested schema)
            custom_certificate: (String) If a custom uploaded certificate is used.
            custom_key: (String) The key for a custom uploaded certificate.
            custom_metadata: (Map of String) Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
            custom_origin_server: (String) a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.
            custom_origin_sni: (String) A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request_host_header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
            early_hints: (String) Whether or not Early Hints is enabled.
            hostname: (String) The custom hostname that will point to your hostname via CNAME.
            http_body: (String) Token to be served.
            http_url: (String) The HTTP URL that will be checked during custom hostname verification and where the customer should host the token.
            http2: (String) Whether or not HTTP2 is enabled.
            id: (String) Identifier
            method: (String) Domain control validation (DCV) method used for this hostname.
            min_tls_version: (String) The minimum TLS version supported.
            name: (String) DNS Name for record.
            ownership_verification: (Attributes) This is a record which can be placed to activate a hostname. (see below for nested schema)
            ownership_verification_http: (Attributes) This presents the token to be served by the given http url to activate a hostname. (see below for nested schema)
            settings: (Attributes) SSL specific settings. (see below for nested schema)
            ssl: (Attributes) SSL properties used when creating the custom hostname. (see below for nested schema)
            status: (String) Status of the hostname's activation.
            tls_1_3: (String) Whether or not TLS 1.3 is enabled.
            type: (String) Level of validation to be used for this hostname. Domain validation (dv) must be used.
            value: (String) Content for the record.
            verification_errors: (List of String) These are errors that were encountered while trying to activate a hostname.
            wildcard: (Boolean) Indicates whether the certificate covers a wildcard.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_custom_hostname.example '<zone_id>/<custom_hostname_id>'
    cloudflare_custom_hostname_fallback_origin:
        subCategory: ""
        name: cloudflare_custom_hostname_fallback_origin
        title: cloudflare_custom_hostname_fallback_origin Resource - Cloudflare
        examples:
            - name: example_custom_hostname_fallback_origin
              manifest: |-
                {
                  "origin": "fallback.example.com",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created_at: (String) This is the time the fallback origin was created.
            errors: (List of String) These are errors that were encountered while trying to activate a fallback origin.
            id: (String) Identifier
            origin: (String) Your origin hostname that requests to your custom hostnames will be sent to.
            status: (String) Status of the fallback origin's activation.
            updated_at: (String) This is the time the fallback origin was updated.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_custom_hostname_fallback_origin.example '<zone_id>'
    cloudflare_custom_ssl:
        subCategory: ""
        name: cloudflare_custom_ssl
        title: cloudflare_custom_ssl Resource - Cloudflare
        examples:
            - name: example_custom_ssl
              manifest: |-
                {
                  "bundle_method": "ubiquitous",
                  "certificate": "  -----BEGIN CERTIFICATE-----\n  MIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\n  BAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\n  aWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\n  MQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\n  ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\n  CgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\n  CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\n  KwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n  0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\n  dZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\n  izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n  9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\n  GKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\n  BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\n  MAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n  2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\n  Mlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\n  SvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n  2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\n  YbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n  -----END CERTIFICATE-----\n\n",
                  "geo_restrictions": {
                    "label": "us"
                  },
                  "policy": "(country: US) or (region: EU)",
                  "private_key": "  -----BEGIN RSA PRIVATE KEY-----\n  MIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\n  dtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\n  abIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\n  tnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\n  FxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\n  ewooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\n  HBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\n  axiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n  +ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n  +j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\n  KLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n  9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n  /WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\n  iacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\n  N2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\n  VAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\n  vULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\n  lySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n  9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\n  mEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\n  dFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\n  PG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\n  fhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\n  qu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\n  lv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n  -----END RSA PRIVATE KEY-----\n\n",
                  "type": "legacy_custom",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            bundle_method: (String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
            certificate: (String) The zone's SSL certificate or certificate and the intermediate(s).
            created_on: (String) When the Keyless SSL was created.
            enabled: (Boolean) Whether or not the Keyless SSL is on or off.
            expires_on: (String) When the certificate from the authority expires.
            geo_restrictions: (Attributes) Specify the region where your private key can be held locally for optimal TLS performance. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Options allow distribution to only to U.S. data centers, only to E.U. data centers, or only to highest security data centers. Default distribution is to all Cloudflare datacenters, for optimal performance. (see below for nested schema)
            host: (String) The keyless SSL name.
            hosts: (List of String)
            id: (String) Identifier
            issuer: (String) The certificate authority that issued the certificate.
            keyless_server: (Attributes) (see below for nested schema)
            label: (String)
            modified_on: (String) When the certificate was last modified.
            name: (String) The keyless SSL name.
            permissions: (List of String) Available permissions for the Keyless SSL for the current user requesting the item.
            policy: '(String) Specify the policy that determines the region where your private key will be held locally. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Any combination of countries, specified by their two letter country code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) can be chosen, such as ''country: IN'', as well as ''region: EU'' which refers to the EU region. If there are too few data centers satisfying the policy, it will be rejected.'
            port: (Number) The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.
            priority: (Number) The order/priority in which the certificate will be used in a request. The higher priority will break ties across overlapping 'legacy_custom' certificates, but 'legacy_custom' certificates will always supercede 'sni_custom' certificates.
            private_ip: (String) Private IP of the Key Server Host
            private_key: (String) The zone's private key.
            signature: (String) The type of hash used for the certificate.
            status: (String) Status of the zone's custom SSL.
            tunnel: (Attributes) Configuration for using Keyless SSL through a Cloudflare Tunnel (see below for nested schema)
            type: (String) The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.
            uploaded_on: (String) When the certificate was uploaded to Cloudflare.
            vnet_id: (String) Cloudflare Tunnel Virtual Network ID
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_custom_ssl.example '<zone_id>/<custom_certificate_id>'
    cloudflare_d1_database:
        subCategory: ""
        name: cloudflare_d1_database
        title: cloudflare_d1_database Resource - Cloudflare
        examples:
            - name: example_d1_database
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "my-database",
                  "primary_location_hint": "wnam"
                }
        argumentDocs:
            account_id: (String) Account identifier tag.
            created_at: (String) Specifies the timestamp the resource was created as an ISO8601 string.
            file_size: (Number) The D1 database's size, in bytes.
            id: (String) D1 database identifier (UUID).
            name: (String) D1 database name.
            num_tables: (Number)
            primary_location_hint: (String) Specify the region to create the D1 primary, if available. If this option is omitted, the D1 will be created as close as possible to the current user.
            uuid: (String) D1 database identifier (UUID).
            version: (String)
        importStatements:
            - $ terraform import cloudflare_d1_database.example '<account_id>/<database_id>'
    cloudflare_dns_firewall:
        subCategory: ""
        name: cloudflare_dns_firewall
        title: cloudflare_dns_firewall Resource - Cloudflare
        examples:
            - name: example_dns_firewall
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "attack_mitigation": {
                    "enabled": true,
                    "only_when_upstream_unhealthy": false
                  },
                  "deprecate_any_requests": true,
                  "ecs_fallback": false,
                  "maximum_cache_ttl": 900,
                  "minimum_cache_ttl": 60,
                  "name": "My Awesome DNS Firewall cluster",
                  "negative_cache_ttl": 900,
                  "ratelimit": 600,
                  "retries": 2,
                  "upstream_ips": [
                    "192.0.2.1",
                    "198.51.100.1",
                    "2001:DB8:100::CF"
                  ]
                }
        argumentDocs:
            account_id: (String) Identifier
            attack_mitigation: (Attributes) Attack mitigation settings (see below for nested schema)
            deprecate_any_requests: (Boolean) Whether to refuse to answer queries for the ANY type
            dns_firewall_ips: (List of String)
            ecs_fallback: (Boolean) Whether to forward client IP (resolver) subnet if no EDNS Client Subnet is sent
            enabled: (Boolean) When enabled, automatically mitigate random-prefix attacks to protect upstream DNS servers
            id: (String) Identifier
            maximum_cache_ttl: (Number) Maximum DNS cache TTL This setting sets an upper bound on DNS TTLs for purposes of caching between DNS Firewall and the upstream servers. Higher TTLs will be decreased to the maximum defined here for caching purposes.
            minimum_cache_ttl: (Number) Minimum DNS cache TTL This setting sets a lower bound on DNS TTLs for purposes of caching between DNS Firewall and the upstream servers. Lower TTLs will be increased to the minimum defined here for caching purposes.
            modified_on: (String) Last modification of DNS Firewall cluster
            name: (String) DNS Firewall cluster name
            negative_cache_ttl: (Number) Negative DNS cache TTL This setting controls how long DNS Firewall should cache negative responses (e.g., NXDOMAIN) from the upstream servers.
            only_when_upstream_unhealthy: (Boolean) Only mitigate attacks when upstream servers seem unhealthy
            ratelimit: (Number) Ratelimit in queries per second per datacenter (applies to DNS queries sent to the upstream nameservers configured on the cluster)
            retries: (Number) Number of retries for fetching DNS responses from upstream nameservers (not counting the initial attempt)
            upstream_ips: (List of String)
        importStatements:
            - $ terraform import cloudflare_dns_firewall.example '<account_id>/<dns_firewall_id>'
    cloudflare_dns_record:
        subCategory: ""
        name: cloudflare_dns_record
        title: cloudflare_dns_record Resource - Cloudflare
        examples:
            - name: example_dns_record
              manifest: |-
                {
                  "comment": "Domain verification record",
                  "content": "198.51.100.4",
                  "name": "example.com",
                  "proxied": true,
                  "settings": {
                    "ipv4_only": true,
                    "ipv6_only": true
                  },
                  "tags": [
                    "owner:dns-team"
                  ],
                  "ttl": 3600,
                  "type": "A",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            algorithm: (Number) Algorithm.
            altitude: (Number) Altitude of location in meters.
            certificate: (String) Certificate.
            comment: (String) Comments or notes about the DNS record. This field has no effect on DNS responses.
            comment_modified_on: (String) When the record comment was last modified. Omitted if there is no comment.
            content: (String) A valid IPv4 address.
            created_on: (String) When the record was created.
            data: (Attributes) Components of a CAA record. (see below for nested schema)
            digest: (String) Digest.
            digest_type: (Number) Digest Type.
            fingerprint: (String) fingerprint.
            flags: (Number) Flags for the CAA record.
            flatten_cname: (Boolean) If enabled, causes the CNAME record to be resolved externally and the resulting address records (e.g., A and AAAA) to be returned instead of the CNAME record itself. This setting is unavailable for proxied records, since they are always flattened.
            id: (String) Identifier
            ipv4_only: (Boolean) When enabled, only A records will be generated, and AAAA records will not be created. This setting is intended for exceptional cases. Note that this option only applies to proxied records and it has no effect on whether Cloudflare communicates with the origin using IPv4 or IPv6.
            ipv6_only: (Boolean) When enabled, only AAAA records will be generated, and A records will not be created. This setting is intended for exceptional cases. Note that this option only applies to proxied records and it has no effect on whether Cloudflare communicates with the origin using IPv4 or IPv6.
            key_tag: (Number) Key Tag.
            lat_degrees: (Number) Degrees of latitude.
            lat_direction: (String) Latitude direction.
            lat_minutes: (Number) Minutes of latitude.
            lat_seconds: (Number) Seconds of latitude.
            long_degrees: (Number) Degrees of longitude.
            long_direction: (String) Longitude direction.
            long_minutes: (Number) Minutes of longitude.
            long_seconds: (Number) Seconds of longitude.
            matching_type: (Number) Matching Type.
            meta: (String) Extra Cloudflare-specific information about the record.
            modified_on: (String) When the record was last modified.
            name: (String) DNS record name (or @ for the zone apex) in Punycode.
            order: (Number) Order.
            port: (Number) The port of the service.
            precision_horz: (Number) Horizontal precision of location.
            precision_vert: (Number) Vertical precision of location.
            preference: (Number) Preference.
            priority: (Number) Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
            protocol: (Number) Protocol.
            proxiable: (Boolean) Whether the record can be proxied by Cloudflare or not.
            proxied: (Boolean) Whether the record is receiving the performance and security benefits of Cloudflare.
            public_key: (String) Public Key.
            regex: (String) Regex.
            replacement: (String) Replacement.
            selector: (Number) Selector.
            service: (String) Service.
            settings: (Attributes) Settings for the DNS record. (see below for nested schema)
            size: (Number) Size of location in meters.
            tag: '(String) Name of the property controlled by this record (e.g.: issue, issuewild, iodef).'
            tags: (List of String) Custom tags for the DNS record. This field has no effect on DNS responses.
            tags_modified_on: (String) When the record tags were last modified. Omitted if there are no tags.
            target: (String) target.
            ttl: (Number) Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
            type: (String) Record type.
            usage: (Number) Usage.
            value: (String) Value of the record. This field's semantics depend on the chosen tag.
            weight: (Number) The record weight.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_dns_record.example '<zone_id>/<dns_record_id>'
    cloudflare_dns_settings:
        subCategory: ""
        name: cloudflare_dns_settings
        title: cloudflare_dns_settings Resource - Cloudflare
        examples:
            - name: example_dns_settings
              manifest: |-
                {
                  "zone_defaults": {
                    "flatten_all_cnames": false,
                    "foundation_dns": false,
                    "internal_dns": {
                      "reference_zone_id": "reference_zone_id"
                    },
                    "multi_provider": false,
                    "nameservers": {
                      "type": "cloudflare.standard"
                    },
                    "ns_ttl": 86400,
                    "secondary_overrides": false,
                    "soa": {
                      "expire": 604800,
                      "min_ttl": 1800,
                      "mname": "kristina.ns.cloudflare.com",
                      "refresh": 10000,
                      "retry": 2400,
                      "rname": "admin.example.com",
                      "ttl": 3600
                    },
                    "zone_mode": "standard"
                  },
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            expire: (Number) Time in seconds of being unable to query the primary server after which secondary servers should stop serving the zone.
            flatten_all_cnames: (Boolean) Whether to flatten all CNAME records in the zone. Note that, due to DNS limitations, a CNAME record at the zone apex will always be flattened.
            foundation_dns: (Boolean) Whether to enable Foundation DNS Advanced Nameservers on the zone.
            internal_dns: (Attributes) Settings for this internal zone. (see below for nested schema)
            min_ttl: (Number) The time to live (TTL) for negative caching of records within the zone.
            mname: (String) The primary nameserver, which may be used for outbound zone transfers.
            multi_provider: (Boolean) Whether to enable multi-provider DNS, which causes Cloudflare to activate the zone even when non-Cloudflare NS records exist, and to respect NS records at the zone apex during outbound zone transfers.
            nameservers: (Attributes) Settings determining the nameservers through which the zone should be available. (see below for nested schema)
            ns_ttl: (Number) The time to live (TTL) of the zone's nameserver (NS) records.
            reference_zone_id: (String) The ID of the zone to fallback to.
            refresh: (Number) Time in seconds after which secondary servers should re-check the SOA record to see if the zone has been updated.
            retry: (Number) Time in seconds after which secondary servers should retry queries after the primary server was unresponsive.
            rname: (String) The email address of the zone administrator, with the first label representing the local part of the email address.
            secondary_overrides: (Boolean) Allows a Secondary DNS zone to use (proxied) override records and CNAME flattening at the zone apex.
            soa: (Attributes) Components of the zone's SOA record. (see below for nested schema)
            ttl: (Number) The time to live (TTL) of the SOA record itself.
            type: (String) Nameserver type
            zone_defaults: (Attributes) (see below for nested schema)
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
            zone_mode: (String) Whether the zone mode is a regular or CDN/DNS only zone.
        importStatements: []
    cloudflare_dns_settings_internal_view:
        subCategory: ""
        name: cloudflare_dns_settings_internal_view
        title: cloudflare_dns_settings_internal_view Resource - Cloudflare
        examples:
            - name: example_dns_settings_internal_view
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "my view",
                  "zones": [
                    "372e67954025e0ba6aaa6d586b9e0b59"
                  ]
                }
        argumentDocs:
            account_id: (String) Identifier
            created_time: (String) When the view was created.
            id: (String) Identifier
            modified_time: (String) When the view was last modified.
            name: (String) The name of the view.
            zones: (List of String) The list of zones linked to this view.
        importStatements:
            - $ terraform import cloudflare_dns_settings_internal_view.example '<account_id>/<view_id>'
    cloudflare_dns_zone_transfers_acl:
        subCategory: ""
        name: cloudflare_dns_zone_transfers_acl
        title: cloudflare_dns_zone_transfers_acl Resource - Cloudflare
        examples:
            - name: example_dns_zone_transfers_acl
              manifest: |-
                {
                  "account_id": "01a7362d577a6c3019a474fd6f485823",
                  "ip_range": "192.0.2.53/28",
                  "name": "my-acl-1"
                }
        argumentDocs:
            account_id: (String)
            id: (String) The ID of this resource.
            ip_range: (String) Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.
            name: (String) The name of the acl.
        importStatements:
            - $ terraform import cloudflare_dns_zone_transfers_acl.example '<account_id>/<acl_id>'
    cloudflare_dns_zone_transfers_incoming:
        subCategory: ""
        name: cloudflare_dns_zone_transfers_incoming
        title: cloudflare_dns_zone_transfers_incoming Resource - Cloudflare
        examples:
            - name: example_dns_zone_transfers_incoming
              manifest: |-
                {
                  "auto_refresh_seconds": 86400,
                  "name": "www.example.com.",
                  "peers": [
                    "23ff594956f20c2a721606e94745a8aa",
                    "00920f38ce07c2e2f4df50b1f61d4194"
                  ],
                  "zone_id": "269d8f4853475ca241c4e730be286b20"
                }
        argumentDocs:
            auto_refresh_seconds: |-
                (Number) How often should a secondary zone auto refresh regardless of DNS NOTIFY.
                Not applicable for primary zones.
            checked_time: (String) The time for a specific event.
            created_time: (String) The time for a specific event.
            id: (String) The ID of this resource.
            modified_time: (String) The time for a specific event.
            name: (String) Zone name.
            peers: (List of String) A list of peer tags.
            soa_serial: (Number) The serial number of the SOA for the given zone.
            zone_id: (String)
        importStatements:
            - $ terraform import cloudflare_dns_zone_transfers_incoming.example '<zone_id>'
    cloudflare_dns_zone_transfers_outgoing:
        subCategory: ""
        name: cloudflare_dns_zone_transfers_outgoing
        title: cloudflare_dns_zone_transfers_outgoing Resource - Cloudflare
        examples:
            - name: example_dns_zone_transfers_outgoing
              manifest: |-
                {
                  "name": "www.example.com.",
                  "peers": [
                    "23ff594956f20c2a721606e94745a8aa",
                    "00920f38ce07c2e2f4df50b1f61d4194"
                  ],
                  "zone_id": "269d8f4853475ca241c4e730be286b20"
                }
        argumentDocs:
            checked_time: (String) The time for a specific event.
            created_time: (String) The time for a specific event.
            id: (String) The ID of this resource.
            last_transferred_time: (String) The time for a specific event.
            name: (String) Zone name.
            peers: (List of String) A list of peer tags.
            soa_serial: (Number) The serial number of the SOA for the given zone.
            zone_id: (String)
        importStatements:
            - $ terraform import cloudflare_dns_zone_transfers_outgoing.example '<zone_id>'
    cloudflare_dns_zone_transfers_peer:
        subCategory: ""
        name: cloudflare_dns_zone_transfers_peer
        title: cloudflare_dns_zone_transfers_peer Resource - Cloudflare
        examples:
            - name: example_dns_zone_transfers_peer
              manifest: |-
                {
                  "account_id": "01a7362d577a6c3019a474fd6f485823",
                  "name": "my-peer-1"
                }
        argumentDocs:
            account_id: (String)
            id: (String) The ID of this resource.
            ip: (String) IPv4/IPv6 address of primary or secondary nameserver, depending on what zone this peer is linked to. For primary zones this IP defines the IP of the secondary nameserver Cloudflare will NOTIFY upon zone changes. For secondary zones this IP defines the IP of the primary nameserver Cloudflare will send AXFR/IXFR requests to.
            ixfr_enable: (Boolean) Enable IXFR transfer protocol, default is AXFR. Only applicable to secondary zones.
            name: (String) The name of the peer.
            port: (Number) DNS port of primary or secondary nameserver, depending on what zone this peer is linked to.
            tsig_id: (String) TSIG authentication will be used for zone transfer if configured.
        importStatements:
            - $ terraform import cloudflare_dns_zone_transfers_peer.example '<account_id>/<peer_id>'
    cloudflare_dns_zone_transfers_tsig:
        subCategory: ""
        name: cloudflare_dns_zone_transfers_tsig
        title: cloudflare_dns_zone_transfers_tsig Resource - Cloudflare
        examples:
            - name: example_dns_zone_transfers_tsig
              manifest: |-
                {
                  "account_id": "01a7362d577a6c3019a474fd6f485823",
                  "algo": "hmac-sha512.",
                  "name": "tsig.customer.cf.",
                  "secret": "caf79a7804b04337c9c66ccd7bef9190a1e1679b5dd03d8aa10f7ad45e1a9dab92b417896c15d4d007c7c14194538d2a5d0feffdecc5a7f0e1c570cfa700837c"
                }
        argumentDocs:
            account_id: (String)
            algo: (String) TSIG algorithm.
            id: (String) The ID of this resource.
            name: (String) TSIG key name.
            secret: (String) TSIG secret.
        importStatements:
            - $ terraform import cloudflare_dns_zone_transfers_tsig.example '<account_id>/<tsig_id>'
    cloudflare_email_routing_address:
        subCategory: ""
        name: cloudflare_email_routing_address
        title: cloudflare_email_routing_address Resource - Cloudflare
        examples:
            - name: example_email_routing_address
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "email": "user@example.com"
                }
        argumentDocs:
            account_id: (String) Identifier
            created: (String) The date and time the destination address has been created.
            email: (String) The contact email address of the user.
            id: (String) Destination address identifier.
            modified: (String) The date and time the destination address was last modified.
            tag: (String) Destination address tag. (Deprecated, replaced by destination address identifier)
            verified: (String) The date and time the destination address has been verified. Null means not verified yet.
        importStatements:
            - $ terraform import cloudflare_email_routing_address.example '<account_id>/<destination_address_identifier>'
    cloudflare_email_routing_catch_all:
        subCategory: ""
        name: cloudflare_email_routing_catch_all
        title: cloudflare_email_routing_catch_all Resource - Cloudflare
        examples:
            - name: example_email_routing_catch_all
              manifest: |-
                {
                  "actions": [
                    {
                      "type": "drop",
                      "value": [
                        "destinationaddress@example.net"
                      ]
                    }
                  ],
                  "enabled": true,
                  "matchers": [
                    {
                      "type": "all"
                    }
                  ],
                  "name": "Send to user@example.net rule.",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            actions: (Attributes List) List actions for the catch-all routing rule. (see below for nested schema)
            enabled: (Boolean) Routing rule status.
            id: (String) Identifier
            matchers: (Attributes List) List of matchers for the catch-all routing rule. (see below for nested schema)
            name: (String) Routing rule name.
            tag: (String) Routing rule tag. (Deprecated, replaced by routing rule identifier)
            type: (String) Type of action for catch-all rule.
            value: (List of String)
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_email_routing_catch_all.example '<zone_id>'
    cloudflare_email_routing_dns:
        subCategory: ""
        name: cloudflare_email_routing_dns
        title: cloudflare_email_routing_dns Resource - Cloudflare
        examples:
            - name: example_email_routing_dns
              manifest: |-
                {
                  "name": "example.net",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            code: (Number)
            content: (String) DNS record content.
            count: (Number) Total number of results for the requested service
            created: (String) The date and time the settings have been created.
            enabled: (Boolean) State of the zone settings for Email Routing.
            errors: (Attributes List) (see below for nested schema)
            id: (String) Identifier
            message: (String)
            messages: (Attributes List) (see below for nested schema)
            missing: (Attributes) List of records needed to enable an Email Routing zone. (see below for nested schema)
            modified: (String) The date and time the settings have been modified.
            name: (String) Domain of your zone.
            page: (Number) Current page within paginated list of results
            per_page: (Number) Number of results per page of results
            priority: (Number) Required for MX, SRV and URI records. Unused by other record types. Records with lower priorities are preferred.
            record: (Attributes List) (see below for nested schema)
            result: (Attributes) (see below for nested schema)
            result_info: (Attributes) (see below for nested schema)
            skip_wizard: (Boolean) Flag to check if the user skipped the configuration wizard.
            status: (String) Show the state of your account, and the type or configuration error.
            success: (Boolean) Whether the API call was successful
            tag: (String) Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
            total_count: (Number) Total results available without any search parameters
            ttl: (Number) Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for 'automatic'.
            type: (String) DNS record type.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_email_routing_dns.example '<zone_id>'
    cloudflare_email_routing_rule:
        subCategory: ""
        name: cloudflare_email_routing_rule
        title: cloudflare_email_routing_rule Resource - Cloudflare
        examples:
            - name: example_email_routing_rule
              manifest: |-
                {
                  "actions": [
                    {
                      "type": "drop",
                      "value": [
                        "destinationaddress@example.net"
                      ]
                    }
                  ],
                  "enabled": true,
                  "matchers": [
                    {
                      "field": "to",
                      "type": "literal",
                      "value": "test@example.com"
                    }
                  ],
                  "name": "Send to user@example.net rule.",
                  "priority": 0,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            actions: (Attributes List) List actions patterns. (see below for nested schema)
            enabled: (Boolean) Routing rule status.
            field: (String) Field for type matcher.
            id: (String) Routing rule identifier.
            matchers: (Attributes List) Matching patterns to forward to your actions. (see below for nested schema)
            name: (String) Routing rule name.
            priority: (Number) Priority of the routing rule.
            tag: (String) Routing rule tag. (Deprecated, replaced by routing rule identifier)
            type: (String) Type of supported action.
            value: (List of String)
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_email_routing_rule.example '<zone_id>/<rule_identifier>'
    cloudflare_email_routing_settings:
        subCategory: ""
        name: cloudflare_email_routing_settings
        title: cloudflare_email_routing_settings Resource - Cloudflare
        examples:
            - name: example_email_routing_settings
              manifest: |-
                {
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created: (String) The date and time the settings have been created.
            enabled: (Boolean) State of the zone settings for Email Routing.
            id: (String) Email Routing settings identifier.
            modified: (String) The date and time the settings have been modified.
            name: (String) Domain of your zone.
            skip_wizard: (Boolean) Flag to check if the user skipped the configuration wizard.
            status: (String) Show the state of your account, and the type or configuration error.
            tag: (String) Email Routing settings tag. (Deprecated, replaced by Email Routing settings identifier)
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_email_routing_settings.example '<zone_id>'
    cloudflare_email_security_block_sender:
        subCategory: ""
        name: cloudflare_email_security_block_sender
        title: cloudflare_email_security_block_sender Resource - Cloudflare
        examples:
            - name: example_email_security_block_sender
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "comments": "comments",
                  "is_regex": true,
                  "pattern": "x",
                  "pattern_type": "EMAIL"
                }
        argumentDocs:
            account_id: (String) Account Identifier
            comments: (String)
            created_at: (String)
            id: (Number) The unique identifier for the allow policy.
            is_regex: (Boolean)
            last_modified: (String)
            pattern: (String)
            pattern_type: (String)
        importStatements:
            - $ terraform import cloudflare_email_security_block_sender.example '<account_id>/<pattern_id>'
    cloudflare_email_security_impersonation_registry:
        subCategory: ""
        name: cloudflare_email_security_impersonation_registry
        title: cloudflare_email_security_impersonation_registry Resource - Cloudflare
        examples:
            - name: example_email_security_impersonation_registry
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "email": "email",
                  "is_email_regex": true,
                  "name": "name"
                }
        argumentDocs:
            account_id: (String) Account Identifier
            comments: (String)
            created_at: (String)
            directory_id: (Number)
            directory_node_id: (Number)
            email: (String)
            external_directory_node_id: (String)
            id: (Number) The ID of this resource.
            is_email_regex: (Boolean)
            last_modified: (String)
            name: (String)
            provenance: (String)
        importStatements:
            - $ terraform import cloudflare_email_security_impersonation_registry.example '<account_id>/<display_name_id>'
    cloudflare_email_security_trusted_domains:
        subCategory: ""
        name: cloudflare_email_security_trusted_domains
        title: cloudflare_email_security_trusted_domains Resource - Cloudflare
        examples:
            - name: example_email_security_trusted_domains
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "comments": "comments",
                  "is_recent": true,
                  "is_regex": true,
                  "is_similarity": true,
                  "pattern": "x"
                }
        argumentDocs:
            account_id: (String) Account Identifier
            body: (Attributes List) (see below for nested schema)
            comments: (String)
            created_at: (String)
            id: (Number) The unique identifier for the trusted domain.
            is_recent: |-
                (Boolean) Select to prevent recently registered domains from triggering a
                Suspicious or Malicious disposition.
            is_regex: (Boolean)
            is_similarity: |-
                (Boolean) Select for partner or other approved domains that have similar
                spelling to your connected domains. Prevents listed domains from
                triggering a Spoof disposition.
            last_modified: (String)
            pattern: (String)
        importStatements:
            - $ terraform import cloudflare_email_security_trusted_domains.example '<account_id>/<trusted_domain_id>'
    cloudflare_filter:
        subCategory: ""
        name: cloudflare_filter
        title: cloudflare_filter Resource - Cloudflare
        examples:
            - name: example_filter
              manifest: |-
                {
                  "expression": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            description: (String) An informative summary of the filter.
            expression: (String) The filter expression. For more information, refer to Expressions.
            id: (String) The unique identifier of the filter.
            paused: (Boolean) When true, indicates that the filter is currently paused.
            ref: (String) A short reference tag. Allows you to select related filters.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_filter.example '<zone_id>/<filter_id>'
    cloudflare_firewall_rule:
        subCategory: ""
        name: cloudflare_firewall_rule
        title: cloudflare_firewall_rule Resource - Cloudflare
        examples:
            - name: example_firewall_rule
              manifest: |-
                {
                  "action": {
                    "mode": "simulate",
                    "response": {
                      "body": "\u003cerror\u003eThis request has been rate-limited.\u003c/error\u003e",
                      "content_type": "text/xml"
                    },
                    "timeout": 86400
                  },
                  "filter": {
                    "description": "Restrict access from these browsers on this address range.",
                    "expression": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
                    "paused": false,
                    "ref": "FIL-100"
                  },
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            action: (Attributes) The action to perform when the threshold of matched traffic within the configured period is exceeded. (see below for nested schema)
            body: (String) The response body to return. The value must conform to the configured content type.
            content_type: '(String) The content type of the body. Must be one of the following: text/plain, text/xml, or application/json.'
            description: (String) An informative summary of the firewall rule.
            expression: (String) The filter expression. For more information, refer to Expressions.
            filter: (Attributes) (see below for nested schema)
            id: (String) The unique identifier of the firewall rule.
            mode: (String) The action to perform.
            paused: (Boolean) When true, indicates that the firewall rule is currently paused.
            priority: (Number) The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.
            products: (List of String)
            ref: (String) A short reference tag. Allows you to select related firewall rules.
            response: |-
                (Attributes) A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
                Notes: If you omit this object, Cloudflare will use the default HTML error page. If "mode" is "challenge", "managed_challenge", or "js_challenge", Cloudflare will use the zone challenge pages and you should not provide the "response" object. (see below for nested schema)
            timeout: |-
                (Number) The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
                Notes: If "mode" is "challenge", "managed_challenge", or "js_challenge", Cloudflare will use the zone's Challenge Passage time and you should not provide this value.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_firewall_rule.example '<zone_id>/<rule_id>'
    cloudflare_healthcheck:
        subCategory: ""
        name: cloudflare_healthcheck
        title: cloudflare_healthcheck Resource - Cloudflare
        examples:
            - name: example_healthcheck
              manifest: |-
                {
                  "address": "www.example.com",
                  "check_regions": [
                    "WNAM",
                    "ENAM"
                  ],
                  "consecutive_fails": 0,
                  "consecutive_successes": 0,
                  "description": "Health check for www.example.com",
                  "http_config": {
                    "allow_insecure": true,
                    "expected_body": "success",
                    "expected_codes": [
                      "2xx",
                      "302"
                    ],
                    "follow_redirects": true,
                    "header": {
                      "Host": [
                        "example.com"
                      ],
                      "X-App-ID": [
                        "abc123"
                      ]
                    },
                    "method": "GET",
                    "path": "/health",
                    "port": 0
                  },
                  "interval": 0,
                  "name": "server-1",
                  "retries": 0,
                  "suspended": true,
                  "tcp_config": {
                    "method": "connection_established",
                    "port": 0
                  },
                  "timeout": 0,
                  "type": "HTTPS",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            address: (String) The hostname or IP address of the origin server to run health checks on.
            allow_insecure: (Boolean) Do not validate the certificate when the health check uses HTTPS.
            check_regions: (List of String) A list of regions from which to run health checks. Null means Cloudflare will pick a default region.
            consecutive_fails: (Number) The number of consecutive fails required from a health check before changing the health to unhealthy.
            consecutive_successes: (Number) The number of consecutive successes required from a health check before changing the health to healthy.
            created_on: (String)
            description: (String) A human-readable description of the health check.
            expected_body: (String) A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.
            expected_codes: (List of String) The expected HTTP response codes (e.g. "200") or code ranges (e.g. "2xx" for all codes starting with 2) of the health check.
            failure_reason: (String) The current failure reason if status is unhealthy.
            follow_redirects: (Boolean) Follow redirects if the origin returns a 3xx status code.
            header: (Map of List of String) The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.
            http_config: (Attributes) Parameters specific to an HTTP or HTTPS health check. (see below for nested schema)
            id: (String) Identifier
            interval: (Number) The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations.
            method: (String) The HTTP method to use for the health check.
            modified_on: (String)
            name: (String) A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.
            path: (String) The endpoint path to health check against.
            port: (Number) Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.
            retries: (Number) The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.
            status: (String) The current status of the origin server according to the health check.
            suspended: (Boolean) If suspended, no health checks are sent to the origin.
            tcp_config: (Attributes) Parameters specific to TCP health check. (see below for nested schema)
            timeout: (Number) The timeout (in seconds) before marking the health check as failed.
            type: (String) The protocol to use for the health check. Currently supported protocols are 'HTTP', 'HTTPS' and 'TCP'.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_healthcheck.example '<zone_id>/<healthcheck_id>'
    cloudflare_hostname_tls_setting:
        subCategory: ""
        name: cloudflare_hostname_tls_setting
        title: cloudflare_hostname_tls_setting Resource - Cloudflare
        examples:
            - name: example_hostname_tls_setting
              manifest: |-
                {
                  "hostname": "app.example.com",
                  "setting_id": "ciphers",
                  "value": [
                    "ECDHE-RSA-AES128-GCM-SHA256",
                    "AES128-GCM-SHA256"
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created_at: (String) This is the time the tls setting was originally created for this hostname.
            hostname: (String) The hostname for which the tls settings are set.
            id: (String) The TLS Setting name.
            setting_id: (String) The TLS Setting name.
            status: (String) Deployment status for the given tls setting.
            updated_at: (String) This is the time the tls setting was updated.
            value: (Dynamic) The tls setting value.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_hostname_tls_setting.example '<zone_id>/<setting_id>'
    cloudflare_hyperdrive_config:
        subCategory: ""
        name: cloudflare_hyperdrive_config
        title: cloudflare_hyperdrive_config Resource - Cloudflare
        examples:
            - name: example_hyperdrive_config
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "caching": {
                    "disabled": true
                  },
                  "name": "example-hyperdrive",
                  "origin": {
                    "database": "postgres",
                    "host": "database.example.com",
                    "password": "password",
                    "port": 5432,
                    "scheme": "postgres",
                    "user": "postgres"
                  }
                }
        argumentDocs:
            access_client_id: (String) The Client ID of the Access token to use when connecting to the origin database.
            access_client_secret: (String) The Client Secret of the Access token to use when connecting to the origin database. This value is write-only and never returned by the API.
            account_id: (String) Identifier
            caching: (Attributes) (see below for nested schema)
            created_on: (String) When the Hyperdrive configuration was created.
            database: (String) The name of your origin database.
            disabled: '(Boolean) When set to true, disables the caching of SQL responses. (Default: false)'
            host: (String) The host (hostname or IP) of your origin database.
            id: (String) Identifier
            max_age: '(Number) When present, specifies max duration for which items should persist in the cache. Not returned if set to default. (Default: 60)'
            modified_on: (String) When the Hyperdrive configuration was last modified.
            name: (String)
            origin: (Attributes) (see below for nested schema)
            password: (String) The password required to access your origin database. This value is write-only and never returned by the API.
            port: '(Number) The port (default: 5432 for Postgres) of your origin database.'
            scheme: (String) Specifies the URL scheme used to connect to your origin database.
            stale_while_revalidate: '(Number) When present, indicates the number of seconds cache may serve the response after it becomes stale. Not returned if set to default. (Default: 15)'
            user: (String) The user of your origin database.
        importStatements: []
    cloudflare_image:
        subCategory: ""
        name: cloudflare_image
        title: cloudflare_image Resource - Cloudflare
        examples:
            - name: example_image
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "file": {},
                  "metadata": {},
                  "require_signed_urls": true,
                  "url": "https://example.com/path/to/logo.png"
                }
        argumentDocs:
            account_id: (String) Account identifier tag.
            file: (String) An image binary data. Only needed when type is uploading a file.
            filename: (String) Image file name.
            id: (String) Image unique identifier.
            meta: (String) User modifiable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.
            metadata: (String) User modifiable key-value store. Can use used for keeping references to another system of record for managing images.
            require_signed_urls: (Boolean) Indicates whether the image requires a signature token for the access.
            uploaded: (String) When the media item was uploaded.
            url: (String) A URL to fetch an image from origin. Only needed when type is uploading from a URL.
            variants: (List of String) Object specifying available variants for an image.
        importStatements:
            - $ terraform import cloudflare_image.example '<account_id>/<image_id>'
    cloudflare_image_variant:
        subCategory: ""
        name: cloudflare_image_variant
        title: cloudflare_image_variant Resource - Cloudflare
        examples:
            - name: example_image_variant
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "id": "hero",
                  "never_require_signed_urls": true,
                  "options": {
                    "fit": "scale-down",
                    "height": 768,
                    "metadata": "keep",
                    "width": 1366
                  }
                }
        argumentDocs:
            account_id: (String) Account identifier tag.
            fit: (String) The fit property describes how the width and height dimensions should be interpreted.
            height: (Number) Maximum height in image pixels.
            id: (String) The ID of this resource.
            metadata: (String) What EXIF data should be preserved in the output image.
            never_require_signed_urls: (Boolean) Indicates whether the variant can access an image without a signature, regardless of image access control.
            options: (Attributes) Allows you to define image resizing sizes for different use cases. (see below for nested schema)
            variant: (Attributes) (see below for nested schema)
            width: (Number) Maximum width in image pixels.
        importStatements:
            - $ terraform import cloudflare_image_variant.example '<account_id>/<variant_id>'
    cloudflare_keyless_certificate:
        subCategory: ""
        name: cloudflare_keyless_certificate
        title: cloudflare_keyless_certificate Resource - Cloudflare
        examples:
            - name: example_keyless_certificate
              manifest: |-
                {
                  "bundle_method": "ubiquitous",
                  "certificate": "-----BEGIN CERTIFICATE----- MIIDtTCCAp2gAwIBAgIJAM15n7fdxhRtMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV BAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX aWRnaXRzIFB0eSBMdGQwHhcNMTQwMzExMTkyMTU5WhcNMTQwNDEwMTkyMTU5WjBF MQswCQYDVQQGEwJVUzETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50 ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAvq3sKsHpeduJHimOK+fvQdKsI8z8A05MZyyLp2/R/GE8FjNv+hkVY1WQ LIyTNNQH7CJecE1nbTfo8Y56S7x/rhxC6/DJ8MIulapFPnorq46KU6yRxiM0MQ3N nTJHlHA2ozZta6YBBfVfhHWl1F0IfNbXCLKvGwWWMbCx43OfW6KTkbRnE6gFWKuO fSO5h2u5TaWVuSIzBvYs7Vza6m+gtYAvKAJV2nSZ+eSEFPDo29corOy8+huEOUL8 5FAw4BFPsr1TlrlGPFitduQUHGrSL7skk1ESGza0to3bOtrodKei2s9bk5MXm7lZ qI+WZJX4Zu9+mzZhc9pCVi8r/qlXuQIDAQABo4GnMIGkMB0GA1UdDgQWBBRvavf+ sWM4IwKiH9X9w1vl6nUVRDB1BgNVHSMEbjBsgBRvavf+sWM4IwKiH9X9w1vl6nUV RKFJpEcwRTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAM15n7fdxhRtMAwGA1UdEwQF MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBABY2ZzBaW0dMsAAT7tPJzrVWVzQx6KU4 UEBLudIlWPlkAwTnINCWR/8eNjCCmGA4heUdHmazdpPa8RzwOmc0NT1NQqzSyktt vTqb4iHD7+8f9MqJ9/FssCfTtqr/Qst/hGH4Wmdf1EJ/6FqYAAb5iRlPgshFZxU8 uXtA8hWn6fK6eISD9HBdcAFToUvKNZ1BIDPvh9f95Ine8ar6yGd56TUNrHR8eHBs ESxz5ddVR/oWRysNJ+aGAyYqHS8S/ttmC7r4XCAHqXptkHPCGRqkAhsterYhd4I8 /cBzejUobNCjjHFbtkAL/SjxZOLW+pNkZwfeYdM8iPkD54Uua1v2tdw= -----END CERTIFICATE-----",
                  "host": "example.com",
                  "name": "example.com Keyless SSL",
                  "port": 24008,
                  "tunnel": {
                    "private_ip": "10.0.0.1",
                    "vnet_id": "7365377a-85a4-4390-9480-531ef7dc7a3c"
                  },
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            bundle_method: (String) A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.
            certificate: (String) The zone's SSL certificate or SSL certificate and intermediate(s).
            created_on: (String) When the Keyless SSL was created.
            enabled: (Boolean) Whether or not the Keyless SSL is on or off.
            host: (String) The keyless SSL name.
            id: (String) Keyless certificate identifier tag.
            modified_on: (String) When the Keyless SSL was last modified.
            name: (String) The keyless SSL name.
            permissions: (List of String) Available permissions for the Keyless SSL for the current user requesting the item.
            port: (Number) The keyless SSL port used to communicate between Cloudflare and the client's Keyless SSL server.
            private_ip: (String) Private IP of the Key Server Host
            status: (String) Status of the Keyless SSL.
            tunnel: (Attributes) Configuration for using Keyless SSL through a Cloudflare Tunnel (see below for nested schema)
            vnet_id: (String) Cloudflare Tunnel Virtual Network ID
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_keyless_certificate.example '<zone_id>/<keyless_certificate_id>'
    cloudflare_leaked_credential_check:
        subCategory: ""
        name: cloudflare_leaked_credential_check
        title: cloudflare_leaked_credential_check Resource - Cloudflare
        examples:
            - name: example_leaked_credential_check
              manifest: |-
                {
                  "enabled": true,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            enabled: (Boolean) Whether or not Leaked Credential Checks are enabled
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_leaked_credential_check_rule:
        subCategory: ""
        name: cloudflare_leaked_credential_check_rule
        title: cloudflare_leaked_credential_check_rule Resource - Cloudflare
        examples:
            - name: example_leaked_credential_check_rule
              manifest: |-
                {
                  "password": "lookup_json_string(http.request.body.raw, \"secret\")",
                  "username": "lookup_json_string(http.request.body.raw, \"user\")",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            id: (String) The unique ID for this custom detection
            password: (String) The ruleset expression to use in matching the password in a request
            username: (String) The ruleset expression to use in matching the username in a request
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_list:
        subCategory: ""
        name: cloudflare_list
        title: cloudflare_list Resource - Cloudflare
        examples:
            - name: example_list
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "description": "This is a note",
                  "kind": "ip",
                  "name": "list1"
                }
        argumentDocs:
            account_id: (String) Identifier
            created_on: (String) The RFC 3339 timestamp of when the list was created.
            description: (String) An informative summary of the list.
            id: (String) The unique ID of the list.
            kind: (String) The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
            modified_on: (String) The RFC 3339 timestamp of when the list was last modified.
            name: (String) An informative name for the list. Use this name in filter and rule expressions.
            num_items: (Number) The number of items in the list.
            num_referencing_filters: (Number) The number of filters referencing the list.
        importStatements:
            - $ terraform import cloudflare_list.example '<account_id>/<list_id>'
    cloudflare_list_item:
        subCategory: ""
        name: cloudflare_list_item
        title: cloudflare_list_item Resource - Cloudflare
        examples:
            - name: example_list_item
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "body": [
                    {
                      "asn": 5567,
                      "comment": "Private IP address",
                      "hostname": {
                        "url_hostname": "example.com"
                      },
                      "ip": "10.0.0.1",
                      "redirect": {
                        "include_subdomains": true,
                        "preserve_path_suffix": true,
                        "preserve_query_string": true,
                        "source_url": "example.com/arch",
                        "status_code": 301,
                        "subpath_matching": true,
                        "target_url": "https://archlinux.org/"
                      }
                    }
                  ],
                  "list_id": "2c0fc9fa937b11eaa1b71c4d701ab86e"
                }
        argumentDocs:
            account_id: (String) Identifier
            asn: (Number) A non-negative 32 bit integer
            comment: (String) An informative summary of the list item.
            created_on: (String) The RFC 3339 timestamp of when the item was created.
            hostname: (Attributes) Valid characters for hostnames are ASCII(7) letters from a to z, the digits from 0 to 9, wildcards (*), and the hyphen (-). (see below for nested schema)
            id: (String) The unique ID of the item in the List.
            include_subdomains: (Boolean)
            ip: (String) An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.
            list_id: (String) The unique ID of the list.
            modified_on: (String) The RFC 3339 timestamp of when the item was last modified.
            operation_id: (String) The unique operation ID of the asynchronous action.
            preserve_path_suffix: (Boolean)
            preserve_query_string: (Boolean)
            redirect: (Attributes) The definition of the redirect. (see below for nested schema)
            source_url: (String)
            status_code: (Number)
            subpath_matching: (Boolean)
            target_url: (String)
            url_hostname: (String)
        importStatements: []
    cloudflare_load_balancer:
        subCategory: ""
        name: cloudflare_load_balancer
        title: cloudflare_load_balancer Resource - Cloudflare
        examples:
            - name: example_load_balancer
              manifest: |-
                {
                  "adaptive_routing": {
                    "failover_across_pools": true
                  },
                  "country_pools": {
                    "GB": [
                      "abd90f38ced07c2e2f4df50b1f61d4194"
                    ],
                    "US": [
                      "de90f38ced07c2e2f4df50b1f61d4194",
                      "00920f38ce07c2e2f4df50b1f61d4194"
                    ]
                  },
                  "default_pools": [
                    "17b5962d775c646f3f9725cbc7a53df4",
                    "9290f38c5d07c2e2f4df57b1f61d4196",
                    "00920f38ce07c2e2f4df50b1f61d4194"
                  ],
                  "description": "Load Balancer for www.example.com",
                  "fallback_pool": "fallback_pool",
                  "location_strategy": {
                    "mode": "pop",
                    "prefer_ecs": "always"
                  },
                  "name": "www.example.com",
                  "networks": [
                    "string"
                  ],
                  "pop_pools": {
                    "LAX": [
                      "de90f38ced07c2e2f4df50b1f61d4194",
                      "9290f38c5d07c2e2f4df57b1f61d4196"
                    ],
                    "LHR": [
                      "abd90f38ced07c2e2f4df50b1f61d4194",
                      "f9138c5d07c2e2f4df57b1f61d4196"
                    ],
                    "SJC": [
                      "00920f38ce07c2e2f4df50b1f61d4194"
                    ]
                  },
                  "proxied": true,
                  "random_steering": {
                    "default_weight": 0.2,
                    "pool_weights": {
                      "9290f38c5d07c2e2f4df57b1f61d4196": 0.5,
                      "de90f38ced07c2e2f4df50b1f61d4194": 0.3
                    }
                  },
                  "region_pools": {
                    "ENAM": [
                      "00920f38ce07c2e2f4df50b1f61d4194"
                    ],
                    "WNAM": [
                      "de90f38ced07c2e2f4df50b1f61d4194",
                      "9290f38c5d07c2e2f4df57b1f61d4196"
                    ]
                  },
                  "rules": [
                    {
                      "condition": "http.request.uri.path contains \"/testing\"",
                      "disabled": true,
                      "fixed_response": {
                        "content_type": "application/json",
                        "location": "www.example.com",
                        "message_body": "Testing Hello",
                        "status_code": 0
                      },
                      "name": "route the path /testing to testing datacenter.",
                      "overrides": {
                        "adaptive_routing": {
                          "failover_across_pools": true
                        },
                        "country_pools": {
                          "GB": [
                            "abd90f38ced07c2e2f4df50b1f61d4194"
                          ],
                          "US": [
                            "de90f38ced07c2e2f4df50b1f61d4194",
                            "00920f38ce07c2e2f4df50b1f61d4194"
                          ]
                        },
                        "default_pools": [
                          "17b5962d775c646f3f9725cbc7a53df4",
                          "9290f38c5d07c2e2f4df57b1f61d4196",
                          "00920f38ce07c2e2f4df50b1f61d4194"
                        ],
                        "fallback_pool": "fallback_pool",
                        "location_strategy": {
                          "mode": "pop",
                          "prefer_ecs": "always"
                        },
                        "pop_pools": {
                          "LAX": [
                            "de90f38ced07c2e2f4df50b1f61d4194",
                            "9290f38c5d07c2e2f4df57b1f61d4196"
                          ],
                          "LHR": [
                            "abd90f38ced07c2e2f4df50b1f61d4194",
                            "f9138c5d07c2e2f4df57b1f61d4196"
                          ],
                          "SJC": [
                            "00920f38ce07c2e2f4df50b1f61d4194"
                          ]
                        },
                        "random_steering": {
                          "default_weight": 0.2,
                          "pool_weights": {
                            "9290f38c5d07c2e2f4df57b1f61d4196": 0.5,
                            "de90f38ced07c2e2f4df50b1f61d4194": 0.3
                          }
                        },
                        "region_pools": {
                          "ENAM": [
                            "00920f38ce07c2e2f4df50b1f61d4194"
                          ],
                          "WNAM": [
                            "de90f38ced07c2e2f4df50b1f61d4194",
                            "9290f38c5d07c2e2f4df57b1f61d4196"
                          ]
                        },
                        "session_affinity": "none",
                        "session_affinity_attributes": {
                          "drain_duration": 100,
                          "headers": [
                            "x"
                          ],
                          "require_all_headers": true,
                          "samesite": "Auto",
                          "secure": "Auto",
                          "zero_downtime_failover": "none"
                        },
                        "session_affinity_ttl": 1800,
                        "steering_policy": "off",
                        "ttl": 30
                      },
                      "priority": 0,
                      "terminates": true
                    }
                  ],
                  "session_affinity": "none",
                  "session_affinity_attributes": {
                    "drain_duration": 100,
                    "headers": [
                      "x"
                    ],
                    "require_all_headers": true,
                    "samesite": "Auto",
                    "secure": "Auto",
                    "zero_downtime_failover": "none"
                  },
                  "session_affinity_ttl": 1800,
                  "steering_policy": "off",
                  "ttl": 30,
                  "zone_id": "699d98642c564d2e855e9661899b7252"
                }
        argumentDocs:
            '""': ': Will map to "geo" if you use region_pools/country_pools/pop_pools otherwise "off".'
            '"always"': ': Always prefer ECS.'
            '"cookie"': ': On the first request to a proxied load balancer, a cookie is generated, encoding information of which origin the request will be forwarded to. Subsequent requests, by the same client to the same load balancer, will be sent to the origin server the cookie encodes, for the duration of the cookie and as long as the origin server remains healthy. If the cookie has expired or the origin server is unhealthy, then a new origin server is calculated and used.'
            '"dynamic_latency"': ': Use round trip time to select the closest pool in default_pools (requires pool health checks).'
            '"false"': ': Load balancing requests must contain at least one of the HTTP headers specified by the headers session affinity attribute, otherwise sessions aren''t created.'
            '"geo"': ': Use region_pools/country_pools/pop_pools. For non-proxied requests, the country for country_pools is determined by location_strategy.'
            '"header"': ': On the first request to a proxied load balancer, a session key based on the configured HTTP headers (see session_affinity_attributes.headers) is generated, encoding the request headers used for storing in the load balancer session state which origin the request will be forwarded to. Subsequent requests to the load balancer with the same headers will be sent to the same origin server, for the duration of the session and as long as the origin server remains healthy. If the session has been idle for the duration of session_affinity_ttl seconds or the origin server is unhealthy, then a new origin server is calculated and used. See headers in session_affinity_attributes for additional required configuration.'
            '"ip_cookie"': ': Behaves the same as "cookie" except the initial origin selection is stable and based on the client''s ip address.'
            '"least_connections"': ': Select a pool by taking into consideration random_steering weights, as well as each pool''s number of open connections. Pools with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections.'
            '"least_outstanding_requests"': ': Select a pool by taking into consideration random_steering weights, as well as each pool''s number of outstanding requests. Pools with more pending requests are weighted proportionately less relative to others.'
            '"never"': ': Never prefer ECS.'
            '"none"': ': No failover takes place for sessions pinned to the origin (default).'
            '"off"': ': Use default_pools.'
            '"pop"': ': Use the Cloudflare PoP location.'
            '"proximity"': ': Use the pools'' latitude and longitude to select the closest pool using the Cloudflare PoP location for proxied requests or the location determined by location_strategy for non-proxied requests.'
            '"random"': ': Select a pool randomly.'
            '"resolver_ip"': ': Use the DNS resolver GeoIP location. If the GeoIP lookup is unsuccessful, use the Cloudflare PoP location.'
            '"sticky"': ': The session affinity cookie is updated and subsequent requests are sent to the new origin. Note: Zero-downtime failover with sticky sessions is currently not supported for session affinity by header.'
            '"temporary"': ': Traffic will be sent to another other healthy origin until the originally pinned origin is available; note that this can potentially result in heavy origin flapping.'
            '"true"': ': Load balancing requests must contain all of the HTTP headers specified by the headers session affinity attribute, otherwise sessions aren''t created.'
            adaptive_routing: (Attributes) Controls features that modify the routing of requests to pools and origins in response to dynamic conditions, such as during the interval between active health monitoring requests. For example, zero-downtime failover occurs immediately when an origin becomes unavailable due to HTTP 521, 522, or 523 response codes. If there is another healthy origin in the same pool, the request is retried once against this alternate origin. (see below for nested schema)
            condition: (String) The condition expressions to evaluate. If the condition evaluates to true, the overrides or fixed_response in this rule will be applied. An empty condition is always true. For more details on condition expressions, please see https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules/expressions.
            content_type: (String) The http 'Content-Type' header to include in the response.
            country_pools: (Map of List of String) A mapping of country codes to a list of pool IDs (ordered by their failover priority) for the given country. Any country not explicitly defined will fall back to using the corresponding region_pool mapping if it exists else to default_pools.
            created_on: (String)
            default_pools: (List of String) A list of pool IDs ordered by their failover priority. Pools defined here are used by default, or when region_pools are not configured for a given region.
            default_weight: (Number) The default weight for pools in the load balancer that are not specified in the pool_weights map.
            description: (String) Object description.
            disabled: (Boolean) Disable this specific rule. It will no longer be evaluated by this load balancer.
            drain_duration: (Number) Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.
            enabled: (Boolean) Whether to enable (the default) this load balancer.
            failover_across_pools: (Boolean) Extends zero-downtime failover of requests to healthy origins from alternate pools, when no healthy alternate exists in the same pool, according to the failover order defined by traffic and origin steering. When set false (the default) zero-downtime failover will only occur between origins within the same pool. See session_affinity_attributes for control over when sessions are broken or reassigned.
            fallback_pool: (String) The pool ID to use when all other pools are detected as unhealthy.
            fixed_response: (Attributes) A collection of fields used to directly respond to the eyeball instead of routing to a pool. If a fixed_response is supplied the rule will be marked as terminates. (see below for nested schema)
            headers: '(List of String) Configures the names of HTTP headers to base session affinity on when header session_affinity is enabled. At least one HTTP header name must be provided. To specify the exact cookies to be used, include an item in the following format: "cookie:<cookie-name-1>,<cookie-name-2>" (example) where everything after the colon is a comma-separated list of cookie names. Providing only "cookie" will result in all cookies being used. The default max number of HTTP header names that can be provided depends on your plan: 5 for Enterprise, 1 for all other plans.'
            id: (String) The ID of this resource.
            location: (String) The http 'Location' header to include in the response.
            location_strategy: (Attributes) Controls location-based steering for non-proxied requests. See steering_policy to learn how steering is affected. (see below for nested schema)
            message_body: (String) Text to include as the http body.
            mode: (String) Determines the authoritative location when ECS is not preferred, does not exist in the request, or its GeoIP lookup is unsuccessful.
            modified_on: (String)
            name: (String) The DNS hostname to associate with your Load Balancer. If this hostname already exists as a DNS record in Cloudflare's DNS, the Load Balancer will take precedence and the DNS record will not be used.
            networks: (List of String) List of networks where Load Balancer or Pool is enabled.
            overrides: (Attributes) A collection of overrides to apply to the load balancer when this rule's condition is true. All fields are optional. (see below for nested schema)
            pool_weights: (Map of Number) A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.
            pop_pools: '(Map of List of String) (Enterprise only): A mapping of Cloudflare PoP identifiers to a list of pool IDs (ordered by their failover priority) for the PoP (datacenter). Any PoPs not explicitly defined will fall back to using the corresponding country_pool, then region_pool mapping if it exists else to default_pools.'
            prefer_ecs: (String) Whether the EDNS Client Subnet (ECS) GeoIP should be preferred as the authoritative location.
            priority: (Number) The order in which rules should be executed in relation to each other. Lower values are executed first. Values do not need to be sequential. If no value is provided for any rule the array order of the rules field will be used to assign a priority.
            proxied: (Boolean) Whether the hostname should be gray clouded (false) or orange clouded (true).
            random_steering: (Attributes) Configures pool weights.
            region_pools: (Map of List of String) A mapping of region codes to a list of pool IDs (ordered by their failover priority) for the given region. Any regions not explicitly defined will fall back to using default_pools.
            require_all_headers: '(Boolean) When header session_affinity is enabled, this option can be used to specify how HTTP headers on load balancing requests will be used. The supported values are:'
            rules: '(Attributes List) BETA Field Not General Access: A list of rules for this load balancer to execute. (see below for nested schema)'
            samesite: '(String) Configures the SameSite attribute on session affinity cookie. Value "Auto" will be translated to "Lax" or "None" depending if Always Use HTTPS is enabled. Note: when using value "None", the secure attribute can not be set to "Never".'
            secure: (String) Configures the Secure attribute on session affinity cookie. Value "Always" indicates the Secure attribute will be set in the Set-Cookie header, "Never" indicates the Secure attribute will not be set, and "Auto" will set the Secure attribute depending if Always Use HTTPS is enabled.
            session_affinity: '(String) Specifies the type of session affinity the load balancer should use unless specified as "none". The supported types are:'
            session_affinity_attributes: (Attributes) Configures attributes for session affinity. (see below for nested schema)
            session_affinity_ttl: '(Number) Time, in seconds, until a client''s session expires after being created. Once the expiry time has been reached, subsequent requests may get sent to a different origin server. The accepted ranges per session_affinity policy are:'
            status_code: (Number) The http status code to respond with.
            steering_policy: (String) Steering Policy for this load balancer.
            steering_policy="least_connections": ': Use pool weights to scale each pool''s open connections. (see below for nested schema)'
            steering_policy="least_outstanding_requests": ': Use pool weights to scale each pool''s outstanding requests.'
            steering_policy="random": ': A random pool is selected with probability proportional to pool weights.'
            terminates: (Boolean) If this rule's condition is true, this causes rule evaluation to stop after processing this rule.
            ttl: (Number) Time to live (TTL) of the DNS entry for the IP address returned by this load balancer. This only applies to gray-clouded (unproxied) load balancers.
            zero_downtime_failover: '(String) Configures the zero-downtime failover between origins within a pool when session affinity is enabled. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance. The supported values are:'
            zone_id: (String)
        importStatements:
            - $ terraform import cloudflare_load_balancer.example '<zone_id>/<load_balancer_id>'
    cloudflare_load_balancer_monitor:
        subCategory: ""
        name: cloudflare_load_balancer_monitor
        title: cloudflare_load_balancer_monitor Resource - Cloudflare
        examples:
            - name: example_load_balancer_monitor
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "allow_insecure": true,
                  "consecutive_down": 0,
                  "consecutive_up": 0,
                  "description": "Login page monitor",
                  "expected_body": "alive",
                  "expected_codes": "2xx",
                  "follow_redirects": true,
                  "header": {
                    "Host": [
                      "example.com"
                    ],
                    "X-App-ID": [
                      "abc123"
                    ]
                  },
                  "interval": 0,
                  "method": "GET",
                  "path": "/health",
                  "port": 0,
                  "probe_zone": "example.com",
                  "retries": 0,
                  "timeout": 0,
                  "type": "http"
                }
        argumentDocs:
            account_id: (String) Identifier
            allow_insecure: (Boolean) Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.
            consecutive_down: (Number) To be marked unhealthy the monitored origin must fail this healthcheck N consecutive times.
            consecutive_up: (Number) To be marked healthy the monitored origin must pass this healthcheck N consecutive times.
            created_on: (String)
            description: (String) Object description.
            expected_body: (String) A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.
            expected_codes: (String) The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.
            follow_redirects: (Boolean) Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.
            header: (Map of List of String) The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.
            id: (String) The ID of this resource.
            interval: (Number) The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.
            method: (String) The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.
            modified_on: (String)
            path: (String) The endpoint path you want to conduct a health check against. This parameter is only valid for HTTP and HTTPS monitors.
            port: '(Number) The port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).'
            probe_zone: (String) Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.
            retries: (Number) The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.
            timeout: (Number) The timeout (in seconds) before marking the health check as failed.
            type: (String) The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.
        importStatements:
            - $ terraform import cloudflare_load_balancer_monitor.example '<account_id>/<monitor_id>'
    cloudflare_load_balancer_pool:
        subCategory: ""
        name: cloudflare_load_balancer_pool
        title: cloudflare_load_balancer_pool Resource - Cloudflare
        examples:
            - name: example_load_balancer_pool
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "description": "Primary data center - Provider XYZ",
                  "enabled": false,
                  "latitude": 0,
                  "load_shedding": {
                    "default_percent": 0,
                    "default_policy": "random",
                    "session_percent": 0,
                    "session_policy": "hash"
                  },
                  "longitude": 0,
                  "minimum_origins": 0,
                  "monitor": "monitor",
                  "name": "primary-dc-1",
                  "notification_email": "someone@example.com,sometwo@example.com",
                  "notification_filter": {
                    "origin": {
                      "disable": true,
                      "healthy": true
                    },
                    "pool": {
                      "disable": true,
                      "healthy": false
                    }
                  },
                  "origin_steering": {
                    "policy": "random"
                  },
                  "origins": [
                    {
                      "address": "0.0.0.0",
                      "enabled": true,
                      "header": {
                        "host": [
                          "example.com"
                        ]
                      },
                      "name": "app-server-1",
                      "virtual_network_id": "a5624d4e-044a-4ff0-b3e1-e2465353d4b4",
                      "weight": 0.6
                    }
                  ]
                }
        argumentDocs:
            '"hash"': ': Select an origin by computing a hash over the CF-Connecting-IP address.'
            '"least_connections"': ': Select an origin by taking into consideration origin weights, as well as each origin''s number of open connections. Origins with more open connections are weighted proportionately less relative to others. Supported for HTTP/1 and HTTP/2 connections.'
            '"least_outstanding_requests"': ': Select an origin by taking into consideration origin weights, as well as each origin''s number of outstanding requests. Origins with more pending requests are weighted proportionately less relative to others.'
            '"random"': ': Select an origin randomly.'
            account_id: (String) Identifier
            address: (String) The IP address (IPv4 or IPv6) of the origin, or its publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare. To set an internal/reserved address, virtual_network_id must also be set.
            check_regions: (List of String) A list of regions from which to run health checks. Null means every Cloudflare data center.
            created_on: (String)
            default_percent: (Number) The percent of traffic to shed from the pool, according to the default policy. Applies to new sessions and traffic without session affinity.
            default_policy: (String) The default policy to use when load shedding. A random policy randomly sheds a given percent of requests. A hash policy computes a hash over the CF-Connecting-IP address and sheds all requests originating from a percent of IPs.
            description: (String) A human-readable description of the pool.
            disable: (Boolean) If set true, disable notifications for this type of resource (pool or origin).
            disabled_at: (String) This field shows up only if the pool is disabled. This field is set with the time the pool was disabled at.
            enabled: (Boolean) Whether to enable (the default) or disable this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any).
            header: (Attributes) The request header is used to pass additional information with an HTTP request. Currently supported header is 'Host'. (see below for nested schema)
            healthy: (Boolean) If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).
            host: (List of String) The 'Host' header allows to override the hostname set in the HTTP request. Current support is 1 'Host' header override per origin.
            id: (String) The ID of this resource.
            latitude: (Number) The latitude of the data center containing the origins used in this pool in decimal degrees. If this is set, longitude must also be set.
            load_shedding: (Attributes) Configures load shedding policies and percentages for the pool. (see below for nested schema)
            longitude: (Number) The longitude of the data center containing the origins used in this pool in decimal degrees. If this is set, latitude must also be set.
            minimum_origins: (Number) The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and will failover to the next available pool.
            modified_on: (String)
            monitor: (String) The ID of the Monitor to use for checking the health of origins within this pool.
            name: (String) A short name (tag) for the pool. Only alphanumeric characters, hyphens, and underscores are allowed.
            networks: (List of String) List of networks where Load Balancer or Pool is enabled.
            notification_email: (String) This field is now deprecated. It has been moved to Cloudflare's Centralized Notification service https://developers.cloudflare.com/fundamentals/notifications/. The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.
            notification_filter: (Attributes) Filter pool and origin health notifications by resource type or health status. Use null to reset. (see below for nested schema)
            origin: (Attributes) Filter options for a particular resource type (pool or origin). Use null to reset. (see below for nested schema)
            origin_steering: (Attributes) Configures origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity. (see below for nested schema)
            origin_steering.policy="least_connections": ': Use weight to scale the origin''s open connections.'
            origin_steering.policy="least_outstanding_requests": ': Use weight to scale the origin''s outstanding requests.'
            origins: (Attributes List) The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. (see below for nested schema)
            policy: (String) The type of origin steering policy to use.
            pool: (Attributes) Filter options for a particular resource type (pool or origin). Use null to reset. (see below for nested schema)
            session_percent: (Number) The percent of existing sessions to shed from the pool, according to the session policy.
            session_policy: (String) Only the hash policy is supported for existing sessions (to avoid exponential decay).
            virtual_network_id: (String) The virtual network subnet ID the origin belongs in. Virtual network must also belong to the account.
            weight: (Number) The weight of this origin relative to other origins in the pool. Based on the configured weight the total traffic is distributed among origins within the pool.
        importStatements:
            - $ terraform import cloudflare_load_balancer_pool.example '<account_id>/<pool_id>'
    cloudflare_logpull_retention:
        subCategory: ""
        name: cloudflare_logpull_retention
        title: cloudflare_logpull_retention Resource - Cloudflare
        examples:
            - name: example_logpull_retention
              manifest: |-
                {
                  "flag": true,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            flag: (Boolean) The log retention flag for Logpull API.
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_logpush_job:
        subCategory: ""
        name: cloudflare_logpush_job
        title: cloudflare_logpush_job Resource - Cloudflare
        examples:
            - name: example_logpush_job
              manifest: |-
                {
                  "dataset": "http_requests",
                  "destination_conf": "s3://mybucket/logs?region=us-west-2",
                  "enabled": false,
                  "frequency": "high",
                  "kind": "edge",
                  "logpull_options": "fields=RayID,ClientIP,EdgeStartTimestamp\u0026timestamps=rfc3339",
                  "max_upload_bytes": 5000000,
                  "max_upload_interval_seconds": 30,
                  "max_upload_records": 1000,
                  "name": "example.com",
                  "output_options": {
                    "batch_prefix": "batch_prefix",
                    "batch_suffix": "batch_suffix",
                    "cve_2021_4428": true,
                    "field_delimiter": "field_delimiter",
                    "field_names": [
                      "ClientIP",
                      "EdgeStartTimestamp",
                      "RayID"
                    ],
                    "output_type": "ndjson",
                    "record_delimiter": "record_delimiter",
                    "record_prefix": "record_prefix",
                    "record_suffix": "record_suffix",
                    "record_template": "record_template",
                    "sample_rate": 0,
                    "timestamp_format": "unixnano"
                  },
                  "ownership_challenge": "00000000000000000000",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            batch_prefix: (String) String to be prepended before each batch.
            batch_suffix: (String) String to be appended after each batch.
            cve_2021_4428: (Boolean) If set to true, will cause all occurrences of ${ in the generated files to be replaced with x{.
            dataset: (String) Name of the dataset. A list of supported datasets can be found on the Developer Docs.
            destination_conf: (String) Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
            enabled: (Boolean) Flag that indicates if the job is enabled.
            error_message: '(String) If not null, the job is currently failing. Failures are usually repetitive (example: no permissions to write to destination bucket). Only the last failure is recorded. On successful execution of a job the error_message and last_error are set to null.'
            field_delimiter: (String) String to join fields. This field be ignored when record_template is set.
            field_names: (List of String) List of field names to be included in the Logpush output. For the moment, there is no option to add all fields at once, so you must specify all the fields names you are interested in.
            frequency: (String) This field is deprecated. Please use max_upload_* parameters instead. The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.
            id: (Number) Unique id of the job.
            kind: (String) The kind parameter (optional) is used to differentiate between Logpush and Edge Log Delivery jobs. Currently, Edge Log Delivery is only supported for the http_requests dataset.
            last_complete: (String) Records the last time for which logs have been successfully pushed. If the last successful push was for logs range 2018-07-23T10:00:00Z to 2018-07-23T10:01:00Z then the value of this field will be 2018-07-23T10:01:00Z. If the job has never run or has just been enabled and hasn't run yet then the field will be empty.
            last_error: (String) Records the last time the job failed. If not null, the job is currently failing. If null, the job has either never failed or has run successfully at least once since last failure. See also the error_message field.
            logpull_options: (String) This field is deprecated. Use output_options instead. Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.
            max_upload_bytes: (Number) The maximum uncompressed file size of a batch of logs. This setting value must be between 5 MB and 1 GB, or 0 to disable it. Note that you cannot set a minimum file size; this means that log files may be much smaller than this batch size. This parameter is not available for jobs with edge as its kind.
            max_upload_interval_seconds: (Number) The maximum interval in seconds for log batches. This setting must be between 30 and 300 seconds (5 minutes), or 0 to disable it. Note that you cannot specify a minimum interval for log batches; this means that log files may be sent in shorter intervals than this. This parameter is only used for jobs with edge as its kind.
            max_upload_records: (Number) The maximum number of log lines per batch. This setting must be between 1000 and 1,000,000 lines, or 0 to disable it. Note that you cannot specify a minimum number of log lines per batch; this means that log files may contain many fewer lines than this. This parameter is not available for jobs with edge as its kind.
            name: (String) Optional human readable job name. Not unique. Cloudflare suggests that you set this to a meaningful string, like the domain name, to make it easier to identify your job.
            output_options: (Attributes) The structured replacement for logpull_options. When including this field, the logpull_option field will be ignored. (see below for nested schema)
            output_type: (String) Specifies the output type, such as ndjson or csv. This sets default values for the rest of the settings, depending on the chosen output type. Some formatting rules, like string quoting, are different between output types.
            ownership_challenge: (String) Ownership challenge token to prove destination ownership.
            record_delimiter: (String) String to be inserted in-between the records as separator.
            record_prefix: (String) String to be prepended before each record.
            record_suffix: (String) String to be appended after each record.
            record_template: (String) String to use as template for each record instead of the default comma-separated list. All fields used in the template must be present in field_names as well, otherwise they will end up as null. Format as a Go text/template without any standard functions, like conditionals, loops, sub-templates, etc.
            sample_rate: (Number) Floating number to specify sampling rate. Sampling is applied on top of filtering, and regardless of the current sample_interval of the data.
            timestamp_format: (String) String to specify the format for timestamps, such as unixnano, unix, or rfc3339.
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_logpush_job.example '<{accounts|zones}/{account_id|zone_id}>/<job_id>'
    cloudflare_logpush_ownership_challenge:
        subCategory: ""
        name: cloudflare_logpush_ownership_challenge
        title: cloudflare_logpush_ownership_challenge Resource - Cloudflare
        examples:
            - name: example_logpush_ownership_challenge
              manifest: |-
                {
                  "destination_conf": "s3://mybucket/logs?region=us-west-2",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            destination_conf: (String) Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.
            filename: (String)
            message: (String)
            valid: (Boolean)
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements: []
    cloudflare_magic_network_monitoring_configuration:
        subCategory: ""
        name: cloudflare_magic_network_monitoring_configuration
        title: cloudflare_magic_network_monitoring_configuration Resource - Cloudflare
        examples:
            - name: example_magic_network_monitoring_configuration
              manifest: |-
                {
                  "account_id": "6f91088a406011ed95aed352566e8d4c",
                  "default_sampling": 1,
                  "name": "cloudflare user's account",
                  "router_ips": [
                    "203.0.113.1"
                  ],
                  "warp_devices": [
                    {
                      "id": "5360368d-b351-4791-abe1-93550dabd351",
                      "name": "My warp device",
                      "router_ip": "203.0.113.1"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String)
            default_sampling: (Number) Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
            id: (String) Unique identifier for the warp device.
            name: (String) The account name.
            router_ip: (String) IPv4 CIDR of the router sourcing flow data associated with this warp device. Only /32 addresses are currently supported.
            router_ips: (List of String)
            warp_devices: (Attributes List) (see below for nested schema)
        importStatements: []
    cloudflare_magic_network_monitoring_rule:
        subCategory: ""
        name: cloudflare_magic_network_monitoring_rule
        title: cloudflare_magic_network_monitoring_rule Resource - Cloudflare
        examples:
            - name: example_magic_network_monitoring_rule
              manifest: |-
                {
                  "account_id": "6f91088a406011ed95aed352566e8d4c",
                  "automatic_advertisement": true,
                  "bandwidth": 1000,
                  "duration": "300s",
                  "name": "my_rule_1",
                  "packet_threshold": 10000,
                  "prefixes": [
                    "203.0.113.1/32"
                  ]
                }
        argumentDocs:
            account_id: (String)
            automatic_advertisement: (Boolean) Toggle on if you would like Cloudflare to automatically advertise the IP Prefixes within the rule via Magic Transit when the rule is triggered. Only available for users of Magic Transit.
            bandwidth: (Number) The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
            bandwidth_threshold: (Number) The number of bits per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
            duration: (String) The amount of time that the rule threshold must be exceeded to send an alert notification. The final value must be equivalent to one of the following 8 values ["1m","5m","10m","15m","20m","30m","45m","60m"]. The format is AhBmCsDmsEusFns where A, B, C, D, E and F durations are optional; however at least one unit must be provided.
            id: (String) The id of the rule. Must be unique.
            name: (String) The name of the rule. Must be unique. Supports characters A-Z, a-z, 0-9, underscore (_), dash (-), period (.), and tilde (~). You can’t have a space in the rule name. Max 256 characters.
            packet_threshold: (Number) The number of packets per second for the rule. When this value is exceeded for the set duration, an alert notification is sent. Minimum of 1 and no maximum.
            prefixes: (List of String)
        importStatements:
            - $ terraform import cloudflare_magic_network_monitoring_rule.example '<account_id>/<rule_id>'
    cloudflare_magic_transit_connector:
        subCategory: ""
        name: cloudflare_magic_transit_connector
        title: cloudflare_magic_transit_connector Resource - Cloudflare
        examples:
            - name: example_magic_transit_connector
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "activated": true,
                  "connector_id": "connector_id",
                  "interrupt_window_duration_hours": 0,
                  "interrupt_window_hour_of_day": 0,
                  "notes": "notes",
                  "timezone": "timezone"
                }
        argumentDocs:
            account_id: (String) Account identifier
            activated: (Boolean)
            connector_id: (String)
            device: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            interrupt_window_duration_hours: (Number)
            interrupt_window_hour_of_day: (Number)
            last_heartbeat: (String)
            last_seen_version: (String)
            last_updated: (String)
            notes: (String)
            serial_number: (String)
            timezone: (String)
        importStatements:
            - $ terraform import cloudflare_magic_transit_connector.example '<account_id>/<connector_id>'
    cloudflare_magic_transit_site:
        subCategory: ""
        name: cloudflare_magic_transit_site
        title: cloudflare_magic_transit_site Resource - Cloudflare
        examples:
            - name: example_magic_transit_site
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "connector_id": "ac60d3d0435248289d446cedd870bcf4",
                  "description": "description",
                  "ha_mode": true,
                  "location": {
                    "lat": "37.6192",
                    "lon": "122.3816"
                  },
                  "name": "site_1",
                  "secondary_connector_id": "8d67040d3835dbcf46ce29da440dc482"
                }
        argumentDocs:
            account_id: (String) Identifier
            connector_id: (String) Magic Connector identifier tag.
            description: (String)
            ha_mode: (Boolean) Site high availability mode. If set to true, the site can have two connectors and runs in high availability mode.
            id: (String) Identifier
            lat: (String) Latitude
            location: (Attributes) Location of site in latitude and longitude. (see below for nested schema)
            lon: (String) Longitude
            name: (String) The name of the site.
            secondary_connector_id: (String) Magic Connector identifier tag. Used when high availability mode is on.
        importStatements:
            - $ terraform import cloudflare_magic_transit_site.example '<account_id>/<site_id>'
    cloudflare_magic_transit_site_acl:
        subCategory: ""
        name: cloudflare_magic_transit_site_acl
        title: cloudflare_magic_transit_site_acl Resource - Cloudflare
        examples:
            - name: example_magic_transit_site_acl
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "description": "Allows local traffic between PIN pads and cash register.",
                  "forward_locally": true,
                  "lan_1": {
                    "lan_id": "lan_id",
                    "lan_name": "lan_name",
                    "port_ranges": [
                      "8080-9000"
                    ],
                    "ports": [
                      1
                    ],
                    "subnets": [
                      "192.0.2.1"
                    ]
                  },
                  "lan_2": {
                    "lan_id": "lan_id",
                    "lan_name": "lan_name",
                    "port_ranges": [
                      "8080-9000"
                    ],
                    "ports": [
                      1
                    ],
                    "subnets": [
                      "192.0.2.1"
                    ]
                  },
                  "name": "PIN Pad - Cash Register",
                  "protocols": [
                    "tcp"
                  ],
                  "site_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "unidirectional": true
                }
        argumentDocs:
            account_id: (String) Identifier
            description: (String) Description for the ACL.
            forward_locally: (Boolean) The desired forwarding action for this ACL policy. If set to "false", the policy will forward traffic to Cloudflare. If set to "true", the policy will forward traffic locally on the Magic Connector. If not included in request, will default to false.
            id: (String) Identifier
            lan_1: (Attributes) (see below for nested schema)
            lan_2: (Attributes) (see below for nested schema)
            lan_id: (String) The identifier for the LAN you want to create an ACL policy with.
            lan_name: (String) The name of the LAN based on the provided lan_id.
            name: (String) The name of the ACL.
            port_ranges: (List of String) Array of port ranges on the provided LAN that will be included in the ACL. If no ports or port rangess are provided, communication on any port on this LAN is allowed.
            ports: (List of Number) Array of ports on the provided LAN that will be included in the ACL. If no ports or port ranges are provided, communication on any port on this LAN is allowed.
            protocols: (List of String)
            site_id: (String) Identifier
            subnets: (List of String) Array of subnet IPs within the LAN that will be included in the ACL. If no subnets are provided, communication on any subnets on this LAN are allowed.
            unidirectional: (Boolean) The desired traffic direction for this ACL policy. If set to "false", the policy will allow bidirectional traffic. If set to "true", the policy will only allow traffic in one direction. If not included in request, will default to false.
        importStatements:
            - $ terraform import cloudflare_magic_transit_site_acl.example '<account_id>/<site_id>/<acl_id>'
    cloudflare_magic_transit_site_lan:
        subCategory: ""
        name: cloudflare_magic_transit_site_lan
        title: cloudflare_magic_transit_site_lan Resource - Cloudflare
        examples:
            - name: example_magic_transit_site_lan
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "ha_link": true,
                  "name": "name",
                  "nat": {
                    "static_prefix": "192.0.2.0/24"
                  },
                  "physport": 1,
                  "routed_subnets": [
                    {
                      "nat": {
                        "static_prefix": "192.0.2.0/24"
                      },
                      "next_hop": "192.0.2.1",
                      "prefix": "192.0.2.0/24"
                    }
                  ],
                  "site_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "static_addressing": {
                    "address": "192.0.2.0/24",
                    "dhcp_relay": {
                      "server_addresses": [
                        "192.0.2.1"
                      ]
                    },
                    "dhcp_server": {
                      "dhcp_pool_end": "192.0.2.1",
                      "dhcp_pool_start": "192.0.2.1",
                      "dns_server": "192.0.2.1",
                      "dns_servers": [
                        "192.0.2.1"
                      ],
                      "reservations": {
                        "00:11:22:33:44:55": "192.0.2.100",
                        "AA:BB:CC:DD:EE:FF": "192.168.1.101"
                      }
                    },
                    "secondary_address": "192.0.2.0/24",
                    "virtual_address": "192.0.2.0/24"
                  },
                  "vlan_tag": 0
                }
        argumentDocs:
            account_id: (String) Identifier
            address: (String) A valid CIDR notation representing an IP range.
            dhcp_pool_end: (String) A valid IPv4 address.
            dhcp_pool_start: (String) A valid IPv4 address.
            dhcp_relay: (Attributes) (see below for nested schema)
            dhcp_server: (Attributes) (see below for nested schema)
            dns_server: (String) A valid IPv4 address.
            dns_servers: (List of String)
            ha_link: (Boolean) mark true to use this LAN for HA probing. only works for site with HA turned on. only one LAN can be set as the ha_link.
            id: (String) Identifier
            name: (String)
            nat: (Attributes) (see below for nested schema)
            next_hop: (String) A valid IPv4 address.
            physport: (Number)
            prefix: (String) A valid CIDR notation representing an IP range.
            reservations: (Map of String) Mapping of MAC addresses to IP addresses
            routed_subnets: (Attributes List) (see below for nested schema)
            secondary_address: (String) A valid CIDR notation representing an IP range.
            server_addresses: (List of String) List of DHCP server IPs.
            site_id: (String) Identifier
            static_addressing: (Attributes) If the site is not configured in high availability mode, this configuration is optional (if omitted, use DHCP). However, if in high availability mode, static_address is required along with secondary and virtual address. (see below for nested schema)
            static_prefix: (String) A valid CIDR notation representing an IP range.
            virtual_address: (String) A valid CIDR notation representing an IP range.
            vlan_tag: (Number) VLAN port number.
        importStatements:
            - $ terraform import cloudflare_magic_transit_site_lan.example '<account_id>/<site_id>/<lan_id>'
    cloudflare_magic_transit_site_wan:
        subCategory: ""
        name: cloudflare_magic_transit_site_wan
        title: cloudflare_magic_transit_site_wan Resource - Cloudflare
        examples:
            - name: example_magic_transit_site_wan
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "name",
                  "physport": 1,
                  "priority": 0,
                  "site_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "static_addressing": {
                    "address": "192.0.2.0/24",
                    "gateway_address": "192.0.2.1",
                    "secondary_address": "192.0.2.0/24"
                  },
                  "vlan_tag": 0
                }
        argumentDocs:
            account_id: (String) Identifier
            address: (String) A valid CIDR notation representing an IP range.
            gateway_address: (String) A valid IPv4 address.
            health_check_rate: (String) Magic WAN health check rate for tunnels created on this link. The default value is mid.
            id: (String) Identifier
            name: (String)
            physport: (Number)
            priority: (Number)
            secondary_address: (String) A valid CIDR notation representing an IP range.
            site_id: (String) Identifier
            static_addressing: (Attributes) (optional) if omitted, use DHCP. Submit secondary_address when site is in high availability mode. (see below for nested schema)
            vlan_tag: (Number) VLAN port number.
        importStatements:
            - $ terraform import cloudflare_magic_transit_site_wan.example '<account_id>/<site_id>/<wan_id>'
    cloudflare_magic_wan_gre_tunnel:
        subCategory: ""
        name: cloudflare_magic_wan_gre_tunnel
        title: cloudflare_magic_wan_gre_tunnel Resource - Cloudflare
        examples:
            - name: example_magic_wan_gre_tunnel
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            account_id: (String) Identifier
            cloudflare_gre_endpoint: (String) The IP address assigned to the Cloudflare side of the GRE tunnel.
            created_on: (String) The date and time the tunnel was created.
            customer_gre_endpoint: (String) The IP address assigned to the customer side of the GRE tunnel.
            description: (String) An optional description of the GRE tunnel.
            direction: (String) The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.
            effective: (String) The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.
            enabled: (Boolean) Determines whether to run healthchecks for a tunnel.
            gre_tunnel: (Attributes) (see below for nested schema)
            gre_tunnel_id: (String) Identifier
            gre_tunnels: (Attributes List) (see below for nested schema)
            health_check: (Attributes) (see below for nested schema)
            id: (String) Tunnel identifier tag.
            interface_address: '(String) A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.'
            modified: (Boolean)
            modified_gre_tunnel: (Attributes) (see below for nested schema)
            modified_on: (String) The date and time the tunnel was last modified.
            mtu: (Number) Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. The minimum value is 576.
            name: (String) The name of the tunnel. The name cannot contain spaces or special characters, must be 15 characters or less, and cannot share a name with another GRE tunnel.
            rate: (String) How frequent the health check is run. The default value is mid.
            saved: (String) The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.
            target: (Attributes) The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to customer_gre_endpoint address. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false. (see below for nested schema)
            ttl: (Number) Time To Live (TTL) in number of hops of the GRE tunnel.
            type: (String) The type of healthcheck to run, reply or request. The default value is reply.
        importStatements: []
    cloudflare_magic_wan_ipsec_tunnel:
        subCategory: ""
        name: cloudflare_magic_wan_ipsec_tunnel
        title: cloudflare_magic_wan_ipsec_tunnel Resource - Cloudflare
        examples:
            - name: example_magic_wan_ipsec_tunnel
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "cloudflare_endpoint": "203.0.113.1",
                  "customer_endpoint": "203.0.113.1",
                  "description": "Tunnel for ISP X",
                  "health_check": {
                    "direction": "unidirectional",
                    "enabled": true,
                    "rate": "low",
                    "target": {
                      "saved": "203.0.113.1"
                    },
                    "type": "reply"
                  },
                  "interface_address": "192.0.2.0/31",
                  "name": "IPsec_1",
                  "psk": "O3bwKSjnaoCxDoUxjcq4Rk8ZKkezQUiy",
                  "replay_protection": false
                }
        argumentDocs:
            account_id: (String) Identifier
            allow_null_cipher: (Boolean) When true, the tunnel can use a null-cipher (ENCR_NULL) in the ESP tunnel (Phase 2).
            cloudflare_endpoint: (String) The IP address assigned to the Cloudflare side of the IPsec tunnel.
            created_on: (String) The date and time the tunnel was created.
            customer_endpoint: (String) The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
            description: (String) An optional description forthe IPsec tunnel.
            direction: (String) The direction of the flow of the healthcheck. Either unidirectional, where the probe comes to you via the tunnel and the result comes back to Cloudflare via the open Internet, or bidirectional where both the probe and result come and go via the tunnel.
            effective: (String) The effective health check target. If 'saved' is empty, then this field will be populated with the calculated default value on GET requests. Ignored in POST, PUT, and PATCH requests.
            enabled: (Boolean) Determines whether to run healthchecks for a tunnel.
            health_check: (Attributes) (see below for nested schema)
            id: (String) Tunnel identifier tag.
            interface_address: '(String) A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.'
            ipsec_tunnel: (Attributes) (see below for nested schema)
            ipsec_tunnel_id: (String) Identifier
            ipsec_tunnels: (Attributes List) (see below for nested schema)
            last_generated_on: (String) The date and time the tunnel was last modified.
            modified: (Boolean)
            modified_ipsec_tunnel: (Attributes) (see below for nested schema)
            modified_on: (String) The date and time the tunnel was last modified.
            name: (String) The name of the IPsec tunnel. The name cannot share a name with other tunnels.
            psk: (String) A randomly generated or provided string for use in the IPsec tunnel.
            psk_metadata: (Attributes) The PSK metadata that includes when the PSK was generated. (see below for nested schema)
            rate: (String) How frequent the health check is run. The default value is mid.
            replay_protection: (Boolean) If true, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
            saved: (String) The saved health check target. Setting the value to the empty string indicates that the calculated default value will be used.
            target: (Attributes) The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to customer_gre_endpoint address. This field is ignored for bidirectional healthchecks as the interface_address (not assigned to the Cloudflare side of the tunnel) is used as the target. Must be in object form if the x-magic-new-hc-target header is set to true and string form if x-magic-new-hc-target is absent or set to false. (see below for nested schema)
            type: (String) The type of healthcheck to run, reply or request. The default value is reply.
        importStatements: []
    cloudflare_magic_wan_static_route:
        subCategory: ""
        name: cloudflare_magic_wan_static_route
        title: cloudflare_magic_wan_static_route Resource - Cloudflare
        examples:
            - name: example_magic_wan_static_route
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            account_id: (String) Identifier
            colo_names: (List of String) List of colo names for the ECMP scope.
            colo_regions: (List of String) List of colo regions for the ECMP scope.
            created_on: (String) When the route was created.
            description: (String) An optional human provided description of the static route.
            id: (String) Identifier
            modified: (Boolean)
            modified_on: (String) When the route was last modified.
            modified_route: (Attributes) (see below for nested schema)
            nexthop: (String) The next-hop IP Address for the static route.
            prefix: (String) IP Prefix in Classless Inter-Domain Routing format.
            priority: (Number) Priority of the static route.
            route: (Attributes) (see below for nested schema)
            route_id: (String) Identifier
            routes: (Attributes List) (see below for nested schema)
            scope: (Attributes) Used only for ECMP routes. (see below for nested schema)
            weight: (Number) Optional weight of the ECMP scope - if provided.
        importStatements: []
    cloudflare_managed_transforms:
        subCategory: ""
        name: cloudflare_managed_transforms
        title: cloudflare_managed_transforms Resource - Cloudflare
        examples:
            - name: example_managed_transforms
              manifest: |-
                {
                  "managed_request_headers": [
                    {
                      "enabled": true,
                      "id": "add_bot_protection_headers"
                    }
                  ],
                  "managed_response_headers": [
                    {
                      "enabled": true,
                      "id": "add_security_headers"
                    }
                  ],
                  "zone_id": "9f1839b6152d298aca64c4e906b6d074"
                }
        argumentDocs:
            conflicts_with: (List of String) The Managed Transforms that this Managed Transform conflicts with.
            enabled: (Boolean) Whether the Managed Transform is enabled.
            has_conflict: (Boolean) Whether the Managed Transform conflicts with the currently-enabled Managed Transforms.
            id: (String) The unique ID of the zone.
            managed_request_headers: (Attributes List) The list of Managed Request Transforms. (see below for nested schema)
            managed_response_headers: (Attributes List) The list of Managed Response Transforms. (see below for nested schema)
            zone_id: (String) The unique ID of the zone.
        importStatements:
            - $ terraform import cloudflare_managed_transforms.example '<zone_id>'
    cloudflare_mtls_certificate:
        subCategory: ""
        name: cloudflare_mtls_certificate
        title: cloudflare_mtls_certificate Resource - Cloudflare
        examples:
            - name: example_mtls_certificate
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "ca": true,
                  "certificates": "  -----BEGIN CERTIFICATE-----\n  MIIDmDCCAoCgAwIBAgIUKTOAZNjcXVZRj4oQt0SHsl1c1vMwDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVVMxFjAUBgNVBAgMDVNhbiBGcmFuY2lzY28xEzARBgNVBAcMCkNhbGlmb3JuaWExFTATBgNVBAoMDEV4YW1wbGUgSW5jLjAgFw0yMjExMjIxNjU5NDdaGA8yMTIyMTAyOTE2NTk0N1owUTELMAkGA1UEBhMCVVMxFjAUBgNVBAgMDVNhbiBGcmFuY2lzY28xEzARBgNVBAcMCkNhbGlmb3JuaWExFTATBgNVBAoMDEV4YW1wbGUgSW5jLjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMRcORwgJFTdcG/2GKI+cFYiOBNDKjCZUXEOvXWY42BkH9wxiMT869CO+enA1w5pIrXow6kCM1sQspHHaVmJUlotEMJxyoLFfA/8Kt1EKFyobOjuZs2SwyVyJ2sStvQuUQEosULZCNGZEqoH5g6zhMPxaxm7ZLrrsDZ9maNGVqo7EWLWHrZ57Q/5MtTrbxQL+eXjUmJ9K3kS+3uEwMdqR6Z3BluU1ivanpPc1CN2GNhdO0/hSY4YkGEnuLsqJyDd3cIiB1MxuCBJ4ZaqOd2viV1WcP3oU3dxVPm4MWyfYIldMWB14FahScxLhWdRnM9YZ/i9IFcLypXsuz7DjrJPtPUCAwEAAaNmMGQwHQYDVR0OBBYEFP5JzLUawNF+c3AXsYTEWHh7z2czMB8GA1UdIwQYMBaAFP5JzLUawNF+c3AXsYTEWHh7z2czMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMA0GCSqGSIb3DQEBCwUAA4IBAQBc+Be7NDhpE09y7hLPZGRPl1cSKBw4RI0XIv6rlbSTFs5EebpTGjhx/whNxwEZhB9HZ7111Oa1YlT8xkI9DshB78mjAHCKBAJ76moK8tkG0aqdYpJ4ZcJTVBB7l98Rvgc7zfTii7WemTy72deBbSeiEtXavm4EF0mWjHhQ5Nxpnp00Bqn5g1x8CyTDypgmugnep+xG+iFzNmTdsz7WI9T/7kDMXqB7M/FPWBORyS98OJqNDswCLF8bIZYwUBEe+bRHFomoShMzaC3tvim7WCb16noDkSTMlfKO4pnvKhpcVdSgwcruATV7y+W+Lvmz2OT/Gui4JhqeoTewsxndhDDE\n  -----END CERTIFICATE-----\n",
                  "name": "example_ca_cert",
                  "private_key": "  -----BEGIN PRIVATE KEY-----\n  MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDEXDkcICRU3XBv9hiiPnBWIjgTQyowmVFxDr11mONgZB/cMYjE/OvQjvnpwNcOaSK16MOpAjNbELKRx2lZiVJaLRDCccqCxXwP/CrdRChcqGzo7mbNksMlcidrErb0LlEBKLFC2QjRmRKqB+YOs4TD8WsZu2S667A2fZmjRlaqOxFi1h62ee0P+TLU628UC/nl41JifSt5Evt7hMDHakemdwZblNYr2p6T3NQjdhjYXTtP4UmOGJBhJ7i7Kicg3d3CIgdTMbggSeGWqjndr4ldVnD96FN3cVT5uDFsn2CJXTFgdeBWoUnMS4VnUZzPWGf4vSBXC8qV7Ls+w46yT7T1AgMBAAECggEAQZnp/oqCeNPOR6l5S2L+1tfx0gWjZ78hJVteUpZ0iHSK7F6kKeOxyOird7vUXV0kmo+cJq+0hp0Ke4eam640FCpwKfYoSQ4/R3vgujGWJnaihCN5tv5sMet0XeJPuz5qE7ALoKCvwI6aXLHs20aAeZIDTQJ9QbGSGnJVzOWn+JDTidIgZpN57RpXfSAwnJPTQK/PN8i5z108hsaDOdEgGmxYZ7kYqMqzX20KXmth58LDfPixs5JGtS60iiKC/wOcGzkB2/AdTSojR76oEU77cANP/3zO25NG//whUdYlW0t0d7PgXxIeJe+xgYnamDQJx3qonVyt4H77ha0ObRAj9QKBgQDicZr+VTwFMnELP3a+FXGnjehRiuS1i7MXGKxNweCD+dFlML0FplSQS8Ro2n+d8lu8BBXGx0qm6VXu8Rhn7TAUL6q+PCgfarzxfIhacb/TZCqfieIHsMlVBfhV5HCXnk+kis0tuC/PRArcWTwDHJUJXkBhvkUsNswvQzavDPI7KwKBgQDd/WgLkj7A3X5fgIHZH/GbDSBiXwzKb+rF4ZCT2XFgG/OAW7vapfcX/w+v+5lBLyrocmOAS3PGGAhM5T3HLnUCQfnK4qgps1Lqibkc9Tmnsn60LanUjuUMsYv/zSw70tozbzhJ0pioEpWfRxRZBztO2Rr8Ntm7h6Fk701EXGNAXwKBgQCD1xsjy2J3sCerIdcz0u5qXLAPkeuZW+34m4/ucdwTWwc0gEz9lhsULFj9p4G351zLuiEnq+7mAWLcDJlmIO3mQt6JhiLiL9Y0T4pgBmxmWqKKYtAsJB0EmMY+1BNN44mBRqMxZFTJu1cLdhT/xstrOeoIPqytknYNanfTMZlzIwKBgHrLXe5oq0XMP8dcMneEcAUwsaU4pr6kQd3L9EmUkl5zl7J9C+DaxWAEuwzBw/iGutlxzRB+rD/7szu14wJ29EqXbDGKRzMp+se5/yfBjm7xEZ1hVPw7PwBShfqt57X/4Ktq7lwHnmH6RcGhc+P7WBc5iO/S94YAdIp8xOT3pf9JAoGAE0QkqJUY+5Mgr+fBO0VNV72ZoPveGpW+De59uhKAOnu1zljQCUtk59m6+DXfm0tNYKtawa5n8iN71Zh+s62xXSt3pYi1Y5CCCmv8Y4BhwIcPwXKk3zEvLgSHVTpC0bayA9aSO4bbZgVXa5w+Z0w/vvfp9DWo1IS3EnQRrz6WMYA=\n  -----END PRIVATE KEY-----\n"
                }
        argumentDocs:
            account_id: (String) Identifier
            ca: (Boolean) Indicates whether the certificate is a CA or leaf certificate.
            certificates: (String) The uploaded root CA certificate.
            expires_on: (String) When the certificate expires.
            id: (String) Identifier
            issuer: (String) The certificate authority that issued the certificate.
            name: (String) Optional unique name for the certificate. Only used for human readability.
            private_key: (String) The private key for the certificate
            serial_number: (String) The certificate serial number.
            signature: (String) The type of hash used for the certificate.
            updated_at: (String) This is the time the certificate was updated.
            uploaded_on: (String) This is the time the certificate was uploaded.
        importStatements:
            - $ terraform import cloudflare_mtls_certificate.example '<account_id>/<mtls_certificate_id>'
    cloudflare_notification_policy:
        subCategory: ""
        name: cloudflare_notification_policy
        title: cloudflare_notification_policy Resource - Cloudflare
        examples:
            - name: example_notification_policy
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "alert_interval": "30m",
                  "alert_type": "access_custom_certificate_expiration_type",
                  "description": "Something describing the policy.",
                  "enabled": true,
                  "filters": {
                    "actions": [
                      "string"
                    ],
                    "affected_asns": [
                      "string"
                    ],
                    "affected_components": [
                      "string"
                    ],
                    "affected_locations": [
                      "string"
                    ],
                    "airport_code": [
                      "string"
                    ],
                    "alert_trigger_preferences": [
                      "string"
                    ],
                    "alert_trigger_preferences_value": [
                      "string"
                    ],
                    "enabled": [
                      "string"
                    ],
                    "environment": [
                      "string"
                    ],
                    "event": [
                      "string"
                    ],
                    "event_source": [
                      "string"
                    ],
                    "event_type": [
                      "string"
                    ],
                    "group_by": [
                      "string"
                    ],
                    "health_check_id": [
                      "string"
                    ],
                    "incident_impact": [
                      "INCIDENT_IMPACT_NONE"
                    ],
                    "input_id": [
                      "string"
                    ],
                    "insight_class": [
                      "string"
                    ],
                    "limit": [
                      "string"
                    ],
                    "logo_tag": [
                      "string"
                    ],
                    "megabits_per_second": [
                      "string"
                    ],
                    "new_health": [
                      "string"
                    ],
                    "new_status": [
                      "string"
                    ],
                    "packets_per_second": [
                      "string"
                    ],
                    "pool_id": [
                      "string"
                    ],
                    "pop_names": [
                      "string"
                    ],
                    "product": [
                      "string"
                    ],
                    "project_id": [
                      "string"
                    ],
                    "protocol": [
                      "string"
                    ],
                    "query_tag": [
                      "string"
                    ],
                    "requests_per_second": [
                      "string"
                    ],
                    "selectors": [
                      "string"
                    ],
                    "services": [
                      "string"
                    ],
                    "slo": [
                      "99.9"
                    ],
                    "status": [
                      "string"
                    ],
                    "target_hostname": [
                      "string"
                    ],
                    "target_ip": [
                      "string"
                    ],
                    "target_zone_name": [
                      "string"
                    ],
                    "traffic_exclusions": [
                      "security_events"
                    ],
                    "tunnel_id": [
                      "string"
                    ],
                    "tunnel_name": [
                      "string"
                    ],
                    "where": [
                      "string"
                    ],
                    "zones": [
                      "string"
                    ]
                  },
                  "mechanisms": {
                    "email": [
                      {
                        "id": "test@example.com"
                      }
                    ],
                    "pagerduty": [
                      {}
                    ],
                    "webhooks": [
                      {}
                    ]
                  },
                  "name": "SSL Notification Event Policy"
                }
        argumentDocs:
            account_id: (String) The account id
            actions: (List of String) Usage depends on specific alert type
            affected_asns: (List of String) Used for configuring radar_notification
            affected_components: (List of String) Used for configuring incident_alert
            affected_locations: (List of String) Used for configuring radar_notification
            airport_code: (List of String) Used for configuring maintenance_event_notification
            alert_interval: (String) Optional specification of how often to re-alert from the same incident, not support on all alert types.
            alert_trigger_preferences: (List of String) Usage depends on specific alert type
            alert_trigger_preferences_value: (List of String) Usage depends on specific alert type
            alert_type: (String) Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.
            created: (String)
            description: (String) Optional description for the Notification policy.
            email: (Attributes List) (see below for nested schema)
            enabled: (Boolean) Whether or not the Notification policy is enabled.
            environment: (List of String) Used for configuring pages_event_alert
            event: (List of String) Used for configuring pages_event_alert
            event_source: (List of String) Used for configuring load_balancing_health_alert
            event_type: (List of String) Usage depends on specific alert type
            filters: (Attributes) Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details. (see below for nested schema)
            group_by: (List of String) Usage depends on specific alert type
            health_check_id: (List of String) Used for configuring health_check_status_notification
            id: (String) UUID
            incident_impact: (List of String) Used for configuring incident_alert
            input_id: (List of String) Used for configuring stream_live_notifications
            insight_class: (List of String) Used for configuring security_insights_alert
            limit: (List of String) Used for configuring billing_usage_alert
            logo_tag: (List of String) Used for configuring logo_match_alert
            mechanisms: (Attributes) List of IDs that will be used when dispatching a notification. IDs for email type will be the email address. (see below for nested schema)
            megabits_per_second: (List of String) Used for configuring advanced_ddos_attack_l4_alert
            modified: (String)
            name: (String) Name of the policy.
            new_health: (List of String) Used for configuring load_balancing_health_alert
            new_status: (List of String) Used for configuring tunnel_health_event
            packets_per_second: (List of String) Used for configuring advanced_ddos_attack_l4_alert
            pagerduty: (Attributes List) (see below for nested schema)
            pool_id: (List of String) Usage depends on specific alert type
            pop_names: (List of String) Usage depends on specific alert type
            product: (List of String) Used for configuring billing_usage_alert
            project_id: (List of String) Used for configuring pages_event_alert
            protocol: (List of String) Used for configuring advanced_ddos_attack_l4_alert
            query_tag: (List of String) Usage depends on specific alert type
            requests_per_second: (List of String) Used for configuring advanced_ddos_attack_l7_alert
            selectors: (List of String) Usage depends on specific alert type
            services: (List of String) Used for configuring clickhouse_alert_fw_ent_anomaly
            slo: (List of String) Usage depends on specific alert type
            status: (List of String) Used for configuring health_check_status_notification
            target_hostname: (List of String) Used for configuring advanced_ddos_attack_l7_alert
            target_ip: (List of String) Used for configuring advanced_ddos_attack_l4_alert
            target_zone_name: (List of String) Used for configuring advanced_ddos_attack_l7_alert
            traffic_exclusions: (List of String) Used for configuring traffic_anomalies_alert
            tunnel_id: (List of String) Used for configuring tunnel_health_event
            tunnel_name: (List of String) Usage depends on specific alert type
            webhooks: (Attributes List) (see below for nested schema)
            where: (List of String) Usage depends on specific alert type
            zones: (List of String) Usage depends on specific alert type
        importStatements:
            - $ terraform import cloudflare_notification_policy.example '<account_id>/<policy_id>'
    cloudflare_notification_policy_webhooks:
        subCategory: ""
        name: cloudflare_notification_policy_webhooks
        title: cloudflare_notification_policy_webhooks Resource - Cloudflare
        examples:
            - name: example_notification_policy_webhooks
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "Slack Webhook",
                  "secret": "secret",
                  "url": "https://hooks.slack.com/services/Ds3fdBFbV/456464Gdd"
                }
        argumentDocs:
            account_id: (String) The account id
            created_at: (String) Timestamp of when the webhook destination was created.
            id: (String) UUID
            last_failure: (String) Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
            last_success: (String) Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
            name: (String) The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
            secret: (String) Optional secret that will be passed in the cf-webhook-auth header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
            type: (String) Type of webhook endpoint.
            url: (String) The POST endpoint to call when dispatching a notification.
        importStatements:
            - $ terraform import cloudflare_notification_policy_webhooks.example '<account_id>/<webhook_id>'
    cloudflare_observatory_scheduled_test:
        subCategory: ""
        name: cloudflare_observatory_scheduled_test
        title: cloudflare_observatory_scheduled_test Resource - Cloudflare
        examples:
            - name: example_observatory_scheduled_test
              manifest: |-
                {
                  "url": "example.com",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            cls: (Number) Cumulative Layout Shift.
            code: (String) The error code of the Lighthouse result.
            date: (String)
            desktop_report: (Attributes) The Lighthouse report. (see below for nested schema)
            detail: (String) Detailed error message.
            device_type: (String) The type of device.
            error: (Attributes) (see below for nested schema)
            fcp: (Number) First Contentful Paint.
            final_displayed_url: (String) The final URL displayed to the user.
            frequency: (String) The frequency of the test.
            id: (String) A URL.
            json_report_url: (String) The URL to the full Lighthouse JSON report.
            label: (String)
            lcp: (Number) Largest Contentful Paint.
            mobile_report: (Attributes) The Lighthouse report. (see below for nested schema)
            performance_score: (Number) The Lighthouse performance score.
            region: (String) A test region.
            schedule: (Attributes) The test schedule. (see below for nested schema)
            schedule_frequency: (String) The frequency of the test.
            si: (Number) Speed Index.
            state: (String) The state of the Lighthouse report.
            tbt: (Number) Total Blocking Time.
            test: (Attributes) (see below for nested schema)
            ttfb: (Number) Time To First Byte.
            tti: (Number) Time To Interactive.
            url: (String) A URL.
            value: (String) A test region.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_observatory_scheduled_test.example '<zone_id>/<url>'
    cloudflare_origin_ca_certificate:
        subCategory: ""
        name: cloudflare_origin_ca_certificate
        title: cloudflare_origin_ca_certificate Resource - Cloudflare
        examples:
            - name: example_origin_ca_certificate
              manifest: |-
                {
                  "csr": "  -----BEGIN CERTIFICATE REQUEST-----\n  MIICxzCCAa8CAQAwSDELMAkGA1UEBhMCVVMxFjAUBgNVBAgTDVNhbiBGcmFuY2lz\n  Y28xCzAJBgNVBAcTAkNBMRQwEgYDVQQDEwtleGFtcGxlLm5ldDCCASIwDQYJKoZI\n  hvcNAQEBBQADggEPADCCAQoCggEBALxejtu4b+jPdFeFi6OUsye8TYJQBm3WfCvL\n  Hu5EvijMO/4Z2TImwASbwUF7Ir8OLgH+mGlQZeqyNvGoSOMEaZVXcYfpR1hlVak8\n  4GGVr+04IGfOCqaBokaBFIwzclGZbzKmLGwIQioNxGfqFm6RGYGA3be2Je2iseBc\n  N8GV1wYmvYE0RR+yWweJCTJ157exyRzu7sVxaEW9F87zBQLyOnwXc64rflXslRqi\n  g7F7w5IaQYOl8yvmk/jEPCAha7fkiUfEpj4N12+oPRiMvleJF98chxjD4MH39c5I\n  uOslULhrWunfh7GB1jwWNA9y44H0snrf+xvoy2TcHmxvma9Eln8CAwEAAaA6MDgG\n  CSqGSIb3DQEJDjErMCkwJwYDVR0RBCAwHoILZXhhbXBsZS5uZXSCD3d3dy5leGFt\n  cGxlLm5ldDANBgkqhkiG9w0BAQsFAAOCAQEAcBaX6dOnI8ncARrI9ZSF2AJX+8mx\n  pTHY2+Y2C0VvrVDGMtbBRH8R9yMbqWtlxeeNGf//LeMkSKSFa4kbpdx226lfui8/\n  auRDBTJGx2R1ccUxmLZXx4my0W5iIMxunu+kez+BDlu7bTT2io0uXMRHue4i6quH\n  yc5ibxvbJMjR7dqbcanVE10/34oprzXQsJ/VmSuZNXtjbtSKDlmcpw6To/eeAJ+J\n  hXykcUihvHyG4A1m2R6qpANBjnA0pHexfwM/SgfzvpbvUg0T1ubmer8BgTwCKIWs\n  dcWYTthM51JIqRBfNqy4QcBnX+GY05yltEEswQI55wdiS3CjTTA67sdbcQ==\n  -----END CERTIFICATE REQUEST-----\n",
                  "hostnames": [
                    "example.com",
                    "*.example.com"
                  ],
                  "request_type": "origin-rsa",
                  "requested_validity": 7
                }
        argumentDocs:
            certificate: (String) The Origin CA certificate. Will be newline-encoded.
            csr: (String) The Certificate Signing Request (CSR). Must be newline-encoded.
            expires_on: (String) When the certificate will expire.
            hostnames: (List of String) Array of hostnames or wildcard names (e.g., *.example.com) bound to the certificate.
            id: (String) Identifier
            request_type: (String) Signature type desired on certificate ("origin-rsa" (rsa), "origin-ecc" (ecdsa), or "keyless-certificate" (for Keyless SSL servers).
            requested_validity: (Number) The number of days for which the certificate should be valid.
        importStatements:
            - $ terraform import cloudflare_origin_ca_certificate.example '<certificate_id>'
    cloudflare_page_rule:
        subCategory: ""
        description: Provides a Cloudflare page rule resource.
        name: cloudflare_page_rule
        title: cloudflare_page_rule
        examples:
            - name: foobar
              manifest: |-
                {
                  "actions": [
                    {
                      "email_obfuscation": "on",
                      "minify": [
                        {
                          "css": "on",
                          "html": "off",
                          "js": "on"
                        }
                      ],
                      "ssl": "flexible"
                    }
                  ],
                  "priority": 1,
                  "target": "sub.${var.cloudflare_zone}/page",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: foobar
              manifest: |-
                {
                  "actions": [
                    {
                      "cache_key_fields": [
                        {
                          "cookie": [
                            {}
                          ],
                          "header": [
                            {
                              "exclude": [
                                "origin"
                              ]
                            }
                          ],
                          "host": [
                            {}
                          ],
                          "query_string": [
                            {
                              "exclude": [
                                "api_token"
                              ]
                            }
                          ],
                          "user": [
                            {
                              "lang": true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "priority": 1,
                  "target": "embed.${var.cloudflare_zone}/*.js",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: foobar
              manifest: |-
                {
                  "actions": [
                    {
                      "cache_key_fields": [
                        {
                          "cookie": [
                            {
                              "check_presence": [
                                "wordpress_test_cookie"
                              ]
                            }
                          ],
                          "header": [
                            {
                              "check_presence": [
                                "header_present"
                              ],
                              "exclude": [
                                "origin"
                              ],
                              "include": [
                                "api-key",
                                "dnt"
                              ]
                            }
                          ],
                          "host": [
                            {
                              "resolved": true
                            }
                          ],
                          "query_string": [
                            {
                              "ignore": true
                            }
                          ],
                          "user": [
                            {
                              "device_type": false,
                              "geo": true,
                              "lang": true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "priority": 1,
                  "target": "${var.cloudflare_zone}/app/*",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
            - name: test
              manifest: |-
                {
                  "actions": [
                    {
                      "cache_ttl_by_status": [
                        {
                          "codes": "200-299",
                          "ttl": 300
                        },
                        {
                          "codes": "300-399",
                          "ttl": 60
                        },
                        {
                          "codes": "400-403",
                          "ttl": -1
                        },
                        {
                          "codes": "404",
                          "ttl": 30
                        },
                        {
                          "codes": "405-499",
                          "ttl": -1
                        },
                        {
                          "codes": "500-599",
                          "ttl": 0
                        }
                      ]
                    }
                  ],
                  "priority": 1,
                  "target": "${var.cloudflare_zone}/app/*",
                  "zone_id": "${var.cloudflare_zone_id}"
                }
              references:
                zone_id: var.cloudflare_zone_id
        argumentDocs:
            "-1": '- sets no-store, never save to cache'
            "0": '- sets no-cache, saved to cache, but expired immediately (revalidate from origin every time)'
            actions: '- (Required) The actions taken by the page rule, options given below.'
            always_use_https: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            automatic_https_rewrites: '- (Optional) Whether this action is "on" or "off".'
            browser_cache_ttl: '- (Optional) The Time To Live for the browser cache. 0 means ''Respect Existing Headers'''
            browser_check: '- (Optional) Whether this action is "on" or "off".'
            bypass_cache_on_cookie: '- (Optional) String value of cookie name to conditionally bypass cache the page.'
            cache_by_device_type: '- (Optional) Whether this action is "on" or "off".'
            cache_deception_armor: '- (Optional) Whether this action is "on" or "off".'
            cache_key_fields: '- (Optional) Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.'
            cache_level: '- (Optional) Whether to set the cache level to "bypass", "basic", "simplified", "aggressive", or "cache_everything".'
            cache_on_cookie: '- (Optional) String value of cookie name to conditionally cache the page.'
            cache_ttl_by_status: '- (Optional) Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.'
            check_presence: '- (Optional, Array) Check for presence of specified cookies, without including their actual values.'
            codes: '- (Required) A HTTP code (e.g. 404) or range of codes (e.g. 400-499)'
            cookie: '- (Optional) Controls what cookies go into Cache Key:'
            css: '- (Required) Whether CSS should be minified. Valid values are "on" or "off".'
            device_type: '- (Optional, Boolean) true - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to false.'
            disable_apps: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_performance: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_railgun: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_security: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            disable_zaraz: '- (Optional) Boolean of whether this action is enabled. Default: false.'
            edge_cache_ttl: '- (Optional) The Time To Live for the edge cache.'
            email_obfuscation: '- (Optional) Whether this action is "on" or "off".'
            exclude: '- (Optional, Array) Exclude these HTTP headers from Cache Key. Currently, only the Origin header can be excluded.'
            explicit_cache_control: '- (Optional) Whether origin Cache-Control action is "on" or "off".'
            forwarding_url: '- (Optional) The URL to forward to, and with what status. See below.'
            geo: '- (Optional, Boolean) true - includes the client’s country, derived from the IP address; defaults to false.'
            header: '- (Optional) Controls what HTTP headers go into Cache Key:'
            host: '- (Required, but allowed to be empty) Controls which Host header goes into Cache Key:'
            host_header_override: '- (Optional) Value of the Host header to send.'
            html: '- (Required) Whether HTML should be minified. Valid values are "on" or "off".'
            id: '- The page rule ID.'
            ignore: '- (Optional, Boolean) false (default) - all query string parameters are used for Cache Key, unless explicitly excluded; true - all query string parameters are ignored; value should be false if any of exclude or include is non-empty.'
            include: '- (Optional, Array) Use values of specified cookies in Cache Key.'
            ip_geolocation: '- (Optional) Whether this action is "on" or "off".'
            js: '- (Required) Whether Javascript should be minified. Valid values are "on" or "off".'
            lang: '- (Optional, Boolean) true - includes the first language code contained in the Accept-Language header sent by the client; defaults to false.'
            minify: '- (Optional) The configuration for HTML, CSS and JS minification. See below for full list of options.'
            mirage: '- (Optional) Whether this action is "on" or "off".'
            opportunistic_encryption: '- (Optional) Whether this action is "on" or "off".'
            origin_error_page_pass_thru: '- (Optional) Whether this action is "on" or "off".'
            polish: '- (Optional) Whether this action is "off", "lossless" or "lossy".'
            priority: '- (Optional) The priority of the page rule among others for this target, the higher the number the higher the priority as per API documentation.'
            query_string: '- (Required, but allowed to be empty) Controls which URL query string parameters go into the Cache Key.'
            resolve_override: '- (Optional) Overridden origin server name.'
            resolved: '- (Optional, Boolean) false (default) - includes the Host header in the HTTP request sent to the origin; true - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).'
            respect_strong_etag: '- (Optional) Whether this action is "on" or "off".'
            response_buffering: '- (Optional) Whether this action is "on" or "off".'
            rocket_loader: '- (Optional) Whether to set the rocket loader to "on", "off".'
            security_level: '- (Optional) Whether to set the security level to "off", "essentially_off", "low", "medium", "high", or "under_attack".'
            server_side_exclude: '- (Optional) Whether this action is "on" or "off".'
            smart_errors: '- (Optional) Whether this action is "on" or "off".'
            sort_query_string_for_cache: '- (Optional) Whether this action is "on" or "off".'
            ssl: '- (Optional) Whether to set the SSL mode to "off", "flexible", "full", "strict", or "origin_pull".'
            status: '- (Optional) Whether the page rule is active or disabled.'
            status_code: '- (Required) The status code to use for the redirection.'
            target: '- (Required) The URL pattern to target with the page rule.'
            true_client_ip_header: '- (Optional) Whether this action is "on" or "off".'
            ttl: '- (Required) Duration a resource lives in the Cloudflare cache.'
            url: '- (Required) The URL to which the page rule should forward.'
            user: '- (Required, but allowed to be empty) Controls which end user-related features go into the Cache Key.'
            waf: '- (Optional) Whether this action is "on" or "off".'
            zone_id: '- (Required) The DNS zone ID to which the page rule should be added.'
        importStatements: []
    cloudflare_page_shield_policy:
        subCategory: ""
        name: cloudflare_page_shield_policy
        title: cloudflare_page_shield_policy Resource - Cloudflare
        examples:
            - name: example_page_shield_policy
              manifest: |-
                {
                  "action": "allow",
                  "description": "Checkout page CSP policy",
                  "enabled": true,
                  "expression": "ends_with(http.request.uri.path, \"/checkout\")",
                  "value": "script-src 'none';",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            action: (String) The action to take if the expression matches
            description: (String) A description for the policy
            enabled: (Boolean) Whether the policy is enabled
            expression: (String) The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
            id: (String) Identifier
            value: (String) The policy which will be applied
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_page_shield_policy.example '<zone_id>/<policy_id>'
    cloudflare_pages_domain:
        subCategory: ""
        name: cloudflare_pages_domain
        title: cloudflare_pages_domain Resource - Cloudflare
        examples:
            - name: example_pages_domain
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "example.com",
                  "project_name": "this-is-my-project-01"
                }
        argumentDocs:
            account_id: (String) Identifier
            certificate_authority: (String)
            created_on: (String)
            domain_id: (String)
            error_message: (String)
            id: (String) The ID of this resource.
            method: (String)
            name: (String)
            project_name: (String) Name of the project.
            status: (String)
            txt_name: (String)
            txt_value: (String)
            validation_data: (Attributes) (see below for nested schema)
            verification_data: (Attributes) (see below for nested schema)
            zone_tag: (String)
        importStatements:
            - $ terraform import cloudflare_pages_domain.example '<account_id>/<project_name>/<domain_name>'
    cloudflare_pages_project:
        subCategory: ""
        name: cloudflare_pages_project
        title: cloudflare_pages_project Resource - Cloudflare
        examples:
            - name: example_pages_project
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "build_config": {
                    "build_caching": true,
                    "build_command": "npm run build",
                    "destination_dir": "build",
                    "root_dir": "/",
                    "web_analytics_tag": "cee1c73f6e4743d0b5e6bb1a0bcaabcc",
                    "web_analytics_token": "021e1057c18547eca7b79f2516f06o7x"
                  },
                  "deployment_configs": {
                    "preview": {
                      "ai_bindings": {
                        "AI_BINDING": {
                          "project_id": "some-project-id"
                        }
                      },
                      "analytics_engine_datasets": {
                        "ANALYTICS_ENGINE_BINDING": {
                          "dataset": "api_analytics"
                        }
                      },
                      "browsers": {
                        "BROWSER": {}
                      },
                      "compatibility_date": "2022-01-01",
                      "compatibility_flags": [
                        "url_standard"
                      ],
                      "d1_databases": {
                        "D1_BINDING": {
                          "id": "445e2955-951a-43f8-a35b-a4d0c8138f63"
                        }
                      },
                      "durable_object_namespaces": {
                        "DO_BINDING": {
                          "namespace_id": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                        }
                      },
                      "env_vars": {
                        "foo": {
                          "type": "plain_text",
                          "value": "hello world"
                        }
                      },
                      "hyperdrive_bindings": {
                        "HYPERDRIVE": {
                          "id": "a76a99bc342644deb02c38d66082262a"
                        }
                      },
                      "kv_namespaces": {
                        "KV_BINDING": {
                          "namespace_id": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                        }
                      },
                      "mtls_certificates": {
                        "MTLS": {
                          "certificate_id": "d7cdd17c-916f-4cb7-aabe-585eb382ec4e"
                        }
                      },
                      "placement": {
                        "mode": "smart"
                      },
                      "queue_producers": {
                        "QUEUE_PRODUCER_BINDING": {
                          "name": "some-queue"
                        }
                      },
                      "r2_buckets": {
                        "R2_BINDING": {
                          "jurisdiction": "eu",
                          "name": "some-bucket"
                        }
                      },
                      "services": {
                        "SERVICE_BINDING": {
                          "entrypoint": "MyHandler",
                          "environment": "production",
                          "service": "example-worker"
                        }
                      },
                      "vectorize_bindings": {
                        "VECTORIZE": {
                          "index_name": "my_index"
                        }
                      }
                    },
                    "production": {
                      "ai_bindings": {
                        "AI_BINDING": {
                          "project_id": "some-project-id"
                        }
                      },
                      "analytics_engine_datasets": {
                        "ANALYTICS_ENGINE_BINDING": {
                          "dataset": "api_analytics"
                        }
                      },
                      "browsers": {
                        "BROWSER": {}
                      },
                      "compatibility_date": "2022-01-01",
                      "compatibility_flags": [
                        "url_standard"
                      ],
                      "d1_databases": {
                        "D1_BINDING": {
                          "id": "445e2955-951a-43f8-a35b-a4d0c8138f63"
                        }
                      },
                      "durable_object_namespaces": {
                        "DO_BINDING": {
                          "namespace_id": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                        }
                      },
                      "env_vars": {
                        "foo": {
                          "type": "plain_text",
                          "value": "hello world"
                        }
                      },
                      "hyperdrive_bindings": {
                        "HYPERDRIVE": {
                          "id": "a76a99bc342644deb02c38d66082262a"
                        }
                      },
                      "kv_namespaces": {
                        "KV_BINDING": {
                          "namespace_id": "5eb63bbbe01eeed093cb22bb8f5acdc3"
                        }
                      },
                      "mtls_certificates": {
                        "MTLS": {
                          "certificate_id": "d7cdd17c-916f-4cb7-aabe-585eb382ec4e"
                        }
                      },
                      "placement": {
                        "mode": "smart"
                      },
                      "queue_producers": {
                        "QUEUE_PRODUCER_BINDING": {
                          "name": "some-queue"
                        }
                      },
                      "r2_buckets": {
                        "R2_BINDING": {
                          "jurisdiction": "eu",
                          "name": "some-bucket"
                        }
                      },
                      "services": {
                        "SERVICE_BINDING": {
                          "entrypoint": "MyHandler",
                          "environment": "production",
                          "service": "example-worker"
                        }
                      },
                      "vectorize_bindings": {
                        "VECTORIZE": {
                          "index_name": "my_index"
                        }
                      }
                    }
                  },
                  "name": "NextJS Blog",
                  "production_branch": "main"
                }
        argumentDocs:
            account_id: (String) Identifier
            ai_bindings: (Attributes Map) Constellation bindings used for Pages Functions. (see below for nested schema)
            aliases: (List of String) A list of alias URLs pointing to this deployment.
            analytics_engine_datasets: (Attributes Map) Analytics Engine bindings used for Pages Functions. (see below for nested schema)
            branch: (String) Where the trigger happened.
            browsers: (Attributes Map) Browser bindings used for Pages Functions. (see below for nested schema)
            build_caching: (Boolean) Enable build caching for the project.
            build_command: (String) Command used to build project.
            build_config: (Attributes) Configs for the project build process. (see below for nested schema)
            canonical_deployment: (Attributes) Most recent deployment to the repo. (see below for nested schema)
            certificate_id: (String)
            commit_hash: (String) Hash of the deployment trigger commit.
            commit_message: (String) Message of the deployment trigger commit.
            compatibility_date: (String) Compatibility date used for Pages Functions.
            compatibility_flags: (List of String) Compatibility flags used for Pages Functions.
            config: (Attributes) (see below for nested schema)
            created_on: (String) When the project was created.
            d1_databases: (Attributes Map) D1 databases used for Pages Functions. (see below for nested schema)
            dataset: (String) Name of the dataset.
            deployment_configs: (Attributes) Configs for deployments in a project. (see below for nested schema)
            deployment_trigger: (Attributes) Info about what caused the deployment. (see below for nested schema)
            deployments_enabled: (Boolean)
            destination_dir: (String) Output directory of the build.
            domains: (List of String) A list of associated custom domains for the project.
            durable_object_namespaces: (Attributes Map) Durabble Object namespaces used for Pages Functions. (see below for nested schema)
            ended_on: (String) When the stage ended.
            entrypoint: (String) The entrypoint to bind to.
            env_vars: (Attributes Map) Environment variables for build configs. (see below for nested schema)
            environment: (String) The Service environment.
            hyperdrive_bindings: (Attributes Map) Hyperdrive bindings used for Pages Functions. (see below for nested schema)
            id: (String) Name of the project.
            index_name: (String)
            is_skipped: (Boolean) If the deployment has been skipped.
            jurisdiction: (String) Jurisdiction of the R2 bucket.
            kv_namespaces: (Attributes Map) KV namespaces used for Pages Functions. (see below for nested schema)
            latest_deployment: (Attributes) Most recent deployment to the repo. (see below for nested schema)
            latest_stage: (Attributes) The status of the deployment. (see below for nested schema)
            metadata: (Attributes) Additional info about the trigger. (see below for nested schema)
            mode: (String) Placement mode.
            modified_on: (String) When the deployment was last modified.
            mtls_certificates: (Attributes Map) mTLS bindings used for Pages Functions. (see below for nested schema)
            name: (String) Name of the project.
            namespace_id: (String) ID of the Durabble Object namespace.
            owner: (String)
            path_excludes: (List of String)
            path_includes: (List of String)
            placement: (Attributes) Placement setting used for Pages Functions. (see below for nested schema)
            pr_comments_enabled: (Boolean)
            preview: (Attributes) Configs for preview deploys. (see below for nested schema)
            preview_branch_excludes: (List of String)
            preview_branch_includes: (List of String)
            preview_deployment_setting: (String)
            production: (Attributes) Configs for production deploys. (see below for nested schema)
            production_branch: (String) Production branch of the project. Used to identify production deployments.
            production_deployments_enabled: (Boolean)
            project_id: (String)
            project_name: (String) Name of the project.
            queue_producers: (Attributes Map) Queue Producer bindings used for Pages Functions. (see below for nested schema)
            r2_buckets: (Attributes Map) R2 buckets used for Pages Functions. (see below for nested schema)
            repo_name: (String)
            root_dir: (String) Directory to run the command.
            service: (String) The Service name.
            services: (Attributes Map) Services used for Pages Functions. (see below for nested schema)
            short_id: (String) Short Id (8 character) of the deployment.
            source: (Attributes) (see below for nested schema)
            stages: (Attributes List) List of past stages. (see below for nested schema)
            started_on: (String) When the stage started.
            status: (String) State of the current stage.
            subdomain: (String) The Cloudflare subdomain associated with the project.
            type: (String) The type of environment variable.
            url: (String) The live URL to view this deployment.
            value: (String) Environment variable value.
            vectorize_bindings: (Attributes Map) Vectorize bindings used for Pages Functions. (see below for nested schema)
            web_analytics_tag: (String) The classifying tag for analytics.
            web_analytics_token: (String) The auth token for analytics.
        importStatements:
            - $ terraform import cloudflare_pages_project.example '<account_id>/<project_name>'
    cloudflare_queue:
        subCategory: ""
        name: cloudflare_queue
        title: cloudflare_queue Resource - Cloudflare
        examples:
            - name: example_queue
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "queue_name": "example-queue"
                }
        argumentDocs:
            account_id: (String) A Resource identifier.
            batch_size: (Number) The maximum number of messages to include in a batch.
            bucket_name: (String)
            consumer_id: (String) A Resource identifier.
            consumers: (Attributes List) (see below for nested schema)
            consumers_total_count: (Number)
            created_on: (String)
            delivery_delay: (Number) Number of seconds to delay delivery of all messages to consumers.
            id: (String) The ID of this resource.
            max_concurrency: (Number) Maximum number of concurrent consumers that may consume from this Queue. Set to null to automatically opt in to the platform's maximum (recommended).
            max_retries: (Number) The maximum number of retries
            max_wait_time_ms: (Number) The number of milliseconds to wait for a batch to fill up before attempting to deliver it
            message_retention_period: (Number) Number of seconds after which an unconsumed message will be delayed.
            modified_on: (String)
            producers: (Attributes List) (see below for nested schema)
            producers_total_count: (Number)
            queue_id: (String)
            queue_name: (String)
            retry_delay: (Number) The number of seconds to delay before making the message available for another attempt.
            script: (String) Name of a Worker
            script_name: (String) Name of a Worker
            settings: (Attributes) (see below for nested schema)
            type: (String)
            visibility_timeout_ms: (Number) The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.
        importStatements:
            - $ terraform import cloudflare_queue.example '<account_id>/<queue_id>'
    cloudflare_queue_consumer:
        subCategory: ""
        name: cloudflare_queue_consumer
        title: cloudflare_queue_consumer Resource - Cloudflare
        examples:
            - name: example_queue_consumer
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "dead_letter_queue": "example-queue",
                  "queue_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "script_name": "my-consumer-worker",
                  "settings": {
                    "batch_size": 50,
                    "max_concurrency": 10,
                    "max_retries": 3,
                    "max_wait_time_ms": 5000,
                    "retry_delay": 10
                  },
                  "type": "worker"
                }
        argumentDocs:
            account_id: (String) A Resource identifier.
            batch_size: (Number) The maximum number of messages to include in a batch.
            consumer_id: (String) A Resource identifier.
            created_on: (String)
            dead_letter_queue: (String)
            max_concurrency: (Number) Maximum number of concurrent consumers that may consume from this Queue. Set to null to automatically opt in to the platform's maximum (recommended).
            max_retries: (Number) The maximum number of retries
            max_wait_time_ms: (Number) The number of milliseconds to wait for a batch to fill up before attempting to deliver it
            queue_id: (String) A Resource identifier.
            retry_delay: (Number) The number of seconds to delay before making the message available for another attempt.
            script: (String) Name of a Worker
            script_name: (String) Name of a Worker
            settings: (Attributes) (see below for nested schema)
            type: (String)
            visibility_timeout_ms: (Number) The number of milliseconds that a message is exclusively leased. After the timeout, the message becomes available for another attempt.
        importStatements: []
    cloudflare_r2_bucket:
        subCategory: ""
        name: cloudflare_r2_bucket
        title: cloudflare_r2_bucket Resource - Cloudflare
        examples:
            - name: example_r2_bucket
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "location": "apac",
                  "name": "example-bucket",
                  "storage_class": "Standard"
                }
        argumentDocs:
            account_id: (String) Account ID
            creation_date: (String) Creation timestamp
            id: (String) Name of the bucket
            jurisdiction: (String) Jurisdiction of the bucket
            location: (String) Location of the bucket
            name: (String) Name of the bucket
            storage_class: (String) Storage class for newly uploaded objects, unless specified otherwise.
        importStatements:
            - $ terraform import cloudflare_r2_bucket.example '<account_id>/<bucket_name>/<jurisdiction>'
    cloudflare_r2_bucket_cors:
        subCategory: ""
        name: cloudflare_r2_bucket_cors
        title: cloudflare_r2_bucket_cors Resource - Cloudflare
        examples:
            - name: example_r2_bucket_cors
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "rules": [
                    {
                      "allowed": {
                        "headers": [
                          "x-requested-by"
                        ],
                        "methods": [
                          "GET"
                        ],
                        "origins": [
                          "http://localhost:3000"
                        ]
                      },
                      "expose_headers": [
                        "Content-Encoding"
                      ],
                      "id": "Allow Local Development",
                      "max_age_seconds": 3600
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) Account ID
            allowed: (Attributes) Object specifying allowed origins, methods and headers for this CORS rule. (see below for nested schema)
            bucket_name: (String) Name of the bucket
            expose_headers: (List of String) Specifies the headers that can be exposed back, and accessed by, the JavaScript making the cross-origin request. If you need to access headers beyond the safelisted response headers, such as Content-Encoding or cf-cache-status, you must specify it here.
            headers: (List of String) Specifies the value for the Access-Control-Allow-Headers header R2 sets when requesting objects in this bucket from a browser. Cross-origin requests that include custom headers (e.g. x-user-id) should specify these headers as AllowedHeaders.
            id: (String) Identifier for this rule
            max_age_seconds: (Number) Specifies the amount of time (in seconds) browsers are allowed to cache CORS preflight responses. Browsers may limit this to 2 hours or less, even if the maximum value (86400) is specified.
            methods: (List of String) Specifies the value for the Access-Control-Allow-Methods header R2 sets when requesting objects in a bucket from a browser.
            origins: (List of String) Specifies the value for the Access-Control-Allow-Origin header R2 sets when requesting objects in a bucket from a browser.
            rules: (Attributes List) (see below for nested schema)
        importStatements: []
    cloudflare_r2_bucket_event_notification:
        subCategory: ""
        name: cloudflare_r2_bucket_event_notification
        title: cloudflare_r2_bucket_event_notification Resource - Cloudflare
        examples:
            - name: example_r2_bucket_event_notification
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "queue_id": "queue_id",
                  "rules": [
                    {
                      "actions": [
                        "PutObject",
                        "CopyObject"
                      ],
                      "description": "Notifications from source bucket to queue",
                      "prefix": "img/",
                      "suffix": ".jpeg"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) Account ID
            actions: (List of String) Array of R2 object actions that will trigger notifications
            bucket_name: (String) Name of the bucket
            created_at: (String) Timestamp when the rule was created
            description: (String) A description that can be used to identify the event notification rule after creation
            prefix: (String) Notifications will be sent only for objects with this prefix
            queue_id: (String) Queue ID
            queue_name: (String) Name of the queue
            queues: (Attributes List) List of queues associated with the bucket. (see below for nested schema)
            rule_id: (String) Rule ID
            rules: (Attributes List) Array of rules to drive notifications (see below for nested schema)
            suffix: (String) Notifications will be sent only for objects with this suffix
        importStatements: []
    cloudflare_r2_bucket_lifecycle:
        subCategory: ""
        name: cloudflare_r2_bucket_lifecycle
        title: cloudflare_r2_bucket_lifecycle Resource - Cloudflare
        examples:
            - name: example_r2_bucket_lifecycle
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "rules": [
                    {
                      "abort_multipart_uploads_transition": {
                        "condition": {
                          "max_age": 0,
                          "type": "Age"
                        }
                      },
                      "conditions": {
                        "prefix": "prefix"
                      },
                      "delete_objects_transition": {
                        "condition": {
                          "max_age": 0,
                          "type": "Age"
                        }
                      },
                      "enabled": true,
                      "id": "Expire all objects older than 24 hours",
                      "storage_class_transitions": [
                        {
                          "condition": {
                            "max_age": 0,
                            "type": "Age"
                          },
                          "storage_class": "InfrequentAccess"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            abort_multipart_uploads_transition: (Attributes) Transition to abort ongoing multipart uploads (see below for nested schema)
            account_id: (String) Account ID
            bucket_name: (String) Name of the bucket
            condition: (Attributes) Condition for lifecycle transitions to apply after an object reaches an age in seconds (see below for nested schema)
            conditions: (Attributes) Conditions that apply to all transitions of this rule (see below for nested schema)
            date: (String)
            delete_objects_transition: (Attributes) Transition to delete objects (see below for nested schema)
            enabled: (Boolean) Whether or not this rule is in effect
            id: (String) Unique identifier for this rule
            max_age: (Number)
            prefix: (String) Transitions will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads
            rules: (Attributes List) (see below for nested schema)
            storage_class: (String)
            storage_class_transitions: (Attributes List) Transitions to change the storage class of objects (see below for nested schema)
            type: (String)
        importStatements: []
    cloudflare_r2_bucket_lock:
        subCategory: ""
        name: cloudflare_r2_bucket_lock
        title: cloudflare_r2_bucket_lock Resource - Cloudflare
        examples:
            - name: example_r2_bucket_lock
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "rules": [
                    {
                      "condition": {
                        "max_age_seconds": 100,
                        "type": "Age"
                      },
                      "enabled": true,
                      "id": "Lock all objects for 24 hours",
                      "prefix": "prefix"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) Account ID
            bucket_name: (String) Name of the bucket
            condition: (Attributes) Condition to apply a lock rule to an object for how long in seconds (see below for nested schema)
            date: (String)
            enabled: (Boolean) Whether or not this rule is in effect
            id: (String) Unique identifier for this rule
            max_age_seconds: (Number)
            prefix: (String) Rule will only apply to objects/uploads in the bucket that start with the given prefix, an empty prefix can be provided to scope rule to all objects/uploads
            rules: (Attributes List) (see below for nested schema)
            type: (String)
        importStatements: []
    cloudflare_r2_bucket_sippy:
        subCategory: ""
        name: cloudflare_r2_bucket_sippy
        title: cloudflare_r2_bucket_sippy Resource - Cloudflare
        examples:
            - name: example_r2_bucket_sippy
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "destination": {
                    "access_key_id": "accessKeyId",
                    "provider": "r2",
                    "secret_access_key": "secretAccessKey"
                  },
                  "source": {
                    "access_key_id": "accessKeyId",
                    "bucket": "bucket",
                    "provider": "aws",
                    "region": "region",
                    "secret_access_key": "secretAccessKey"
                  }
                }
        argumentDocs:
            access_key_id: |-
                (String) ID of a Cloudflare API token.
                This is the value labelled "Access Key ID" when creating an API
                token from the R2 dashboard.
            account_id: (String) Account ID
            bucket: (String) Name of the AWS S3 bucket
            bucket_name: (String) Name of the bucket
            client_email: (String) Client email of an IAM credential (ideally scoped to a single GCS bucket)
            destination: (Attributes) R2 bucket to copy objects to (see below for nested schema)
            enabled: (Boolean) State of Sippy for this bucket
            private_key: (String) Private Key of an IAM credential (ideally scoped to a single GCS bucket)
            provider: (String)
            region: (String) Name of the AWS availability zone
            secret_access_key: |-
                (String) Value of a Cloudflare API token.
                This is the value labelled "Secret Access Key" when creating an API
                token from the R2 dashboard.
            source: (Attributes) AWS S3 bucket to copy objects from (see below for nested schema)
        importStatements: []
    cloudflare_r2_custom_domain:
        subCategory: ""
        name: cloudflare_r2_custom_domain
        title: cloudflare_r2_custom_domain Resource - Cloudflare
        examples:
            - name: example_r2_custom_domain
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "domain": "domain",
                  "enabled": true,
                  "min_tls": "1.0",
                  "zone_id": "zoneId"
                }
        argumentDocs:
            account_id: (String) Account ID
            bucket_name: (String) Name of the bucket
            domain: (String) Name of the custom domain to be added
            domain_name: (String) Name of the custom domain
            enabled: (Boolean) Whether to enable public bucket access at the custom domain. If undefined, the domain will be enabled.
            min_tls: (String) Minimum TLS Version the custom domain will accept for incoming connections. If not set, defaults to 1.0.
            ownership: (String) Ownership status of the domain
            ssl: (String) SSL certificate status
            status: (Attributes) (see below for nested schema)
            zone_id: (String) Zone ID of the custom domain
            zone_name: (String) Zone that the custom domain resides in
        importStatements: []
    cloudflare_r2_managed_domain:
        subCategory: ""
        name: cloudflare_r2_managed_domain
        title: cloudflare_r2_managed_domain Resource - Cloudflare
        examples:
            - name: example_r2_managed_domain
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bucket_name": "example-bucket",
                  "enabled": true
                }
        argumentDocs:
            account_id: (String) Account ID
            bucket_id: (String) Bucket ID
            bucket_name: (String) Name of the bucket
            domain: (String) Domain name of the bucket's r2.dev domain
            enabled: (Boolean) Whether to enable public bucket access at the r2.dev domain
        importStatements: []
    cloudflare_rate_limit:
        subCategory: ""
        name: cloudflare_rate_limit
        title: cloudflare_rate_limit Resource - Cloudflare
        examples:
            - name: example_rate_limit
              manifest: |-
                {
                  "action": {
                    "mode": "simulate",
                    "response": {
                      "body": "\u003cerror\u003eThis request has been rate-limited.\u003c/error\u003e",
                      "content_type": "text/xml"
                    },
                    "timeout": 86400
                  },
                  "match": {
                    "headers": [
                      {
                        "name": "Cf-Cache-Status",
                        "op": "eq",
                        "value": "HIT"
                      }
                    ],
                    "request": {
                      "methods": [
                        "GET",
                        "POST"
                      ],
                      "schemes": [
                        "HTTP",
                        "HTTPS"
                      ],
                      "url": "*.example.org/path*"
                    },
                    "response": {
                      "origin_traffic": true
                    }
                  },
                  "period": 900,
                  "threshold": 60,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            action: (Attributes) The action to perform when the threshold of matched traffic within the configured period is exceeded. (see below for nested schema)
            body: (String) The response body to return. The value must conform to the configured content type.
            bypass: (Attributes List) Criteria specifying when the current rate limit should be bypassed. You can specify that the rate limit should not apply to one or more URLs. (see below for nested schema)
            content_type: '(String) The content type of the body. Must be one of the following: text/plain, text/xml, or application/json.'
            description: (String) An informative summary of the rate limit. This value is sanitized and any tags will be removed.
            disabled: (Boolean) When true, indicates that the rate limit is currently disabled.
            headers: (Attributes List) (see below for nested schema)
            id: (String) The unique identifier of the rate limit.
            match: (Attributes) Determines which traffic the rate limit counts towards the threshold. (see below for nested schema)
            methods: (List of String) The HTTP methods to match. You can specify a subset (for example, ['POST','PUT']) or all methods (['_ALL_']). This field is optional when creating a rate limit.
            mode: (String) The action to perform.
            name: (String) The name of the response header to match.
            op: '(String) The operator used when matching: eq means "equal" and ne means "not equal".'
            origin_traffic: |-
                (Boolean) When true, only the uncached traffic served from your origin servers will count towards rate limiting. In this case, any cached traffic served by Cloudflare will not count towards rate limiting. This field is optional.
                Notes: This field is deprecated. Instead, use response headers and set "origin_traffic" to "false" to avoid legacy behaviour interacting with the "response_headers" property.
            period: (Number) The time in seconds (an integer value) to count matching traffic. If the count exceeds the configured threshold within this period, Cloudflare will perform the configured action.
            request: (Attributes) (see below for nested schema)
            response: |-
                (Attributes) A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.
                Notes: If you omit this object, Cloudflare will use the default HTML error page. If "mode" is "challenge", "managed_challenge", or "js_challenge", Cloudflare will use the zone challenge pages and you should not provide the "response" object. (see below for nested schema)
            schemes: (List of String) The HTTP schemes to match. You can specify one scheme (['HTTPS']), both schemes (['HTTP','HTTPS']), or all schemes (['_ALL_']). This field is optional.
            threshold: (Number) The threshold that will trigger the configured mitigation action. Configure this value along with the period property to establish a threshold per period.
            timeout: |-
                (Number) The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.
                Notes: If "mode" is "challenge", "managed_challenge", or "js_challenge", Cloudflare will use the zone's Challenge Passage time and you should not provide this value.
            url: (String) The URL pattern to match, composed of a host and a path such as example.org/path*. Normalization is applied before the pattern is matched. * wildcards are expanded to match applicable traffic. Query strings are not matched. Set the value to * to match all traffic to your zone.
            value: (String) The value of the response header, which must match exactly.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_rate_limit.example '<zone_id>/<rate_limit_id>'
    cloudflare_regional_hostname:
        subCategory: ""
        name: cloudflare_regional_hostname
        title: cloudflare_regional_hostname Resource - Cloudflare
        examples:
            - name: example_regional_hostname
              manifest: |-
                {
                  "hostname": "foo.example.com",
                  "region_key": "ca",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created_on: (String) When the regional hostname was created
            hostname: (String) DNS hostname to be regionalized, must be a subdomain of the zone. Wildcards are supported for one level, e.g *.example.com
            id: (String) DNS hostname to be regionalized, must be a subdomain of the zone. Wildcards are supported for one level, e.g *.example.com
            region_key: (String) Identifying key for the region
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_regional_hostname.example '<zone_id>/<hostname>'
    cloudflare_regional_tiered_cache:
        subCategory: ""
        name: cloudflare_regional_tiered_cache
        title: cloudflare_regional_tiered_cache Resource - Cloudflare
        examples:
            - name: example_regional_tiered_cache
              manifest: |-
                {
                  "value": "on",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            editable: (Boolean) Whether the setting is editable
            id: (String) Identifier
            modified_on: (String) Last time this setting was modified.
            value: (String) Value of the Regional Tiered Cache zone setting.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_regional_tiered_cache.example '<zone_id>'
    cloudflare_registrar_domain:
        subCategory: ""
        name: cloudflare_registrar_domain
        title: cloudflare_registrar_domain Resource - Cloudflare
        examples:
            - name: example_registrar_domain
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "auto_renew": true,
                  "domain_name": "cloudflare.com",
                  "locked": false,
                  "privacy": true
                }
        argumentDocs:
            account_id: (String) Identifier
            auto_renew: (Boolean) Auto-renew controls whether subscription is automatically renewed upon domain expiration.
            domain_name: (String) Domain name.
            locked: (Boolean) Shows whether a registrar lock is in place for a domain.
            privacy: (Boolean) Privacy option controls redacting WHOIS information.
        importStatements: []
    cloudflare_ruleset:
        subCategory: ""
        name: cloudflare_ruleset
        title: cloudflare_ruleset Resource - Cloudflare
        examples:
            - name: example_ruleset
              manifest: |-
                {
                  "description": "My ruleset to execute managed rulesets",
                  "kind": "managed",
                  "name": "My ruleset",
                  "phase": "ddos_l4",
                  "rules": [
                    {
                      "action": "block",
                      "action_parameters": {
                        "response": {
                          "content": "        {\n          \"success\": false,\n          \"error\": \"you have been blocked\"\n        }\n",
                          "content_type": "application/json",
                          "status_code": 400
                        }
                      },
                      "description": "Block when the IP address is not 1.1.1.1",
                      "enabled": true,
                      "exposed_credential_check": {
                        "password_expression": "url_decode(http.request.body.form[\\\"password\\\"][0])",
                        "username_expression": "url_decode(http.request.body.form[\\\"username\\\"][0])"
                      },
                      "expression": "ip.src ne 1.1.1.1",
                      "id": "3a03d665bac047339bb530ecb439a90d",
                      "logging": {
                        "enabled": true
                      },
                      "ratelimit": {
                        "characteristics": [
                          "ip.src"
                        ],
                        "counting_expression": "http.request.body.raw eq \"abcd\"",
                        "mitigation_timeout": 600,
                        "period": 10,
                        "requests_per_period": 1000,
                        "requests_to_origin": true,
                        "score_per_period": 400,
                        "score_response_header_name": "my-score"
                      },
                      "ref": "my_ref"
                    }
                  ],
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            action: (String) The action to perform when the rule matches.
            action_parameters: (Attributes) The parameters configuring the rule's action. (see below for nested schema)
            additional_cacheable_ports: (List of Number) List of additional ports that caching can be enabled on.
            algorithms: (Attributes List) Custom order for compression algorithms. (see below for nested schema)
            all: (Boolean) Determines whether to exclude all query string parameters from the cache key.
            automatic_https_rewrites: (Boolean) Turn on or off Automatic HTTPS Rewrites.
            autominify: (Attributes) Select which file extensions to minify automatically. (see below for nested schema)
            bic: (Boolean) Turn on or off Browser Integrity Check.
            browser_ttl: (Attributes) Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content. (see below for nested schema)
            cache: (Boolean) Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.
            cache_by_device_type: (Boolean) Separate cached content based on the visitor’s device type
            cache_deception_armor: (Boolean) Protect from web cache deception attacks while allowing static assets to be cached
            cache_key: (Attributes) Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache. (see below for nested schema)
            cache_reserve: (Attributes) Mark whether the request's response from origin is eligible for Cache Reserve (requires a Cache Reserve add-on plan). (see below for nested schema)
            categories: (List of String) The categories of the rule.
            category: (String) The name of the category to override.
            characteristics: (List of String) Characteristics of the request on which the ratelimiter counter will be incremented.
            check_presence: (List of String) Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.
            contains: (Map of List of String) For each header name and list of values combination, check if the request header contains any of the values provided. The presence of the request header and whether any of the values provided are contained in the request header value is used in building the cache key.
            content: (String) Error response content.
            content_type: (String) Content-type header to set with the response.
            cookie: (Attributes) The cookies to include in building the cache key. (see below for nested schema)
            cookie_fields: (Attributes List) The cookie fields to log. (see below for nested schema)
            counting_expression: (String) Defines when the ratelimit counter should be incremented. It is optional and defaults to the same as the rule's expression.
            css: (Boolean) Minify CSS files.
            custom_key: (Attributes) Customize which components of the request are included or excluded from the cache key. (see below for nested schema)
            default: (Number) The TTL (in seconds) if you choose override_origin mode.
            description: (String) An informative description of the ruleset.
            device_type: (Boolean) Use the user agent's device type in the cache key.
            disable_apps: (Boolean) Turn off all active Cloudflare Apps.
            disable_rum: (Boolean) Turn off Real User Monitoring (RUM).
            disable_stale_while_updating: (Boolean) Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.
            disable_zaraz: (Boolean) Turn off Zaraz.
            edge_ttl: (Attributes) TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network. (see below for nested schema)
            eligible: (Boolean) Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.
            email_obfuscation: (Boolean) Turn on or off Email Obfuscation.
            enabled: (Boolean) Whether the rule should be executed.
            exclude: (Attributes) A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key. (see below for nested schema)
            exclude_origin: (Boolean) Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.
            exposed_credential_check: (Attributes) Configure checks for exposed credentials. (see below for nested schema)
            expression: (String) The expression defining which traffic will match the rule.
            fonts: (Boolean) Turn on or off Cloudflare Fonts.
            from: (Number) response status code lower bound
            from_list: (Attributes) Serve a redirect based on a bulk list lookup. (see below for nested schema)
            from_value: (Attributes) Serve a redirect based on the request properties. (see below for nested schema)
            geo: (Boolean) Use the user agents's country in the cache key.
            header: (Attributes) The header names and values to include in building the cache key. (see below for nested schema)
            headers: (Attributes Map) Map of request headers to modify. (see below for nested schema)
            host: (Attributes) Whether to use the original host or the resolved host in the cache key. (see below for nested schema)
            host_header: (String) Rewrite the HTTP Host header.
            hotlink_protection: (Boolean) Turn on or off the Hotlink Protection.
            html: (Boolean) Minify HTML files.
            id: (String) The unique ID of the ruleset.
            ignore_query_strings_order: (Boolean) Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.
            include: (List of String) Include these cookies' names and their values.
            increment: (Number) Increment contains the delta to change the score and can be either positive or negative.
            js: (Boolean) Minify JS files.
            key: (String) Expression that evaluates to the list lookup key.
            kind: (String) The kind of the ruleset.
            lang: (Boolean) Use the user agent's language in the cache key.
            list: (List of String)
            logging: (Attributes) An object configuring the rule's logging behavior. (see below for nested schema)
            matched_data: (Attributes) The configuration to use for matched data logging. (see below for nested schema)
            minimum_file_size: (Number) The minimum file size eligible for store in cache reserve.
            mirage: (Boolean) Turn on or off Mirage.
            mitigation_timeout: (Number) Period of time in seconds after which the action will be disabled following its first execution.
            mode: (String) Determines which browser ttl mode to use.
            name: (String) The human-readable name of the ruleset.
            operation: (String)
            opportunistic_encryption: (Boolean) Turn on or off Opportunistic Encryption.
            origin: (Attributes) Override the IP/TCP destination. (see below for nested schema)
            origin_cache_control: (Boolean) When enabled, Cloudflare will aim to strictly adhere to RFC 7234.
            origin_error_page_passthru: (Boolean) Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin
            overrides: (Attributes) A set of overrides to apply to the target ruleset. (see below for nested schema)
            password_expression: (String) Expression that selects the password used in the credentials check.
            path: (Attributes) Path portion rewrite. (see below for nested schema)
            period: (Number) Period in seconds over which the counter is being incremented.
            phase: (String) The phase of the ruleset.
            phases: (List of String) A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.
            polish: (String) Configure the Polish level.
            port: (Number) Override the destination port.
            preserve_query_string: (Boolean) Keep the query string of the original request.
            products: (List of String) A list of legacy security products to skip the execution of.
            public_key: (String) The public key to encrypt matched data logs with.
            query: (Attributes) Query portion rewrite. (see below for nested schema)
            query_string: (Attributes) Use the presence of parameters in the query string to build the cache key. (see below for nested schema)
            ratelimit: (Attributes) An object configuring the rule's ratelimit behavior. (see below for nested schema)
            read_timeout: (Number) Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.
            ref: (String) The reference of the rule (the rule ID by default).
            request_fields: (Attributes List) The request fields to log. (see below for nested schema)
            requests_per_period: (Number) The threshold of requests per period after which the action will be executed for the first time.
            requests_to_origin: (Boolean) Defines if ratelimit counting is only done when an origin is reached.
            resolved: (Boolean) Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.
            respect_strong_etags: (Boolean) Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.
            response: (Attributes) The response to show when the block is applied. (see below for nested schema)
            response_fields: (Attributes List) The response fields to log. (see below for nested schema)
            rocket_loader: (Boolean) Turn on or off Rocket Loader
            rules: (Attributes List) The list of rules in the ruleset. (see below for nested schema)
            ruleset: (String) A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.
            rulesets: (List of String) A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.
            score_per_period: (Number) The score threshold per period for which the action will be executed the first time.
            score_response_header_name: (String) The response header name provided by the origin which should contain the score to increment ratelimit counter on.
            score_threshold: (Number) The score threshold to use for the rule.
            security_level: (String) Configure the Security Level.
            sensitivity_level: (String) A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases.
            serve_stale: (Attributes) Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin. (see below for nested schema)
            server_side_excludes: (Boolean) Turn on or off Server Side Excludes.
            sni: (Attributes) Override the Server Name Indication (SNI). (see below for nested schema)
            ssl: (String) Configure the SSL level.
            status_code: (Number) The status code to use for the error.
            status_code_range: (Attributes) The range of status codes used to apply the selected mode. (see below for nested schema)
            status_code_ttl: (Attributes List) List of single status codes, or status code ranges to apply the selected mode (see below for nested schema)
            sxg: (Boolean) Turn on or off Signed Exchanges (SXG).
            target_url: (Attributes) The URL to redirect the request to. (see below for nested schema)
            to: (Number) response status code upper bound
            uri: (Attributes) URI to rewrite the request to. (see below for nested schema)
            user: (Attributes) Characteristics of the request user agent used in building the cache key. (see below for nested schema)
            username_expression: (String) Expression that selects the user ID used in the credentials check.
            value: (Number) Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value "no-cache". A value of -1 is equivalent to setting Cache-Control header with the value of "no-store".
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_ruleset.example '<{accounts|zones}/{account_id|zone_id}>/<ruleset_id>'
    cloudflare_snippet_rules:
        subCategory: ""
        name: cloudflare_snippet_rules
        title: cloudflare_snippet_rules Resource - Cloudflare
        examples:
            - name: example_snippet_rules
              manifest: |-
                {
                  "rules": [
                    {
                      "description": "Rule description",
                      "enabled": true,
                      "expression": "http.cookie eq \"a=b\"",
                      "snippet_name": "snippet_name_01"
                    }
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            description: (String)
            enabled: (Boolean)
            expression: (String)
            rules: (Attributes List) List of snippet rules (see below for nested schema)
            snippet_name: (String) Snippet identifying name
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_snippets:
        subCategory: ""
        name: cloudflare_snippets
        title: cloudflare_snippets Resource - Cloudflare
        examples:
            - name: example_snippets
              manifest: |-
                {
                  "files": "export { async function fetch(request, env) {return new Response('some_response') } }",
                  "metadata": {
                    "main_module": "main.js"
                  },
                  "snippet_name": "snippet_name_01",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created_on: (String) Creation time of the snippet
            files: (String) Content files of uploaded snippet
            main_module: (String) Main module name of uploaded snippet
            metadata: (Attributes) (see below for nested schema)
            modified_on: (String) Modification time of the snippet
            snippet_name: (String) Snippet identifying name
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_spectrum_application:
        subCategory: ""
        name: cloudflare_spectrum_application
        title: cloudflare_spectrum_application Resource - Cloudflare
        examples:
            - name: example_spectrum_application
              manifest: |-
                {
                  "argo_smart_routing": true,
                  "dns": {
                    "name": "ssh.example.com",
                    "type": "CNAME"
                  },
                  "edge_ips": {
                    "connectivity": "all",
                    "type": "dynamic"
                  },
                  "ip_firewall": true,
                  "origin_direct": [
                    "tcp://127.0.0.1:8080"
                  ],
                  "origin_dns": {
                    "name": "origin.example.com",
                    "ttl": 600,
                    "type": ""
                  },
                  "origin_port": 22,
                  "protocol": "tcp/22",
                  "proxy_protocol": "off",
                  "tls": "off",
                  "traffic_type": "direct",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            argo_smart_routing: |-
                (Boolean) Enables Argo Smart Routing for this application.
                Notes: Only available for TCP applications with traffic_type set to "direct".
            connectivity: (String) The IP versions supported for inbound connections on Spectrum anycast IPs.
            created_on: (String) When the Application was created.
            dns: (Attributes) The name and type of DNS record for the Spectrum application. (see below for nested schema)
            edge_ips: (Attributes) The anycast edge IP configuration for the hostname of this application. (see below for nested schema)
            id: (String) App identifier.
            ip_firewall: |-
                (Boolean) Enables IP Access Rules for this application.
                Notes: Only available for TCP applications.
            ips: (List of String) The array of customer owned IPs we broadcast via anycast for this hostname and application.
            modified_on: (String) When the Application was last modified.
            name: (String) The name of the DNS record associated with the application.
            origin_direct: (List of String) List of origin IP addresses. Array may contain multiple IP addresses for load balancing.
            origin_dns: (Attributes) The name and type of DNS record for the Spectrum application. (see below for nested schema)
            origin_port: |-
                (Dynamic) The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example 1000, or a string to specify a range of origin ports, for example "1000-2000".
                Notes: If specifying a port range, the number of ports in the range must match the number of ports specified in the "protocol" field.
            protocol: (String) The port configuration at Cloudflare's edge. May specify a single port, for example "tcp/1000", or a range of ports, for example "tcp/1000-2000".
            proxy_protocol: (String) Enables Proxy Protocol to the origin. Refer to Enable Proxy protocol for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.
            tls: (String) The type of TLS termination associated with the application.
            traffic_type: (String) Determines how data travels from the edge to your origin. When set to "direct", Spectrum will send traffic directly to your origin, and the application's type is derived from the protocol. When set to "http" or "https", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.
            ttl: (Number) The TTL of our resolution of your DNS record in seconds.
            type: (String) The type of DNS record associated with the application.
            zone_id: (String) Zone identifier.
        importStatements:
            - $ terraform import cloudflare_spectrum_application.example '<zone_id>/<app_id>'
    cloudflare_stream:
        subCategory: ""
        name: cloudflare_stream
        title: cloudflare_stream Resource - Cloudflare
        examples:
            - name: example_stream
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            account_id: (String) The account identifier tag.
            allowed_origins: (List of String) Lists the origins allowed to display the video. Enter allowed origin domains in an array and use * for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.
            created: (String) The date and time the media item was created.
            creator: (String) A user-defined identifier for the media creator.
            dash: (String) DASH Media Presentation Description for the video.
            downloaded_from: (String) The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.
            duration: (Number) The duration of the video in seconds. A value of -1 means the duration is unknown. The duration becomes available after the upload and before the video is ready.
            error_reason_code: (String) Specifies why the video failed to encode. This field is empty if the video is not in an error state. Preferred for programmatic use.
            error_reason_text: (String) Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an error state.
            height: (Number) The video height in pixels. A value of -1 means the height is unknown. The value becomes available after the upload and before the video is ready.
            hls: (String) The HLS manifest for the video.
            identifier: (String) A Cloudflare-generated unique identifier for a media item.
            input: (Attributes) (see below for nested schema)
            live_input: (String) The live input ID used to upload a video with Stream Live.
            max_duration_seconds: (Number) The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of -1 means the value is unknown.
            meta: (String) A user modifiable key-value store used to reference other systems of record for managing videos.
            modified: (String) The date and time the media item was last modified.
            name: (String) A short description of the watermark profile.
            opacity: (Number) The translucency of the image. A value of 0.0 makes the image completely transparent, and 1.0 makes the image completely opaque. Note that if the image is already semi-transparent, setting this to 1.0 will not make the image completely opaque.
            padding: (Number) The whitespace between the adjacent edges (determined by position) of the video and the image. 0.0 indicates no padding, and 1.0 indicates a fully padded video width or length, as determined by the algorithm.
            pct_complete: (String) Indicates the size of the entire upload in bytes. The value must be a non-negative integer.
            playback: (Attributes) (see below for nested schema)
            position: '(String) The location of the image. Valid positions are: upperRight, upperLeft, lowerLeft, lowerRight, and center. Note that center ignores the padding parameter.'
            preview: (String) The video's preview page URI. This field is omitted until encoding is complete.
            ready_to_stream: (Boolean) Indicates whether the video is playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.
            ready_to_stream_at: (String) Indicates the time at which the video became playable. The field is empty if the video is not ready for viewing or the live stream is still in progress.
            require_signed_urls: (Boolean) Indicates whether the video can be a accessed using the UID. When set to true, a signed token must be generated with a signing key to view the video.
            scale: (Number) The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. 0.0 indicates no scaling (use the size of the image as-is), and 1.0 fills the entire video.
            scheduled_deletion: (String) Indicates the date and time at which the video will be deleted. Omit the field to indicate no change, or include with a null value to remove an existing scheduled deletion. If specified, must be at least 30 days from upload time.
            size: (Number) The size of the media item in bytes.
            state: (String) Specifies the processing status for all quality levels for a video.
            status: (Attributes) Specifies a detailed status for a video. If the state is inprogress or error, the step field returns encoding or manifest. If the state is inprogress, pctComplete returns a number between 0 and 100 to indicate the approximate percent of completion. If the state is error, errorReasonCode and errorReasonText provide additional details. (see below for nested schema)
            thumbnail: (String) The media item's thumbnail URI. This field is omitted until encoding is complete.
            thumbnail_timestamp_pct: (Number) The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.
            uid: (String) A Cloudflare-generated unique identifier for a media item.
            upload_expiry: (String) The date and time when the video upload URL is no longer valid for direct user uploads.
            uploaded: (String) The date and time the media item was uploaded.
            watermark: (Attributes) (see below for nested schema)
            width: (Number) The video width in pixels. A value of -1 means the width is unknown. The value becomes available after the upload and before the video is ready.
        importStatements: []
    cloudflare_stream_audio_track:
        subCategory: ""
        name: cloudflare_stream_audio_track
        title: cloudflare_stream_audio_track Resource - Cloudflare
        examples:
            - name: example_stream_audio_track
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "audio_identifier": "ea95132c15732412d22c1476fa83f27a",
                  "default": true,
                  "identifier": "ea95132c15732412d22c1476fa83f27a",
                  "label": "director commentary"
                }
        argumentDocs:
            account_id: (String) The account identifier tag.
            audio_identifier: (String) The unique identifier for an additional audio track.
            default: (Boolean) Denotes whether the audio track will be played by default in a player.
            identifier: (String) A Cloudflare-generated unique identifier for a media item.
            label: (String) A string to uniquely identify the track amongst other audio track labels for the specified video.
            status: (String) Specifies the processing status of the video.
            uid: (String) A Cloudflare-generated unique identifier for a media item.
        importStatements: []
    cloudflare_stream_caption_language:
        subCategory: ""
        name: cloudflare_stream_caption_language
        title: cloudflare_stream_caption_language Resource - Cloudflare
        examples:
            - name: example_stream_caption_language
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "identifier": "ea95132c15732412d22c1476fa83f27a",
                  "language": "tr"
                }
        argumentDocs:
            account_id: (String) Identifier
            file: (String) The WebVTT file containing the caption or subtitle content.
            generated: (Boolean) Whether the caption was generated via AI.
            identifier: (String) A Cloudflare-generated unique identifier for a media item.
            label: (String) The language label displayed in the native language to users.
            language: (String) The language tag in BCP 47 format.
            status: (String) The status of a generated caption.
        importStatements: []
    cloudflare_stream_download:
        subCategory: ""
        name: cloudflare_stream_download
        title: cloudflare_stream_download Resource - Cloudflare
        examples:
            - name: example_stream_download
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "identifier": "ea95132c15732412d22c1476fa83f27a"
                }
        argumentDocs:
            account_id: (String) Identifier
            identifier: (String) A Cloudflare-generated unique identifier for a media item.
        importStatements: []
    cloudflare_stream_key:
        subCategory: ""
        name: cloudflare_stream_key
        title: cloudflare_stream_key Resource - Cloudflare
        examples:
            - name: example_stream_key
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            account_id: (String) Identifier
            created: (String) The date and time a signing key was created.
            id: (String) Identifier
            jwk: (String) The signing key in JWK format.
            pem: (String) The signing key in PEM format.
        importStatements:
            - $ terraform import cloudflare_stream_key.example '<account_id>'
    cloudflare_stream_live_input:
        subCategory: ""
        name: cloudflare_stream_live_input
        title: cloudflare_stream_live_input Resource - Cloudflare
        examples:
            - name: example_stream_live_input
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "default_creator": "defaultCreator",
                  "delete_recording_after_days": 45,
                  "meta": {
                    "name": "test stream 1"
                  },
                  "recording": {
                    "allowed_origins": [
                      "example.com"
                    ],
                    "hide_live_viewer_count": false,
                    "mode": "off",
                    "require_signed_urls": false,
                    "timeout_seconds": 0
                  }
                }
        argumentDocs:
            account_id: (String) Identifier
            allowed_origins: (List of String) Lists the origins allowed to display videos created with this input. Enter allowed origin domains in an array and use * for wildcard subdomains. An empty array allows videos to be viewed on any origin.
            created: (String) The date and time the live input was created.
            default_creator: (String) Sets the creator ID asssociated with this live input.
            delete_recording_after_days: (Number) Indicates the number of days after which the live inputs recordings will be deleted. When a stream completes and the recording is ready, the value is used to calculate a scheduled deletion date for that recording. Omit the field to indicate no change, or include with a null value to remove an existing scheduled deletion.
            hide_live_viewer_count: (Boolean) Disables reporting the number of live viewers when this property is set to true.
            live_input_identifier: (String) A unique identifier for a live input.
            meta: (String) A user modifiable key-value store used to reference other systems of record for managing live inputs.
            mode: (String) Specifies the recording behavior for the live input. Set this value to off to prevent a recording. Set the value to automatic to begin a recording and transition to on-demand after Stream Live stops receiving input.
            modified: (String) The date and time the live input was last modified.
            passphrase: (String) The secret key to use when streaming via SRT to a live input.
            recording: (Attributes) Records the input to a Cloudflare Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied. (see below for nested schema)
            require_signed_urls: (Boolean) Indicates if a video using the live input has the requireSignedURLs property set. Also enforces access controls on any video recording of the livestream with the live input.
            rtmps: (Attributes) Details for streaming to an live input using RTMPS. (see below for nested schema)
            rtmps_playback: (Attributes) Details for playback from an live input using RTMPS. (see below for nested schema)
            srt: (Attributes) Details for streaming to a live input using SRT. (see below for nested schema)
            srt_playback: (Attributes) Details for playback from an live input using SRT. (see below for nested schema)
            status: (String) The connection status of a live input.
            stream_id: (String) The identifier of the live input to use when streaming via SRT.
            stream_key: (String) The secret key to use when streaming via RTMPS to a live input.
            timeout_seconds: (Number) Determines the amount of time a live input configured in automatic mode should wait before a recording transitions from live to on-demand. 0 is recommended for most use cases and indicates the platform default should be used.
            uid: (String) A unique identifier for a live input.
            url: (String) The RTMPS URL you provide to the broadcaster, which they stream live video to.
            web_rtc: (Attributes) Details for streaming to a live input using WebRTC. (see below for nested schema)
            web_rtc_playback: (Attributes) Details for playback from a live input using WebRTC. (see below for nested schema)
        importStatements: []
    cloudflare_stream_watermark:
        subCategory: ""
        name: cloudflare_stream_watermark
        title: cloudflare_stream_watermark Resource - Cloudflare
        examples:
            - name: example_stream_watermark
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "file": "@/Users/rchen/Downloads/watermark.png",
                  "name": "Marketing Videos",
                  "opacity": 0.75,
                  "padding": 0.1,
                  "position": "center",
                  "scale": 0.1
                }
        argumentDocs:
            account_id: (String) The account identifier tag.
            created: (String) The date and a time a watermark profile was created.
            downloaded_from: (String) The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.
            file: (String) The image file to upload.
            height: (Number) The height of the image in pixels.
            identifier: (String) The unique identifier for a watermark profile.
            name: (String) A short description of the watermark profile.
            opacity: (Number) The translucency of the image. A value of 0.0 makes the image completely transparent, and 1.0 makes the image completely opaque. Note that if the image is already semi-transparent, setting this to 1.0 will not make the image completely opaque.
            padding: (Number) The whitespace between the adjacent edges (determined by position) of the video and the image. 0.0 indicates no padding, and 1.0 indicates a fully padded video width or length, as determined by the algorithm.
            position: '(String) The location of the image. Valid positions are: upperRight, upperLeft, lowerLeft, lowerRight, and center. Note that center ignores the padding parameter.'
            scale: (Number) The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. 0.0 indicates no scaling (use the size of the image as-is), and 1.0 fills the entire video.
            size: (Number) The size of the image in bytes.
            uid: (String) The unique identifier for a watermark profile.
            width: (Number) The width of the image in pixels.
        importStatements: []
    cloudflare_stream_webhook:
        subCategory: ""
        name: cloudflare_stream_webhook
        title: cloudflare_stream_webhook Resource - Cloudflare
        examples:
            - name: example_stream_webhook
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "notification_url": "https://example.com"
                }
        argumentDocs:
            account_id: (String) The account identifier tag.
            notification_url: (String) The URL where webhooks will be sent.
        importStatements: []
    cloudflare_tiered_cache:
        subCategory: ""
        name: cloudflare_tiered_cache
        title: cloudflare_tiered_cache Resource - Cloudflare
        examples:
            - name: example_tiered_cache
              manifest: |-
                {
                  "value": "on",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            editable: (Boolean) Whether the setting is editable
            id: (String) Identifier
            modified_on: (String) Last time this setting was modified.
            value: (String) Enable or disable the Smart Tiered Cache
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_tiered_cache.example '<zone_id>'
    cloudflare_total_tls:
        subCategory: ""
        name: cloudflare_total_tls
        title: cloudflare_total_tls Resource - Cloudflare
        examples:
            - name: example_total_tls
              manifest: |-
                {
                  "certificate_authority": "google",
                  "enabled": true,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            certificate_authority: (String) The Certificate Authority that Total TLS certificates will be issued through.
            enabled: (Boolean) If enabled, Total TLS will order a hostname specific TLS certificate for any proxied A, AAAA, or CNAME record in your zone.
            id: (String) Identifier
            validity_period: (Number) The validity period in days for the certificates ordered via Total TLS.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_total_tls.example '<zone_id>'
    cloudflare_turnstile_widget:
        subCategory: ""
        name: cloudflare_turnstile_widget
        title: cloudflare_turnstile_widget Resource - Cloudflare
        examples:
            - name: example_turnstile_widget
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "bot_fight_mode": false,
                  "clearance_level": "no_clearance",
                  "domains": [
                    "203.0.113.1",
                    "cloudflare.com",
                    "blog.example.com"
                  ],
                  "ephemeral_id": false,
                  "mode": "non-interactive",
                  "name": "blog.cloudflare.com login form",
                  "offlabel": false,
                  "region": "world"
                }
        argumentDocs:
            account_id: (String) Identifier
            bot_fight_mode: |-
                (Boolean) If bot_fight_mode is set to true, Cloudflare issues computationally
                expensive challenges in response to malicious bots (ENT only).
            clearance_level: |-
                (String) If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
                this setting can determine the clearance level to be set
            created_on: (String) When the widget was created.
            domains: (List of String)
            ephemeral_id: (Boolean) Return the Ephemeral ID in /siteverify (ENT only).
            id: (String) Widget item identifier tag.
            mode: (String) Widget Mode
            modified_on: (String) When the widget was modified.
            name: |-
                (String) Human readable widget name. Not unique. Cloudflare suggests that you
                set this to a meaningful string to make it easier to identify your
                widget, and where it is used.
            offlabel: (Boolean) Do not show any Cloudflare branding on the widget (ENT only).
            region: (String) Region where this widget can be used.
            secret: (String) Secret key for this widget.
            sitekey: (String) Widget item identifier tag.
        importStatements:
            - $ terraform import cloudflare_turnstile_widget.example '<account_id>/<sitekey>'
    cloudflare_url_normalization_settings:
        subCategory: ""
        name: cloudflare_url_normalization_settings
        title: cloudflare_url_normalization_settings Resource - Cloudflare
        examples:
            - name: example_url_normalization_settings
              manifest: |-
                {
                  "scope": "incoming",
                  "type": "cloudflare",
                  "zone_id": "9f1839b6152d298aca64c4e906b6d074"
                }
        argumentDocs:
            id: (String) The unique ID of the zone.
            scope: (String) The scope of the URL normalization.
            type: (String) The type of URL normalization performed by Cloudflare.
            zone_id: (String) The unique ID of the zone.
        importStatements:
            - $ terraform import cloudflare_url_normalization_settings.example '<zone_id>'
    cloudflare_user:
        subCategory: ""
        name: cloudflare_user
        title: cloudflare_user Resource - Cloudflare
        examples:
            - name: example_user
              manifest: |-
                {
                  "country": "US",
                  "first_name": "John",
                  "last_name": "Appleseed",
                  "telephone": "+1 123-123-1234",
                  "zipcode": "12345"
                }
        argumentDocs:
            country: (String) The country in which the user lives.
            first_name: (String) User's first name
            last_name: (String) User's last name
            telephone: (String) User's telephone number
            zipcode: (String) The zipcode or postal code where the user lives.
        importStatements: []
    cloudflare_user_agent_blocking_rule:
        subCategory: ""
        name: cloudflare_user_agent_blocking_rule
        title: cloudflare_user_agent_blocking_rule Resource - Cloudflare
        examples:
            - name: example_user_agent_blocking_rule
              manifest: |-
                {
                  "configuration": {
                    "target": "ip",
                    "value": "198.51.100.4"
                  },
                  "mode": "block",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            configuration: (Attributes) The rule configuration. (see below for nested schema)
            mode: (String) The action to apply to a matched request.
            target: (String) The configuration target. You must set the target to ip when specifying an IP address in the rule.
            ua_rule_id: (String) The unique identifier of the User Agent Blocking rule.
            value: (String) The IP address to match. This address will be compared to the IP address of incoming requests.
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_waiting_room:
        subCategory: ""
        name: cloudflare_waiting_room
        title: cloudflare_waiting_room Resource - Cloudflare
        examples:
            - name: example_waiting_room
              manifest: |-
                {
                  "additional_routes": [
                    {
                      "host": "shop2.example.com",
                      "path": "/shop2/checkout"
                    }
                  ],
                  "cookie_attributes": {
                    "samesite": "auto",
                    "secure": "auto"
                  },
                  "cookie_suffix": "abcd",
                  "custom_page_html": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
                  "default_template_language": "en-US",
                  "description": "Production - DO NOT MODIFY",
                  "disable_session_renewal": false,
                  "enabled_origin_commands": [
                    "revoke"
                  ],
                  "host": "shop.example.com",
                  "json_response_enabled": false,
                  "name": "production_webinar",
                  "new_users_per_minute": 200,
                  "path": "/shop/checkout",
                  "queue_all": true,
                  "queueing_method": "fifo",
                  "queueing_status_code": 200,
                  "session_duration": 1,
                  "suspended": true,
                  "total_active_users": 200,
                  "turnstile_action": "log",
                  "turnstile_mode": "off",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            additional_routes: (Attributes List) Only available for the Waiting Room Advanced subscription. Additional hostname and path combinations to which this waiting room will be applied. There is an implied wildcard at the end of the path. The hostname and path combination must be unique to this and all other waiting rooms. (see below for nested schema)
            cookie_attributes: (Attributes) Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position. (see below for nested schema)
            cookie_suffix: (String) Appends a '_' + a custom suffix to the end of Cloudflare Waiting Room's cookie name(__cf_waitingroom). If cookie_suffix is "abcd", the cookie name will be __cf_waitingroom_abcd. This field is required if using additional_routes.
            created_on: (String)
            custom_page_html: '(String) Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:'
            default_template_language: (String) The language of the default page template. If no default_template_language is provided, then en-US (English) will be used.
            description: (String) A note that you can use to add more details about the waiting room.
            disable_session_renewal: (Boolean) Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If true, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If false, a user's session cookie will be automatically renewed on every request.
            enabled_origin_commands: (List of String) A list of enabled origin commands.
            host: (String) The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.
            id: (String) The ID of this resource.
            json_response_enabled: '(Boolean) Only available for the Waiting Room Advanced subscription. If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object with information on the user''s status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property cfWaitingRoom which is an object containing the following fields:'
            modified_on: (String)
            name: (String) A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.
            new_users_per_minute: (Number) Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.
            next_event_prequeue_start_time: (String) An ISO 8601 timestamp that marks when the next event will begin queueing.
            next_event_start_time: (String) An ISO 8601 timestamp that marks when the next event will start.
            path: (String) Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.
            queue_all: (Boolean) If queue_all is true, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.
            queueing_method: '(String) Sets the queueing method used by the waiting room. Changing this parameter from the default queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if queue_all is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:'
            queueing_status_code: (Number) HTTP status code returned to a user while in the queue.
            samesite: (String) Configures the SameSite attribute on the waiting room cookie. Value auto will be translated to lax or none depending if Always Use HTTPS is enabled. Note that when using value none, the secure attribute cannot be set to never.
            secure: (String) Configures the Secure attribute on the waiting room cookie. Value always indicates that the Secure attribute will be set in the Set-Cookie header, never indicates that the Secure attribute will not be set, and auto will set the Secure attribute depending if Always Use HTTPS is enabled.
            session_duration: (Number) Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.
            suspended: (Boolean) Suspends or allows traffic going to the waiting room. If set to true, the traffic will not go to the waiting room.
            total_active_users: (Number) Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.
            turnstile_action: |-
                (String) Which action to take when a bot is detected using Turnstile. log will
                have no impact on queueing behavior, simply keeping track of how many
                bots are detected in Waiting Room Analytics. infinite_queue will send
                bots to a false queueing state, where they will never reach your
                origin. infinite_queue requires Advanced Waiting Room.
            turnstile_mode: |-
                (String) Which Turnstile widget type to use for detecting bot traffic. See
                the Turnstile documentation
                for the definitions of these widget types. Set to off to disable the
                Turnstile integration entirely. Setting this to anything other than
                off or invisible requires Advanced Waiting Room.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_waiting_room.example '<zone_id>/<waiting_room_id>'
    cloudflare_waiting_room_event:
        subCategory: ""
        name: cloudflare_waiting_room_event
        title: cloudflare_waiting_room_event Resource - Cloudflare
        examples:
            - name: example_waiting_room_event
              manifest: |-
                {
                  "custom_page_html": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
                  "description": "Production event - DO NOT MODIFY",
                  "disable_session_renewal": true,
                  "event_end_time": "2021-09-28T17:00:00.000Z",
                  "event_start_time": "2021-09-28T15:30:00.000Z",
                  "name": "production_webinar_event",
                  "new_users_per_minute": 200,
                  "prequeue_start_time": "2021-09-28T15:00:00.000Z",
                  "queueing_method": "random",
                  "session_duration": 1,
                  "shuffle_at_event_start": true,
                  "suspended": true,
                  "total_active_users": 200,
                  "waiting_room_id": "699d98642c564d2e855e9661899b7252",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created_on: (String)
            custom_page_html: (String) If set, the event will override the waiting room's custom_page_html property while it is active. If null, the event will inherit it.
            description: (String) A note that you can use to add more details about the event.
            disable_session_renewal: (Boolean) If set, the event will override the waiting room's disable_session_renewal property while it is active. If null, the event will inherit it.
            event_end_time: (String) An ISO 8601 timestamp that marks the end of the event.
            event_start_time: (String) An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before event_end_time.
            id: (String) The ID of this resource.
            modified_on: (String)
            name: (String) A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.
            new_users_per_minute: (Number) If set, the event will override the waiting room's new_users_per_minute property while it is active. If null, the event will inherit it. This can only be set if the event's total_active_users property is also set.
            prequeue_start_time: (String) An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before event_start_time.
            queueing_method: (String) If set, the event will override the waiting room's queueing_method property while it is active. If null, the event will inherit it.
            session_duration: (Number) If set, the event will override the waiting room's session_duration property while it is active. If null, the event will inherit it.
            shuffle_at_event_start: (Boolean) If enabled, users in the prequeue will be shuffled randomly at the event_start_time. Requires that prequeue_start_time is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the queueing_method during the event respects ordering such as fifo, or else the shuffling may be unnecessary.
            suspended: (Boolean) Suspends or allows an event. If set to true, the event is ignored and traffic will be handled based on the waiting room configuration.
            total_active_users: (Number) If set, the event will override the waiting room's total_active_users property while it is active. If null, the event will inherit it. This can only be set if the event's new_users_per_minute property is also set.
            waiting_room_id: (String)
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_waiting_room_event.example '<zone_id>/<waiting_room_id>/<event_id>'
    cloudflare_waiting_room_rules:
        subCategory: ""
        name: cloudflare_waiting_room_rules
        title: cloudflare_waiting_room_rules Resource - Cloudflare
        examples:
            - name: example_waiting_room_rules
              manifest: |-
                {
                  "rules": [
                    {
                      "action": "bypass_waiting_room",
                      "description": "allow all traffic from 10.20.30.40",
                      "enabled": true,
                      "expression": "ip.src in {10.20.30.40}"
                    }
                  ],
                  "waiting_room_id": "699d98642c564d2e855e9661899b7252",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            action: (String) The action to take when the expression matches.
            description: (String) The description of the rule.
            enabled: (Boolean) When set to true, the rule is enabled.
            expression: (String) Criteria defining when there is a match for the current rule.
            id: (String) The ID of the rule.
            last_updated: (String)
            rules: (Attributes List) (see below for nested schema)
            version: (String) The version of the rule.
            waiting_room_id: (String)
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_waiting_room_rules.example '<zone_id>/<waiting_room_id>'
    cloudflare_waiting_room_settings:
        subCategory: ""
        name: cloudflare_waiting_room_settings
        title: cloudflare_waiting_room_settings Resource - Cloudflare
        examples:
            - name: example_waiting_room_settings
              manifest: |-
                {
                  "search_engine_crawler_bypass": true,
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            id: (String) Identifier
            search_engine_crawler_bypass: |-
                (Boolean) Whether to allow verified search engine crawlers to bypass all waiting rooms on this zone.
                Verified search engine crawlers will not be tracked or counted by the waiting room system,
                and will not appear in waiting room analytics.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_waiting_room_settings.example '<zone_id>'
    cloudflare_web_analytics_rule:
        subCategory: ""
        name: cloudflare_web_analytics_rule
        title: cloudflare_web_analytics_rule Resource - Cloudflare
        examples:
            - name: example_web_analytics_rule
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "host": "example.com",
                  "inclusive": true,
                  "is_paused": false,
                  "paths": [
                    "*"
                  ],
                  "ruleset_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
                }
        argumentDocs:
            account_id: (String) Identifier
            created: (String)
            host: (String)
            id: (String) The Web Analytics rule identifier.
            inclusive: (Boolean) Whether the rule includes or excludes traffic from being measured.
            is_paused: (Boolean) Whether the rule is paused or not.
            paths: (List of String)
            priority: (Number)
            ruleset_id: (String) The Web Analytics ruleset identifier.
        importStatements: []
    cloudflare_web_analytics_site:
        subCategory: ""
        name: cloudflare_web_analytics_site
        title: cloudflare_web_analytics_site Resource - Cloudflare
        examples:
            - name: example_web_analytics_site
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "auto_install": true,
                  "host": "example.com",
                  "zone_tag": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            account_id: (String) Identifier
            auto_install: (Boolean) If enabled, the JavaScript snippet is automatically injected for orange-clouded sites.
            created: (String)
            enabled: (Boolean) Whether the ruleset is enabled.
            host: (String) The hostname to use for gray-clouded sites.
            id: (String) The Web Analytics site identifier.
            inclusive: (Boolean) Whether the rule includes or excludes traffic from being measured.
            is_paused: (Boolean) Whether the rule is paused or not.
            paths: (List of String) The paths the rule will be applied to.
            priority: (Number)
            rules: (Attributes List) A list of rules. (see below for nested schema)
            ruleset: (Attributes) (see below for nested schema)
            site_tag: (String) The Web Analytics site identifier.
            site_token: (String) The Web Analytics site token.
            snippet: (String) Encoded JavaScript snippet.
            zone_name: (String)
            zone_tag: (String) The zone identifier.
        importStatements:
            - $ terraform import cloudflare_web_analytics_site.example '<account_id>/<site_id>'
    cloudflare_web3_hostname:
        subCategory: ""
        name: cloudflare_web3_hostname
        title: cloudflare_web3_hostname Resource - Cloudflare
        examples:
            - name: example_web3_hostname
              manifest: |-
                {
                  "description": "This is my IPFS gateway.",
                  "dnslink": "/ipns/onboarding.ipfs.cloudflare.com",
                  "name": "gateway.example.com",
                  "target": "ethereum",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            created_on: (String)
            description: (String) An optional description of the hostname.
            dnslink: (String) DNSLink value used if the target is ipfs.
            id: (String) Identifier
            modified_on: (String)
            name: (String) The hostname that will point to the target gateway via CNAME.
            status: (String) Status of the hostname's activation.
            target: (String) Target gateway of the hostname.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_web3_hostname.example '<zone_id>/<identifier>'
    cloudflare_workers_cron_trigger:
        subCategory: ""
        name: cloudflare_workers_cron_trigger
        title: cloudflare_workers_cron_trigger Resource - Cloudflare
        examples:
            - name: example_workers_cron_trigger
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "body": [
                    {
                      "cron": "*/30 * * * *"
                    }
                  ],
                  "script_name": "this-is_my_script-01"
                }
        argumentDocs:
            account_id: (String) Identifier
            cron: (String)
            id: (String) Name of the script, used in URLs and route configuration.
            schedules: (Attributes List) (see below for nested schema)
            script_name: (String) Name of the script, used in URLs and route configuration.
        importStatements:
            - $ terraform import cloudflare_workers_cron_trigger.example '<account_id>/<script_name>'
    cloudflare_workers_custom_domain:
        subCategory: ""
        name: cloudflare_workers_custom_domain
        title: cloudflare_workers_custom_domain Resource - Cloudflare
        examples:
            - name: example_workers_custom_domain
              manifest: |-
                {
                  "account_id": "9a7806061c88ada191ed06f989cc3dac",
                  "environment": "production",
                  "hostname": "foo.example.com",
                  "service": "foo",
                  "zone_id": "593c9c94de529bbbfaac7c53ced0447d"
                }
        argumentDocs:
            account_id: (String) Identifer of the account.
            environment: (String) Worker environment associated with the zone and hostname.
            hostname: (String) Hostname of the Worker Domain.
            id: (String) Identifer of the Worker Domain.
            service: (String) Worker service associated with the zone and hostname.
            zone_id: (String) Identifier of the zone.
            zone_name: (String) Name of the zone.
        importStatements:
            - $ terraform import cloudflare_workers_custom_domain.example '<account_id>/<domain_id>'
    cloudflare_workers_deployment:
        subCategory: ""
        name: cloudflare_workers_deployment
        title: cloudflare_workers_deployment Resource - Cloudflare
        examples:
            - name: example_workers_deployment
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "annotations": {
                    "workers_message": "Deploy bug fix."
                  },
                  "script_name": "this-is_my_script-01",
                  "strategy": "percentage",
                  "versions": [
                    {
                      "percentage": 100,
                      "version_id": "bcf48806-b317-4351-9ee7-36e7d557d4de"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String) Identifier
            annotations: (Attributes) (see below for nested schema)
            author_email: (String)
            created_on: (String)
            deployments: (Attributes List) (see below for nested schema)
            id: (String) The ID of this resource.
            percentage: (Number)
            script_name: (String) Name of the script.
            source: (String)
            strategy: (String)
            version_id: (String)
            versions: (Attributes List) (see below for nested schema)
            workers_message: (String) Human-readable message about the deployment. Truncated to 100 bytes.
        importStatements:
            - $ terraform import cloudflare_workers_deployment.example '<account_id>/<script_name>'
    cloudflare_workers_for_platforms_dispatch_namespace:
        subCategory: ""
        name: cloudflare_workers_for_platforms_dispatch_namespace
        title: cloudflare_workers_for_platforms_dispatch_namespace Resource - Cloudflare
        examples:
            - name: example_workers_for_platforms_dispatch_namespace
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "my-dispatch-namespace"
                }
        argumentDocs:
            account_id: (String) Identifier
            created_by: (String) Identifier
            created_on: (String) When the script was created.
            id: (String) Name of the Workers for Platforms dispatch namespace.
            modified_by: (String) Identifier
            modified_on: (String) When the script was last modified.
            name: (String) The name of the dispatch namespace
            namespace_id: (String) API Resource UUID tag.
            namespace_name: (String) Name of the Workers for Platforms dispatch namespace.
            script_count: (Number) The current number of scripts in this Dispatch Namespace
        importStatements:
            - $ terraform import cloudflare_workers_for_platforms_dispatch_namespace.example '<account_id>/<dispatch_namespace>'
    cloudflare_workers_kv:
        subCategory: ""
        name: cloudflare_workers_kv
        title: cloudflare_workers_kv Resource - Cloudflare
        examples:
            - name: example_workers_kv
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "key_name": "My-Key",
                  "metadata": "{\"someMetadataKey\": \"someMetadataValue\"}",
                  "namespace_id": "0f2ac74b498b48028cb68387c421e279",
                  "value": "Some Value"
                }
        argumentDocs:
            account_id: (String) Identifier
            id: (String) A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
            key_name: (String) A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
            metadata: (String) Arbitrary JSON to be associated with a key/value pair.
            namespace_id: (String) Namespace identifier tag.
            value: (String) A byte sequence to be stored, up to 25 MiB in length.
        importStatements:
            - $ terraform import cloudflare_workers_kv.example '<account_id>/<namespace_id>/<key_name>'
    cloudflare_workers_kv_namespace:
        subCategory: ""
        name: cloudflare_workers_kv_namespace
        title: cloudflare_workers_kv_namespace Resource - Cloudflare
        examples:
            - name: example_workers_kv_namespace
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "title": "My Own Namespace"
                }
        argumentDocs:
            account_id: (String) Identifier
            id: (String) Namespace identifier tag.
            supports_url_encoding: (Boolean) True if keys written on the URL will be URL-decoded before storing. For example, if set to "true", a key written on the URL as "%3F" will be stored as "?".
            title: (String) A human-readable string name for a Namespace.
        importStatements:
            - $ terraform import cloudflare_workers_kv_namespace.example '<account_id>/<namespace_id>'
    cloudflare_workers_route:
        subCategory: ""
        name: cloudflare_workers_route
        title: cloudflare_workers_route Resource - Cloudflare
        examples:
            - name: example_workers_route
              manifest: |-
                {
                  "pattern": "example.net/*",
                  "script": "this-is_my_script-01",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            code: (Number)
            errors: (Attributes List) (see below for nested schema)
            id: (String) Identifier
            message: (String)
            messages: (Attributes List) (see below for nested schema)
            pattern: (String)
            route_id: (String) Identifier
            script: (String) Name of the script, used in URLs and route configuration.
            success: (Boolean) Whether the API call was successful
            zone_id: (String) Identifier
        importStatements: []
    cloudflare_workers_script:
        subCategory: ""
        name: cloudflare_workers_script
        title: cloudflare_workers_script Resource - Cloudflare
        examples:
            - name: example_workers_script
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "assets": {
                    "config": {
                      "html_handling": "auto-trailing-slash",
                      "not_found_handling": "none",
                      "run_worker_first": false,
                      "serve_directly": true
                    },
                    "jwt": "jwt"
                  },
                  "bindings": [
                    {
                      "name": "MY_ENV_VAR",
                      "text": "my_data",
                      "type": "plain_text"
                    }
                  ],
                  "body_part": "worker.js",
                  "compatibility_date": "2021-01-01",
                  "compatibility_flags": [
                    "nodejs_compat"
                  ],
                  "keep_assets": false,
                  "keep_bindings": [
                    "string"
                  ],
                  "logpush": false,
                  "main_module": "worker.js",
                  "migrations": {
                    "deleted_classes": [
                      "string"
                    ],
                    "new_classes": [
                      "string"
                    ],
                    "new_sqlite_classes": [
                      "string"
                    ],
                    "new_tag": "v2",
                    "old_tag": "v1",
                    "renamed_classes": [
                      {
                        "from": "from",
                        "to": "to"
                      }
                    ],
                    "transferred_classes": [
                      {
                        "from": "from",
                        "from_script": "from_script",
                        "to": "to"
                      }
                    ]
                  },
                  "observability": {
                    "enabled": true,
                    "head_sampling_rate": 0.1
                  },
                  "placement": {
                    "mode": "smart"
                  },
                  "script_name": "this-is_my_script-01",
                  "tags": [
                    "string"
                  ],
                  "tail_consumers": [
                    {
                      "environment": "production",
                      "namespace": "my-namespace",
                      "service": "my-log-consumer"
                    }
                  ],
                  "usage_model": "standard"
                }
        argumentDocs:
            account_id: (String) Identifier
            assets: (Attributes) Configuration for assets within a Worker (see below for nested schema)
            bindings: '(Attributes List) List of bindings attached to a Worker. You can find more about bindings on our docs: https://developers.cloudflare.com/workers/configuration/multipart-upload-metadata/#bindings. (see below for nested schema)'
            body_part: (String) Name of the part in the multipart request that contains the script (e.g. the file adding a listener to the fetch event). Indicates a service worker syntax Worker.
            bucket_name: (String) R2 bucket to bind to.
            certificate_id: (String) Identifier of the certificate to bind to.
            class_name: (String) The exported class name of the Durable Object.
            compatibility_date: (String) Date indicating targeted support in the Workers runtime. Backwards incompatible fixes to the runtime following this date will not affect this Worker.
            compatibility_flags: (List of String) Flags that enable or disable certain features in the Workers runtime. Used to enable upcoming features or opt in or out of specific changes not included in a compatibility_date.
            config: (Attributes) Configuration for assets within a Worker. (see below for nested schema)
            content: (String) Module or Service Worker contents of the Worker.
            created_on: (String) When the script was created.
            dataset: (String) The dataset name to bind to.
            deleted_classes: (List of String) A list of classes to delete Durable Object namespaces from.
            enabled: (Boolean) Whether observability is enabled for the Worker.
            environment: (String) The environment of the script_name to bind to.
            etag: (String) Hashed script content, can be used in a If-None-Match header when updating.
            from: (String)
            from_script: (String)
            has_assets: (Boolean) Whether a Worker contains assets.
            has_modules: (Boolean) Whether a Worker contains modules.
            head_sampling_rate: (Number) The sampling rate for incoming requests. From 0 to 1 (1 = 100%, 0.1 = 10%). Default is 1.
            html_handling: (String) Determines the redirects and rewrites of requests for HTML content.
            id: (String) Name of the script, used in URLs and route configuration.
            index_name: (String) Name of the Vectorize index to bind to.
            json: (String) JSON data to use.
            jwt: (String) Token provided upon successful upload of all files from a registered manifest.
            keep_assets: (Boolean) Retain assets which exist for a previously uploaded Worker version; used in lieu of providing a completion token.
            keep_bindings: (List of String) List of binding types to keep from previous_upload.
            logpush: (Boolean) Whether Logpush is turned on for the Worker.
            main_module: (String) Name of the part in the multipart request that contains the main module (e.g. the file exporting a fetch handler). Indicates a module syntax Worker.
            migrations: (Attributes) Migrations to apply for Durable Objects associated with this Worker. (see below for nested schema)
            mode: (String) Enables Smart Placement.
            modified_on: (String) When the script was last modified.
            name: (String) A JavaScript variable name for the binding.
            namespace: (String) Namespace to bind to.
            namespace_id: (String) Namespace identifier tag.
            new_classes: (List of String) A list of classes to create Durable Object namespaces from.
            new_sqlite_classes: (List of String) A list of classes to create Durable Object namespaces with SQLite from.
            new_tag: (String) Tag to set as the latest migration tag.
            not_found_handling: (String) Determines the response when a request does not match a static asset, and there is no Worker script.
            observability: (Attributes) Observability settings for the Worker. (see below for nested schema)
            old_tag: (String) Tag used to verify against the latest migration tag for this Worker. If they don't match, the upload is rejected.
            outbound: (Attributes) Outbound worker. (see below for nested schema)
            params: (List of String) Pass information from the Dispatch Worker to the Outbound Worker through the parameters.
            placement: (Attributes) Configuration for Smart Placement. (see below for nested schema)
            queue_name: (String) Name of the Queue to bind to.
            renamed_classes: (Attributes List) A list of classes with Durable Object namespaces that were renamed. (see below for nested schema)
            run_worker_first: (Boolean) When true, requests will always invoke the Worker script. Otherwise, attempt to serve an asset matching the request, falling back to the Worker script.
            script_name: (String) Name of the script, used in URLs and route configuration.
            serve_directly: (Boolean) When true and the incoming request matches an asset, that will be served instead of invoking the Worker script. When false, requests will always invoke the Worker script.
            service: (String) Name of Worker to bind to.
            startup_time_ms: (Number)
            status: (String) Status of Smart Placement.
            steps: (Attributes List) Migrations to apply in order. (see below for nested schema)
            tail_consumers: (Attributes List) List of Workers that will consume logs from the attached Worker. (see below for nested schema)
            text: (String) The text value to use.
            to: (String)
            transferred_classes: (Attributes List) A list of transfers for Durable Object namespaces from a different Worker and class to a class defined in this Worker. (see below for nested schema)
            type: (String) The kind of resource that the binding provides.
            usage_model: (String) Usage model for the Worker invocations.
            worker: (Attributes) Outbound worker. (see below for nested schema)
        importStatements:
            - $ terraform import cloudflare_workers_script.example '<account_id>/<script_name>'
    cloudflare_workers_script_subdomain:
        subCategory: ""
        name: cloudflare_workers_script_subdomain
        title: cloudflare_workers_script_subdomain Resource - Cloudflare
        examples:
            - name: example_workers_script_subdomain
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "enabled": true,
                  "previews_enabled": true,
                  "script_name": "this-is_my_script-01"
                }
        argumentDocs:
            account_id: (String) Identifier
            enabled: (Boolean) Whether the Worker should be available on the workers.dev subdomain.
            previews_enabled: (Boolean) Whether the Worker's Preview URLs should be available on the workers.dev subdomain.
            script_name: (String) Name of the script, used in URLs and route configuration.
        importStatements: []
    cloudflare_workers_secret:
        subCategory: ""
        name: cloudflare_workers_secret
        title: cloudflare_workers_secret Resource - Cloudflare
        examples:
            - name: example_workers_secret
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "dispatch_namespace": "my-dispatch-namespace",
                  "name": "MY_SECRET",
                  "script_name": "this-is_my_script-01",
                  "text": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                  "type": "secret_text"
                }
        argumentDocs:
            account_id: (String) Identifier
            dispatch_namespace: (String) Name of the Workers for Platforms dispatch namespace.
            id: (String) The name of this secret, this is what will be used to access it inside the Worker.
            name: (String) The name of this secret, this is what will be used to access it inside the Worker.
            script_name: (String) Name of the script, used in URLs and route configuration.
            text: (String) The value of the secret.
            type: (String) The type of secret to put.
        importStatements:
            - $ terraform import cloudflare_workers_secret.example '<account_id>/<dispatch_namespace>/<script_name>/<secret_name>'
    cloudflare_zero_trust_access_application:
        subCategory: ""
        name: cloudflare_zero_trust_access_application
        title: cloudflare_zero_trust_access_application Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_application
              manifest: |-
                {
                  "allow_authenticate_via_warp": true,
                  "allowed_idps": [
                    "699d98642c564d2e855e9661899b7252"
                  ],
                  "app_launcher_visible": true,
                  "auto_redirect_to_identity": true,
                  "cors_headers": {
                    "allow_all_headers": true,
                    "allow_all_methods": true,
                    "allow_all_origins": true,
                    "allow_credentials": true,
                    "allowed_headers": [
                      "string"
                    ],
                    "allowed_methods": [
                      "GET"
                    ],
                    "allowed_origins": [
                      "https://example.com"
                    ],
                    "max_age": -1
                  },
                  "custom_deny_message": "custom_deny_message",
                  "custom_deny_url": "custom_deny_url",
                  "custom_non_identity_deny_url": "custom_non_identity_deny_url",
                  "custom_pages": [
                    "699d98642c564d2e855e9661899b7252"
                  ],
                  "destinations": [
                    {
                      "type": "public",
                      "uri": "test.example.com/admin"
                    },
                    {
                      "type": "public",
                      "uri": "test.anotherexample.com/staff"
                    },
                    {
                      "cidr": "10.5.0.0/24",
                      "hostname": "hostname",
                      "l4_protocol": "tcp",
                      "port_range": "80-90",
                      "type": "private",
                      "vnet_id": "vnet_id"
                    },
                    {
                      "cidr": "10.5.0.3/32",
                      "hostname": "hostname",
                      "l4_protocol": "tcp",
                      "port_range": "80",
                      "type": "private",
                      "vnet_id": "vnet_id"
                    },
                    {
                      "cidr": "cidr",
                      "hostname": "hostname",
                      "l4_protocol": "tcp",
                      "port_range": "port_range",
                      "type": "private",
                      "vnet_id": "vnet_id"
                    }
                  ],
                  "domain": "test.example.com/admin",
                  "enable_binding_cookie": true,
                  "http_only_cookie_attribute": true,
                  "logo_url": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg",
                  "name": "Admin Site",
                  "options_preflight_bypass": true,
                  "path_cookie_attribute": true,
                  "policies": [
                    {
                      "id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
                      "precedence": 0
                    }
                  ],
                  "same_site_cookie_attribute": "strict",
                  "scim_config": {
                    "authentication": {
                      "password": "password",
                      "scheme": "httpbasic",
                      "user": "user"
                    },
                    "deactivate_on_delete": true,
                    "enabled": true,
                    "idp_uid": "idp_uid",
                    "mappings": [
                      {
                        "enabled": true,
                        "filter": "title pr or userType eq \"Intern\"",
                        "operations": {
                          "create": true,
                          "delete": true,
                          "update": true
                        },
                        "schema": "urn:ietf:params:scim:schemas:core:2.0:User",
                        "strictness": "strict",
                        "transform_jsonata": "$merge([$, {'userName': $substringBefore($.userName, '@') \u0026 '+test@' \u0026 $substringAfter($.userName, '@')}])"
                      }
                    ],
                    "remote_uri": "remote_uri"
                  },
                  "self_hosted_domains": [
                    "test.example.com/admin",
                    "test.anotherexample.com/staff"
                  ],
                  "service_auth_401_redirect": true,
                  "session_duration": "24h",
                  "skip_interstitial": true,
                  "tags": [
                    "engineers"
                  ],
                  "type": "self_hosted",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            ac_id: (String) The ACID of an Authentication context.
            access_token_lifetime: (String) The lifetime of the OIDC Access Token after creation. Valid units are m,h. Must be greater than or equal to 1m and less than or equal to 24h.
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            allow_all_headers: (Boolean) Allows all HTTP request headers.
            allow_all_methods: (Boolean) Allows all HTTP request methods.
            allow_all_origins: (Boolean) Allows all origins.
            allow_authenticate_via_warp: (Boolean) When set to true, users can authenticate to this application using their WARP session.  When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
            allow_credentials: (Boolean) When set to true, includes credentials (cookies, authorization headers, or TLS client certificates) with requests.
            allow_email_alias: (Boolean) Enables using Identity Provider email alias as SSH username.
            allow_pkce_without_client_secret: (Boolean) If client secret should be required on the token endpoint when authorization_code_with_pkce grant is used.
            allowed_headers: (List of String) Allowed HTTP request headers.
            allowed_idps: (List of String) The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.
            allowed_methods: (List of String) Allowed HTTP request methods.
            allowed_origins: (List of String) Allowed origins.
            any_valid_service_token: (Attributes) An empty object which matches on all service tokens. (see below for nested schema)
            app_launcher_logo_url: (String) The image URL of the logo shown in the App Launcher header.
            app_launcher_url: (String) The URL where this applications tile redirects users
            app_launcher_visible: (Boolean) Displays the application in the App Launcher.
            attribute_name: (String) The name of the SAML attribute.
            attribute_value: (String) The SAML attribute value to look for.
            aud: (String) Audience tag.
            auth_context: (Attributes) (see below for nested schema)
            auth_method: (Attributes) (see below for nested schema)
            auth_type: (String) Optional identifier indicating the authentication protocol used for the saas app. Required for OIDC. Default if unset is "saml"
            authentication: (Attributes) Attributes for configuring HTTP Basic authentication scheme for SCIM provisioning to an application. (see below for nested schema)
            authorization_url: (String) URL used to generate the auth code used during token generation.
            auto_redirect_to_identity: (Boolean) When set to true, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.
            azure_ad: (Attributes) (see below for nested schema)
            bg_color: (String) The background color of the App Launcher page.
            button_color: (String) The background color of the log in button on the landing page.
            button_text_color: (String) The color of the text in the log in button on the landing page.
            certificate: (Attributes) (see below for nested schema)
            cidr: (String) The CIDR range of the destination. Single IPs will be computed as /32.
            client_id: (String) The application client id
            client_secret: (String) The application client secret, only returned on POST request.
            common_name: (Attributes) (see below for nested schema)
            connection_rules: (Attributes) The rules that define how users may connect to the targets secured by your application. (see below for nested schema)
            consumer_service_url: (String) The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.
            cors_headers: (Attributes) (see below for nested schema)
            country_code: (String) The country code that should be matched.
            create: (Boolean) Whether or not this mapping applies to create (POST) operations.
            created_at: (String)
            custom_attributes: (Attributes List) (see below for nested schema)
            custom_claims: (Attributes List) (see below for nested schema)
            custom_deny_message: (String) The custom error message shown to a user when they are denied access to the application.
            custom_deny_url: (String) The custom URL a user is redirected to when they are denied access to the application when failing identity-based rules.
            custom_non_identity_deny_url: (String) The custom URL a user is redirected to when they are denied access to the application when failing non-identity rules.
            custom_pages: (List of String) The custom pages that will be displayed when applicable for this application
            deactivate_on_delete: '(Boolean) If false, propagates DELETE requests to the target application for SCIM resources. If true, sets ''active'' to false on the SCIM resource. Note: Some targets do not support DELETE operations.'
            decision: (String) The action Access will take if a user matches this policy. Infrastructure application policies can only use the Allow action.
            default_relay_state: (String) The URL that the user will be redirected to after a successful login for IDP initiated logins.
            delete: (Boolean) Whether or not this mapping applies to DELETE operations.
            destinations: (Attributes List) List of destinations secured by Access. This supersedes self_hosted_domains to allow for more flexibility in defining different types of domains. If destinations are provided, then self_hosted_domains will be ignored. (see below for nested schema)
            device_posture: (Attributes) (see below for nested schema)
            domain: (String) The primary hostname and path secured by Access. This domain will be displayed if the app is visible in the App Launcher.
            email: (Attributes) (see below for nested schema)
            email_domain: (Attributes) (see below for nested schema)
            email_list: (Attributes) (see below for nested schema)
            enable_binding_cookie: (Boolean) Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.
            enabled: (Boolean) Whether SCIM provisioning is turned on for this application.
            evaluate_url: (String) The API endpoint containing your business logic.
            everyone: (Attributes) An empty object which matches on all users. (see below for nested schema)
            exclude: (Attributes List) Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules. (see below for nested schema)
            external_evaluation: (Attributes) (see below for nested schema)
            filter: (String) A SCIM filter expression that matches resources that should be provisioned to this application.
            footer_links: (Attributes List) The links in the App Launcher footer. (see below for nested schema)
            friendly_name: (String) The SAML FriendlyName of the attribute.
            geo: (Attributes) (see below for nested schema)
            github_organization: (Attributes) (see below for nested schema)
            grant_types: (List of String) The OIDC flows supported by this application
            group: (Attributes) (see below for nested schema)
            group_filter_regex: (String) A regex to filter Cloudflare groups returned in ID token and userinfo endpoint
            gsuite: (Attributes) (see below for nested schema)
            header_bg_color: (String) The background color of the App Launcher header.
            hostname: (String) The hostname of the destination. Matches a valid SNI served by an HTTPS origin.
            http_only_cookie_attribute: (Boolean) Enables the HttpOnly cookie attribute, which increases security against XSS attacks.
            hybrid_and_implicit_options: (Attributes) (see below for nested schema)
            id: (String) UUID
            identity_provider_id: (String) The ID of your Azure identity provider.
            idp_entity_id: (String) The unique identifier for your SaaS application.
            idp_id: (String) The UID of the IdP.
            idp_uid: (String) The UID of the IdP to use as the source for SCIM resources to provision to this application.
            image_url: (String) The URL of the image shown on the landing page.
            include: (Attributes List) Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules. (see below for nested schema)
            integration_uid: (String) The ID of a device posture integration.
            ip: (Attributes) (see below for nested schema)
            ip_list: (Attributes) (see below for nested schema)
            keys_url: (String) The API endpoint containing the key that Access uses to verify that the response came from your API.
            l4_protocol: (String) The L4 protocol of the destination. When omitted, both UDP and TCP traffic will match.
            landing_page_design: (Attributes) The design of the App Launcher landing page shown to users when they log in. (see below for nested schema)
            lifetime: (String) How long a refresh token will be valid for after creation. Valid units are m,h,d. Must be longer than 1m.
            login_method: (Attributes) (see below for nested schema)
            logo_url: (String) The image URL for the logo shown in the App Launcher dashboard.
            mappings: (Attributes List) A list of mappings to apply to SCIM resources before provisioning them in this application. These can transform or filter the resources to be provisioned. (see below for nested schema)
            max_age: (Number) The maximum number of seconds the results of a preflight request can be cached.
            message: (String) The message shown on the landing page.
            name: (String) The name of the application.
            name_by_idp: (Attributes List) A mapping from IdP ID to attribute name. (see below for nested schema)
            name_format: (String) A globally unique name for an identity or service provider.
            name_id_format: (String) The format of the name identifier sent to the SaaS application.
            name_id_transform_jsonata: (String) A JSONata expression that transforms an application's user identities into a NameID value for its SAML assertion. This expression should evaluate to a singular string. The output of this expression can override the name_id_format setting.
            okta: (Attributes) (see below for nested schema)
            operations: (Attributes) Whether or not this mapping applies to creates, updates, or deletes. (see below for nested schema)
            options_preflight_bypass: (Boolean) Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if cors_headers is set.
            password: (String) Password used to authenticate with the remote SCIM service.
            path_cookie_attribute: (Boolean) Enables cookie paths to scope an application's JWT to the application path. If disabled, the JWT will scope to the hostname by default
            policies: (Attributes List) The policies that Access applies to the application, in ascending order of precedence. Items can reference existing policies or create new policies exclusive to the application. (see below for nested schema)
            port: (Number) The port that the targets use for the chosen communication protocol. A port cannot be assigned to multiple protocols.
            port_range: (String) The port range of the destination. Can be a single port or a range of ports. When omitted, all ports will match.
            precedence: (Number) The order of execution for this policy. Must be unique for each policy within an app.
            protocol: (String) The communication protocol your application secures.
            public_key: (String) The Access public certificate that will be used to verify your identity.
            redirect_uris: (List of String) The permitted URL's for Cloudflare to return Authorization codes and Access/ID tokens
            refresh_token_options: (Attributes) (see below for nested schema)
            remote_uri: (String) The base URI for the application's SCIM-compatible API.
            require: (Attributes List) Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules. (see below for nested schema)
            required: (Boolean) If the attribute is required when building a SAML assertion.
            return_access_token_from_authorization_endpoint: (Boolean) If an Access Token should be returned from the OIDC Authorization endpoint
            return_id_token_from_authorization_endpoint: (Boolean) If an ID Token should be returned from the OIDC Authorization endpoint
            saas_app: (Attributes) (see below for nested schema)
            same_site_cookie_attribute: (String) Sets the SameSite cookie setting, which provides increased security against CSRF attacks.
            saml: (Attributes) (see below for nested schema)
            saml_attribute_transform_jsonata: (String) A [JSONata] (https://jsonata.org/) expression that transforms an application's user identities into attribute assertions in the SAML response. The expression can transform id, email, name, and groups values. It can also transform fields listed in the saml_attributes or oidc_fields of the identity provider used to authenticate. The output of this expression must be a JSON object.
            schema: (String) Which SCIM resource type this mapping applies to.
            scheme: (String) The authentication scheme to use when making SCIM requests to this application.
            scim_config: (Attributes) Configuration for provisioning to this application via SCIM. This is currently in closed beta. (see below for nested schema)
            scope: (String) The scope of the claim.
            scopes: (List of String) Define the user information shared with access, "offline_access" scope will be automatically enabled if refresh tokens are enabled
            self_hosted_domains: (List of String) List of public domains that Access will secure. This field is deprecated in favor of destinations and will be supported until November 21, 2025. If destinations are provided, then self_hosted_domains will be ignored.
            service_auth_401_redirect: (Boolean) Returns a 401 status code when the request is blocked by a Service Auth policy.
            service_token: (Attributes) (see below for nested schema)
            session_duration: '(String) The amount of time that tokens issued for this application will be valid. Must be in the format 300ms or 2h45m. Valid time units are: ns, us (or µs), ms, s, m, h.'
            skip_app_launcher_login_page: (Boolean) Determines when to skip the App Launcher landing page.
            skip_interstitial: (Boolean) Enables automatic authentication through cloudflared.
            source: (Attributes) (see below for nested schema)
            source_name: (String) The name of the IdP provided attribute.
            sp_entity_id: (String) A globally unique name for an identity or service provider.
            ssh: (Attributes) The SSH-specific rules that define how users may connect to the targets secured by your application. (see below for nested schema)
            sso_endpoint: (String) The endpoint where your SaaS application will send login requests.
            strictness: (String) The level of adherence to outbound resource schemas when provisioning to this mapping. ‘Strict’ removes unknown values, while ‘passthrough’ passes unknown values to the target.
            tags: (List of String) The tags you want assigned to an application. Tags are used to filter applications in the App Launcher dashboard.
            target_attributes: (Map of List of String) Contains a map of target attribute keys to target attribute values.
            target_criteria: (Attributes List) (see below for nested schema)
            team: (String) The name of the team
            title: (String) The title shown on the landing page.
            token: (String) Token used to authenticate with the remote SCIM service.
            token_id: (String) The ID of a Service Token.
            token_url: (String) URL used to generate the token used to authenticate with the remote SCIM service.
            transform_jsonata: (String) A JSONata expression that transforms the resource before provisioning it in the application.
            type: (String) The application type.
            update: (Boolean) Whether or not this mapping applies to update (PATCH/PUT) operations.
            updated_at: (String)
            uri: (String) The URI of the destination. Public destinations' URIs can include a domain and path with wildcards.
            url: (String) the hyperlink in the footer link.
            user: (String) User name used to authenticate with the remote SCIM service.
            usernames: (List of String) Contains the Unix usernames that may be used when connecting over SSH.
            vnet_id: (String) The VNET ID to match the destination. When omitted, all VNETs will match.
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_application.example '<{accounts|zones}/{account_id|zone_id}>/<app_id>'
    cloudflare_zero_trust_access_custom_page:
        subCategory: ""
        name: cloudflare_zero_trust_access_custom_page
        title: cloudflare_zero_trust_access_custom_page Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_custom_page
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "app_count": 0,
                  "custom_html": "\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eAccess Denied\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e",
                  "name": "name",
                  "type": "identity_denied"
                }
        argumentDocs:
            account_id: (String) Identifier
            app_count: (Number) Number of apps the custom page is assigned to.
            created_at: (String)
            custom_html: (String) Custom page HTML.
            id: (String) UUID
            name: (String) Custom page name.
            type: (String) Custom page type.
            uid: (String) UUID
            updated_at: (String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_custom_page.example '<account_id>/<custom_page_id>'
    cloudflare_zero_trust_access_group:
        subCategory: ""
        name: cloudflare_zero_trust_access_group
        title: cloudflare_zero_trust_access_group Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_group
              manifest: |-
                {
                  "exclude": [
                    {
                      "group": {
                        "id": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
                      }
                    }
                  ],
                  "include": [
                    {
                      "group": {
                        "id": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
                      }
                    }
                  ],
                  "is_default": true,
                  "name": "Allow devs",
                  "require": [
                    {
                      "group": {
                        "id": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
                      }
                    }
                  ],
                  "zone_id": "zone_id"
                }
        argumentDocs:
            ac_id: (String) The ACID of an Authentication context.
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            any_valid_service_token: (Attributes) An empty object which matches on all service tokens. (see below for nested schema)
            attribute_name: (String) The name of the SAML attribute.
            attribute_value: (String) The SAML attribute value to look for.
            auth_context: (Attributes) (see below for nested schema)
            auth_method: (Attributes) (see below for nested schema)
            azure_ad: (Attributes) (see below for nested schema)
            certificate: (Attributes) (see below for nested schema)
            common_name: (Attributes) (see below for nested schema)
            country_code: (String) The country code that should be matched.
            created_at: (String)
            device_posture: (Attributes) (see below for nested schema)
            domain: (String) The email domain to match.
            email: (Attributes) (see below for nested schema)
            email_domain: (Attributes) (see below for nested schema)
            email_list: (Attributes) (see below for nested schema)
            evaluate_url: (String) The API endpoint containing your business logic.
            everyone: (Attributes) An empty object which matches on all users. (see below for nested schema)
            exclude: (Attributes List) Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules. (see below for nested schema)
            external_evaluation: (Attributes) (see below for nested schema)
            geo: (Attributes) (see below for nested schema)
            github_organization: (Attributes) (see below for nested schema)
            group: (Attributes) (see below for nested schema)
            gsuite: (Attributes) (see below for nested schema)
            id: (String) UUID
            identity_provider_id: (String) The ID of your Azure identity provider.
            include: (Attributes List) Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules. (see below for nested schema)
            integration_uid: (String) The ID of a device posture integration.
            ip: (Attributes) (see below for nested schema)
            ip_list: (Attributes) (see below for nested schema)
            is_default: (Boolean) Whether this is the default group
            keys_url: (String) The API endpoint containing the key that Access uses to verify that the response came from your API.
            login_method: (Attributes) (see below for nested schema)
            name: (String) The name of the Access group.
            okta: (Attributes) (see below for nested schema)
            require: (Attributes List) Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules. (see below for nested schema)
            saml: (Attributes) (see below for nested schema)
            service_token: (Attributes) (see below for nested schema)
            team: (String) The name of the team
            token_id: (String) The ID of a Service Token.
            updated_at: (String)
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_group.example '<{accounts|zones}/{account_id|zone_id}>/<group_id>'
    cloudflare_zero_trust_access_identity_provider:
        subCategory: ""
        name: cloudflare_zero_trust_access_identity_provider
        title: cloudflare_zero_trust_access_identity_provider Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_identity_provider
              manifest: |-
                {
                  "config": {
                    "claims": [
                      "email_verified",
                      "preferred_username",
                      "custom_claim_name"
                    ],
                    "client_id": "\u003cyour client id\u003e",
                    "client_secret": "\u003cyour client secret\u003e",
                    "conditional_access_enabled": true,
                    "directory_id": "\u003cyour azure directory uuid\u003e",
                    "email_claim_name": "custom_claim_name",
                    "prompt": "login",
                    "support_groups": true
                  },
                  "name": "Widget Corps IDP",
                  "scim_config": {
                    "enabled": true,
                    "identity_update_behavior": "automatic",
                    "seat_deprovision": true,
                    "user_deprovision": true
                  },
                  "type": "onetimepin",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            apps_domain: (String) Your companies TLD
            attribute_name: (String) attribute name from the IDP
            attributes: (List of String) A list of SAML attribute names that will be added to your signed JWT token and can be used in SAML policy rules.
            auth_url: (String) The authorization_endpoint URL of your IdP
            authorization_server_id: (String) Your okta authorization server id
            centrify_account: (String) Your centrify account url
            centrify_app_id: (String) Your centrify app id
            certs_url: (String) The jwks_uri endpoint of your IdP to allow the IdP keys to sign the tokens
            claims: (List of String) Custom claims
            client_id: (String) Your OAuth Client ID
            client_secret: (String) Your OAuth Client Secret
            conditional_access_enabled: (Boolean) Should Cloudflare try to load authentication contexts from your account
            config: (Attributes) The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our developer documentation. (see below for nested schema)
            directory_id: (String) Your Azure directory uuid
            email_attribute_name: (String) The attribute name for email in the SAML response.
            email_claim_name: (String) The claim name for email in the id_token response.
            enabled: (Boolean) A flag to enable or disable SCIM for the identity provider.
            header_attributes: (Attributes List) Add a list of attribute names that will be returned in the response header from the Access callback. (see below for nested schema)
            header_name: (String) header that will be added on the request to the origin
            id: (String) UUID
            identity_update_behavior: (String) Indicates how a SCIM event updates a user identity used for policy evaluation. Use "automatic" to automatically update a user's identity and augment it with fields from the SCIM user resource. Use "reauth" to force re-authentication on group membership updates, user identity update will only occur after successful re-authentication. With "reauth" identities will not contain fields from the SCIM user resource. With "no_action" identities will not be changed by SCIM updates in any way and users will not be prompted to reauthenticate.
            idp_public_certs: (List of String) X509 certificate to verify the signature in the SAML authentication response
            issuer_url: (String) IdP Entity ID or Issuer URL
            name: (String) The name of the identity provider, shown to users on the login page.
            okta_account: (String) Your okta account url
            onelogin_account: (String) Your OneLogin account url
            ping_env_id: (String) Your PingOne environment identifier
            pkce_enabled: (Boolean) Enable Proof Key for Code Exchange (PKCE)
            prompt: (String) Indicates the type of user interaction that is required. prompt=login forces the user to enter their credentials on that request, negating single-sign on. prompt=none is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error. prompt=select_account interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.
            redirect_url: (String)
            scim_base_url: (String) The base URL of Cloudflare's SCIM V2.0 API endpoint.
            scim_config: (Attributes) The configuration settings for enabling a System for Cross-Domain Identity Management (SCIM) with the identity provider. (see below for nested schema)
            scopes: (List of String) OAuth scopes
            seat_deprovision: (Boolean) A flag to remove a user's seat in Zero Trust when they have been deprovisioned in the Identity Provider.  This cannot be enabled unless user_deprovision is also enabled.
            secret: (String) A read-only token generated when the SCIM integration is enabled for the first time.  It is redacted on subsequent requests.  If you lose this you will need to refresh it at /access/identity_providers/:idpID/refresh_scim_secret.
            sign_request: (Boolean) Sign the SAML authentication request with Access credentials. To verify the signature, use the public key from the Access certs endpoints.
            sso_target_url: (String) URL to send the SAML authentication requests to
            support_groups: (Boolean) Should Cloudflare try to load groups from your account
            token_url: (String) The token_endpoint URL of your IdP
            type: (String) The type of identity provider. To determine the value for a specific provider, refer to our developer documentation.
            user_deprovision: (Boolean) A flag to enable revoking a user's session in Access and Gateway when they have been deprovisioned in the Identity Provider.
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_identity_provider.example '<{accounts|zones}/{account_id|zone_id}>/<identity_provider_id>'
    cloudflare_zero_trust_access_infrastructure_target:
        subCategory: ""
        name: cloudflare_zero_trust_access_infrastructure_target
        title: cloudflare_zero_trust_access_infrastructure_target Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_infrastructure_target
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "hostname": "infra-access-target",
                  "ip": {
                    "ipv4": {
                      "ip_addr": "187.26.29.249",
                      "virtual_network_id": "c77b744e-acc8-428f-9257-6878c046ed55"
                    },
                    "ipv6": {
                      "ip_addr": "64c0:64e8:f0b4:8dbf:7104:72b0:ec8f:f5e0",
                      "virtual_network_id": "c77b744e-acc8-428f-9257-6878c046ed55"
                    }
                  }
                }
        argumentDocs:
            account_id: (String) Account identifier
            created_at: (String) Date and time at which the target was created
            hostname: |-
                (String) A non-unique field that refers to a target. Case insensitive, maximum
                length of 255 characters, supports the use of special characters dash
                and period, does not support spaces, and must start and end with an
                alphanumeric character.
            id: (String) Target identifier
            ip: (Attributes) The IPv4/IPv6 address that identifies where to reach a target (see below for nested schema)
            ip_addr: (String) IP address of the target
            ipv4: (Attributes) The target's IPv4 address (see below for nested schema)
            ipv6: (Attributes) The target's IPv6 address (see below for nested schema)
            modified_at: (String) Date and time at which the target was modified
            virtual_network_id: (String) (optional) Private virtual network identifier for the target. If omitted, the default virtual network ID will be used.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_infrastructure_target.example '<account_id>/<target_id>'
    cloudflare_zero_trust_access_key_configuration:
        subCategory: ""
        name: cloudflare_zero_trust_access_key_configuration
        title: cloudflare_zero_trust_access_key_configuration Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_key_configuration
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "key_rotation_interval_days": 30
                }
        argumentDocs:
            account_id: (String) Identifier
            days_until_next_rotation: (Number) The number of days until the next key rotation.
            id: (String) Identifier
            key_rotation_interval_days: (Number) The number of days between key rotations.
            last_key_rotation_at: (String) The timestamp of the previous key rotation.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_key_configuration.example '<account_id>'
    cloudflare_zero_trust_access_mtls_certificate:
        subCategory: ""
        name: cloudflare_zero_trust_access_mtls_certificate
        title: cloudflare_zero_trust_access_mtls_certificate Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_mtls_certificate
              manifest: |-
                {
                  "associated_hostnames": [
                    "admin.example.com"
                  ],
                  "certificate": "  -----BEGIN CERTIFICATE-----\n  MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10\n  DrUtmu/B\n  -----END CERTIFICATE-----\n",
                  "name": "Allow devs",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            associated_hostnames: (List of String) The hostnames of the applications that will use this certificate.
            certificate: (String) The certificate content.
            created_at: (String)
            expires_on: (String)
            fingerprint: (String) The MD5 fingerprint of the certificate.
            id: (String) The ID of the application that will use this certificate.
            name: (String) The name of the certificate.
            updated_at: (String)
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_mtls_certificate.example '<{accounts|zones}/{account_id|zone_id}>/<certificate_id>'
    cloudflare_zero_trust_access_mtls_hostname_settings:
        subCategory: ""
        name: cloudflare_zero_trust_access_mtls_hostname_settings
        title: cloudflare_zero_trust_access_mtls_hostname_settings Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_mtls_hostname_settings
              manifest: |-
                {
                  "settings": [
                    {
                      "china_network": false,
                      "client_certificate_forwarding": true,
                      "hostname": "admin.example.com"
                    }
                  ],
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            china_network: (Boolean) Request client certificates for this hostname in China. Can only be set to true if this zone is china network enabled.
            client_certificate_forwarding: (Boolean) Client Certificate Forwarding is a feature that takes the client cert provided by the eyeball to the edge, and forwards it to the origin as a HTTP header to allow logging on the origin.
            hostname: (String) The hostname that these settings apply to.
            settings: (Attributes List) (see below for nested schema)
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements: []
    cloudflare_zero_trust_access_policy:
        subCategory: ""
        name: cloudflare_zero_trust_access_policy
        title: cloudflare_zero_trust_access_policy Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_policy
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "approval_groups": [
                    {
                      "approvals_needed": 1,
                      "email_addresses": [
                        "test1@cloudflare.com",
                        "test2@cloudflare.com"
                      ],
                      "email_list_uuid": "email_list_uuid"
                    },
                    {
                      "approvals_needed": 3,
                      "email_addresses": [
                        "test@cloudflare.com",
                        "test2@cloudflare.com"
                      ],
                      "email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34"
                    }
                  ],
                  "approval_required": true,
                  "decision": "allow",
                  "exclude": [
                    {
                      "group": {
                        "id": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
                      }
                    }
                  ],
                  "include": [
                    {
                      "group": {
                        "id": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
                      }
                    }
                  ],
                  "isolation_required": false,
                  "name": "Allow devs",
                  "purpose_justification_prompt": "Please enter a justification for entering this protected domain.",
                  "purpose_justification_required": true,
                  "require": [
                    {
                      "group": {
                        "id": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
                      }
                    }
                  ],
                  "session_duration": "24h"
                }
        argumentDocs:
            ac_id: (String) The ACID of an Authentication context.
            account_id: (String) Identifier
            any_valid_service_token: (Attributes) An empty object which matches on all service tokens. (see below for nested schema)
            app_count: (Number) Number of access applications currently using this policy.
            approval_groups: (Attributes List) Administrators who can approve a temporary authentication request. (see below for nested schema)
            approval_required: (Boolean) Requires the user to request access from an administrator at the start of each session.
            approvals_needed: (Number) The number of approvals needed to obtain access.
            attribute_name: (String) The name of the SAML attribute.
            attribute_value: (String) The SAML attribute value to look for.
            auth_context: (Attributes) (see below for nested schema)
            auth_method: (Attributes) (see below for nested schema)
            azure_ad: (Attributes) (see below for nested schema)
            certificate: (Attributes) (see below for nested schema)
            common_name: (Attributes) (see below for nested schema)
            country_code: (String) The country code that should be matched.
            created_at: (String)
            decision: (String) The action Access will take if a user matches this policy. Infrastructure application policies can only use the Allow action.
            device_posture: (Attributes) (see below for nested schema)
            domain: (String) The email domain to match.
            email: (Attributes) (see below for nested schema)
            email_addresses: (List of String) A list of emails that can approve the access request.
            email_domain: (Attributes) (see below for nested schema)
            email_list: (Attributes) (see below for nested schema)
            email_list_uuid: (String) The UUID of an re-usable email list.
            evaluate_url: (String) The API endpoint containing your business logic.
            everyone: (Attributes) An empty object which matches on all users. (see below for nested schema)
            exclude: (Attributes List) Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules. (see below for nested schema)
            external_evaluation: (Attributes) (see below for nested schema)
            geo: (Attributes) (see below for nested schema)
            github_organization: (Attributes) (see below for nested schema)
            group: (Attributes) (see below for nested schema)
            gsuite: (Attributes) (see below for nested schema)
            id: (String) The UUID of the policy
            identity_provider_id: (String) The ID of your Azure identity provider.
            include: (Attributes List) Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules. (see below for nested schema)
            integration_uid: (String) The ID of a device posture integration.
            ip: (Attributes) (see below for nested schema)
            ip_list: (Attributes) (see below for nested schema)
            isolation_required: (Boolean) Require this application to be served in an isolated browser for users matching this policy. 'Client Web Isolation' must be on for the account in order to use this feature.
            keys_url: (String) The API endpoint containing the key that Access uses to verify that the response came from your API.
            login_method: (Attributes) (see below for nested schema)
            name: (String) The name of the Access policy.
            okta: (Attributes) (see below for nested schema)
            purpose_justification_prompt: (String) A custom message that will appear on the purpose justification screen.
            purpose_justification_required: (Boolean) Require users to enter a justification when they log in to the application.
            require: (Attributes List) Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules. (see below for nested schema)
            reusable: (Boolean)
            saml: (Attributes) (see below for nested schema)
            service_token: (Attributes) (see below for nested schema)
            session_duration: '(String) The amount of time that tokens issued for the application will be valid. Must be in the format 300ms or 2h45m. Valid time units are: ns, us (or µs), ms, s, m, h.'
            team: (String) The name of the team
            token_id: (String) The ID of a Service Token.
            updated_at: (String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_policy.example '<account_id>/<policy_id>'
    cloudflare_zero_trust_access_service_token:
        subCategory: ""
        name: cloudflare_zero_trust_access_service_token
        title: cloudflare_zero_trust_access_service_token Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_service_token
              manifest: |-
                {
                  "duration": "60m",
                  "name": "CI/CD token",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            client_id: (String) The Client ID for the service token. Access will check for this value in the CF-Access-Client-ID request header.
            client_secret: (String) The Client Secret for the service token. Access will check for this value in the CF-Access-Client-Secret request header.
            created_at: (String)
            duration: '(String) The duration for how long the service token will be valid. Must be in the format 300ms or 2h45m. Valid time units are: ns, us (or µs), ms, s, m, h. The default is 1 year in hours (8760h).'
            expires_at: (String)
            id: (String) The ID of the service token.
            last_seen_at: (String)
            name: (String) The name of the service token.
            updated_at: (String)
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_service_token.example '<{accounts|zones}/{account_id|zone_id}>/<service_token_id>'
    cloudflare_zero_trust_access_short_lived_certificate:
        subCategory: ""
        name: cloudflare_zero_trust_access_short_lived_certificate
        title: cloudflare_zero_trust_access_short_lived_certificate Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_short_lived_certificate
              manifest: |-
                {
                  "app_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            app_id: (String) UUID
            aud: (String) The Application Audience (AUD) tag. Identifies the application associated with the CA.
            id: (String) UUID
            public_key: (String) The public key to add to your SSH server configuration.
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_short_lived_certificate.example '<{accounts|zones}/{account_id|zone_id}>/<app_id>'
    cloudflare_zero_trust_access_tag:
        subCategory: ""
        name: cloudflare_zero_trust_access_tag
        title: cloudflare_zero_trust_access_tag Resource - Cloudflare
        examples:
            - name: example_zero_trust_access_tag
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "name": "engineers"
                }
        argumentDocs:
            account_id: (String) Identifier
            app_count: (Number) The number of applications that have this tag
            created_at: (String)
            id: (String) The name of the tag
            name: (String) The name of the tag
            updated_at: (String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_access_tag.example '<account_id>/<tag_name>'
    cloudflare_zero_trust_device_custom_profile:
        subCategory: ""
        name: cloudflare_zero_trust_device_custom_profile
        title: cloudflare_zero_trust_device_custom_profile Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_custom_profile
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "allow_mode_switch": true,
                  "allow_updates": true,
                  "allowed_to_leave": true,
                  "auto_connect": 0,
                  "captive_portal": 180,
                  "description": "Policy for test teams.",
                  "disable_auto_fallback": true,
                  "enabled": true,
                  "exclude_office_ips": true,
                  "lan_allow_minutes": 30,
                  "lan_allow_subnet_size": 24,
                  "match": "user.identity == \"test@cloudflare.com\"",
                  "name": "Allow Developers",
                  "precedence": 100,
                  "service_mode_v2": {
                    "mode": "proxy",
                    "port": 3000
                  },
                  "support_url": "https://1.1.1.1/help",
                  "switch_locked": true,
                  "tunnel_protocol": "wireguard"
                }
        argumentDocs:
            account_id: (String)
            address: (String) The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.
            allow_mode_switch: (Boolean) Whether to allow the user to switch WARP between modes.
            allow_updates: (Boolean) Whether to receive update notifications when a new version of the client is available.
            allowed_to_leave: (Boolean) Whether to allow devices to leave the organization.
            auto_connect: (Number) The amount of time in seconds to reconnect after having been disabled.
            captive_portal: (Number) Turn on the captive portal after the specified amount of time.
            default: (Boolean) Whether the policy is the default policy for an account.
            description: (String) A description of the policy.
            disable_auto_fallback: (Boolean) If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to true.
            dns_server: (List of String) A list of IP addresses to handle domain resolution.
            enabled: (Boolean) Whether the policy will be applied to matching devices.
            exclude: (Attributes List) (see below for nested schema)
            exclude_office_ips: (Boolean) Whether to add Microsoft IPs to Split Tunnel exclusions.
            fallback_domains: (Attributes List) (see below for nested schema)
            gateway_unique_id: (String)
            host: (String) The domain name to exclude from the tunnel. If host is present, address must not be present.
            id: (String) Device ID.
            include: (Attributes List) (see below for nested schema)
            lan_allow_minutes: (Number) The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
            lan_allow_subnet_size: (Number) The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
            match: (String) The wirefilter expression to match devices.
            mode: (String) The mode to run the WARP client under.
            name: (String) The name of the device settings profile.
            policy_id: (String) Device ID.
            port: (Number) The port number when used with proxy mode.
            precedence: (Number) The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.
            service_mode_v2: (Attributes) (see below for nested schema)
            suffix: (String) The domain suffix to match when resolving locally.
            support_url: (String) The URL to launch when the Send Feedback button is clicked.
            switch_locked: (Boolean) Whether to allow the user to turn off the WARP switch and disconnect the client.
            target_tests: (Attributes List) (see below for nested schema)
            tunnel_protocol: (String) Determines which tunnel protocol to use.
        importStatements:
            - $ terraform import cloudflare_zero_trust_device_custom_profile.example '<account_id>/<policy_id>'
    cloudflare_zero_trust_device_custom_profile_local_domain_fallback:
        subCategory: ""
        name: cloudflare_zero_trust_device_custom_profile_local_domain_fallback
        title: cloudflare_zero_trust_device_custom_profile_local_domain_fallback Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_custom_profile_local_domain_fallback
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "domains": [
                    {
                      "description": "Domain bypass for local development",
                      "dns_server": [
                        "1.1.1.1"
                      ],
                      "suffix": "example.com"
                    }
                  ],
                  "policy_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
                }
        argumentDocs:
            account_id: (String)
            description: (String) A description of the fallback domain, displayed in the client UI.
            dns_server: (List of String) A list of IP addresses to handle domain resolution.
            domains: (Attributes List) (see below for nested schema)
            id: (String) Device ID.
            policy_id: (String) Device ID.
            suffix: (String) The domain suffix to match when resolving locally.
        importStatements:
            - $ terraform import cloudflare_zero_trust_device_custom_profile_local_domain_fallback.example '<account_id>/<policy_id>'
    cloudflare_zero_trust_device_default_profile:
        subCategory: ""
        name: cloudflare_zero_trust_device_default_profile
        title: cloudflare_zero_trust_device_default_profile Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_default_profile
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "allow_mode_switch": true,
                  "allow_updates": true,
                  "allowed_to_leave": true,
                  "auto_connect": 0,
                  "captive_portal": 180,
                  "disable_auto_fallback": true,
                  "exclude_office_ips": true,
                  "service_mode_v2": {
                    "mode": "proxy",
                    "port": 3000
                  },
                  "support_url": "https://1.1.1.1/help",
                  "switch_locked": true,
                  "tunnel_protocol": "wireguard"
                }
        argumentDocs:
            account_id: (String)
            address: (String) The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.
            allow_mode_switch: (Boolean) Whether to allow the user to switch WARP between modes.
            allow_updates: (Boolean) Whether to receive update notifications when a new version of the client is available.
            allowed_to_leave: (Boolean) Whether to allow devices to leave the organization.
            auto_connect: (Number) The amount of time in seconds to reconnect after having been disabled.
            captive_portal: (Number) Turn on the captive portal after the specified amount of time.
            default: (Boolean) Whether the policy will be applied to matching devices.
            description: (String) A description of the Split Tunnel item, displayed in the client UI.
            disable_auto_fallback: (Boolean) If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to true.
            dns_server: (List of String) A list of IP addresses to handle domain resolution.
            enabled: (Boolean) Whether the policy will be applied to matching devices.
            exclude: (Attributes List) (see below for nested schema)
            exclude_office_ips: (Boolean) Whether to add Microsoft IPs to Split Tunnel exclusions.
            fallback_domains: (Attributes List) (see below for nested schema)
            gateway_unique_id: (String)
            host: (String) The domain name to exclude from the tunnel. If host is present, address must not be present.
            id: (String) The ID of this resource.
            include: (Attributes List) (see below for nested schema)
            mode: (String) The mode to run the WARP client under.
            port: (Number) The port number when used with proxy mode.
            service_mode_v2: (Attributes) (see below for nested schema)
            suffix: (String) The domain suffix to match when resolving locally.
            support_url: (String) The URL to launch when the Send Feedback button is clicked.
            switch_locked: (Boolean) Whether to allow the user to turn off the WARP switch and disconnect the client.
            tunnel_protocol: (String) Determines which tunnel protocol to use.
        importStatements:
            - $ terraform import cloudflare_zero_trust_device_default_profile.example '<account_id>'
    cloudflare_zero_trust_device_default_profile_certificates:
        subCategory: ""
        name: cloudflare_zero_trust_device_default_profile_certificates
        title: cloudflare_zero_trust_device_default_profile_certificates Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_default_profile_certificates
              manifest: |-
                {
                  "enabled": true,
                  "zone_id": "699d98642c564d2e855e9661899b7252"
                }
        argumentDocs:
            enabled: (Boolean) The current status of the device policy certificate provisioning feature for WARP clients.
            zone_id: (String)
        importStatements: []
    cloudflare_zero_trust_device_default_profile_local_domain_fallback:
        subCategory: ""
        name: cloudflare_zero_trust_device_default_profile_local_domain_fallback
        title: cloudflare_zero_trust_device_default_profile_local_domain_fallback Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_default_profile_local_domain_fallback
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "domains": [
                    {
                      "description": "Domain bypass for local development",
                      "dns_server": [
                        "1.1.1.1"
                      ],
                      "suffix": "example.com"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String)
            description: (String) A description of the fallback domain, displayed in the client UI.
            dns_server: (List of String) A list of IP addresses to handle domain resolution.
            domains: (Attributes List) (see below for nested schema)
            suffix: (String) The domain suffix to match when resolving locally.
        importStatements: []
    cloudflare_zero_trust_device_managed_networks:
        subCategory: ""
        name: cloudflare_zero_trust_device_managed_networks
        title: cloudflare_zero_trust_device_managed_networks Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_managed_networks
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "config": {
                    "sha256": "b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c",
                    "tls_sockaddr": "foo.bar:1234"
                  },
                  "name": "managed-network-1",
                  "type": "tls"
                }
        argumentDocs:
            account_id: (String)
            config: (Attributes) The configuration object containing information for the WARP client to detect the managed network. (see below for nested schema)
            id: (String) API UUID.
            name: (String) The name of the device managed network. This name must be unique.
            network_id: (String) API UUID.
            sha256: (String) The SHA-256 hash of the TLS certificate presented by the host found at tls_sockaddr. If absent, regular certificate verification (trusted roots, valid timestamp, etc) will be used to validate the certificate.
            tls_sockaddr: (String) A network address of the form "host:port" that the WARP client will use to detect the presence of a TLS host.
            type: (String) The type of device managed network.
        importStatements:
            - $ terraform import cloudflare_zero_trust_device_managed_networks.example '<account_id>/<network_id>'
    cloudflare_zero_trust_device_posture_integration:
        subCategory: ""
        name: cloudflare_zero_trust_device_posture_integration
        title: cloudflare_zero_trust_device_posture_integration Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_posture_integration
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "config": {
                    "api_url": "https://as123.awmdm.com/API",
                    "auth_url": "https://na.uemauth.vmwservices.com/connect/token",
                    "client_id": "example client id",
                    "client_secret": "example client secret"
                  },
                  "interval": "10m",
                  "name": "My Workspace One Integration",
                  "type": "workspace_one"
                }
        argumentDocs:
            access_client_id: (String) If present, this id will be passed in the CF-Access-Client-ID header when hitting the api_url
            access_client_secret: (String) If present, this secret will be passed in the CF-Access-Client-Secret header when hitting the api_url
            account_id: (String)
            api_url: (String) The Workspace One API URL provided in the Workspace One Admin Dashboard.
            auth_url: (String) The Workspace One Authorization URL depending on your region.
            client_id: (String) The Workspace One client ID provided in the Workspace One Admin Dashboard.
            client_key: (String) The Uptycs client secret.
            client_secret: (String) The Workspace One client secret provided in the Workspace One Admin Dashboard.
            config: (Attributes) The configuration object containing third-party integration information. (see below for nested schema)
            customer_id: (String) The Crowdstrike customer ID.
            id: (String) API UUID.
            interval: (String) The interval between each posture check with the third-party API. Use m for minutes (e.g. 5m) and h for hours (e.g. 12h).
            name: (String) The name of the device posture integration.
            type: (String) The type of device posture integration.
        importStatements:
            - $ terraform import cloudflare_zero_trust_device_posture_integration.example '<account_id>/<integration_id>'
    cloudflare_zero_trust_device_posture_rule:
        subCategory: ""
        name: cloudflare_zero_trust_device_posture_rule
        title: cloudflare_zero_trust_device_posture_rule Resource - Cloudflare
        examples:
            - name: example_zero_trust_device_posture_rule
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "description": "The rule for admin serial numbers",
                  "expiration": "1h",
                  "input": {
                    "exists": true,
                    "operating_system": "windows",
                    "path": "/bin/cat",
                    "sha256": "https://api.us-2.crowdstrike.com",
                    "thumbprint": "0aabab210bdb998e9cf45da2c9ce352977ab531c681b74cf1e487be1bbe9fe6e"
                  },
                  "match": [
                    {
                      "platform": "windows"
                    }
                  ],
                  "name": "Admin Serial Numbers",
                  "schedule": "1h",
                  "type": "file"
                }
        argumentDocs:
            account_id: (String)
            active_threats: (Number) The Number of active threats.
            certificate_id: (String) UUID of Cloudflare managed certificate.
            check_disks: (List of String) List of volume names to be checked for encryption.
            check_private_key: (Boolean) Confirm the certificate was not imported from another device. We recommend keeping this enabled unless the certificate was deployed without a private key.
            cn: (String) Common Name that is protected by the certificate
            compliance_status: (String) Compliance Status
            connection_id: (String) Posture Integration ID.
            count_operator: (String) Count Operator
            description: (String) The description of the device posture rule.
            domain: (String) Domain
            eid_last_seen: (String) For more details on eid last seen, refer to the Tanium documentation.
            enabled: (Boolean) Enabled
            exists: (Boolean) Whether or not file exists
            expiration: (String) Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
            extended_key_usage: (List of String) List of values indicating purposes for which the certificate public key can be used
            id: (String) API UUID.
            infected: (Boolean) Whether device is infected.
            input: (Attributes) The value to be checked against. (see below for nested schema)
            is_active: (Boolean) Whether device is active.
            issue_count: (String) The Number of Issues.
            last_seen: (String) For more details on last seen, please refer to the Crowdstrike documentation.
            locations: (Attributes) (see below for nested schema)
            match: (Attributes List) The conditions that the client must match to run the rule. (see below for nested schema)
            name: (String) The name of the device posture rule.
            network_status: (String) Network status of device.
            operating_system: (String) Operating system
            operational_state: (String) Agent operational state.
            operator: (String) operator
            os: (String) Os Version
            os_distro_name: (String) Operating System Distribution Name (linux only)
            os_distro_revision: (String) Version of OS Distribution (linux only)
            os_version_extra: (String) Additional version data. For Mac or iOS, the Product Version Extra. For Linux, the kernel release version. (Mac, iOS, and Linux only)
            overall: (String) overall
            path: (String) File path.
            paths: (List of String) List of paths to check for client certificate on linux.
            platform: (String)
            require_all: (Boolean) Whether to check all disks for encryption.
            risk_level: (String) For more details on risk level, refer to the Tanium documentation.
            schedule: '(String) Polling frequency for the WARP client posture check. Default: 5m (poll every five minutes). Minimum: 1m.'
            score: (Number) A value between 0-100 assigned to devices set by the 3rd party posture provider.
            score_operator: (String) Score Operator
            sensor_config: (String) SensorConfig
            sha256: (String) SHA-256.
            state: (String) For more details on state, please refer to the Crowdstrike documentation.
            thumbprint: (String) Signing certificate thumbprint.
            total_score: (Number) For more details on total score, refer to the Tanium documentation.
            trust_stores: (List of String) List of trust stores to check for client certificate.
            type: (String) The type of device posture rule.
            version: (String) Version of OS
            version_operator: (String) Version Operator
        importStatements:
            - $ terraform import cloudflare_zero_trust_device_posture_rule.example '<account_id>/<rule_id>'
    cloudflare_zero_trust_dex_test:
        subCategory: ""
        name: cloudflare_zero_trust_dex_test
        title: cloudflare_zero_trust_dex_test Resource - Cloudflare
        examples:
            - name: example_zero_trust_dex_test
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "data": {
                    "host": "https://dash.cloudflare.com",
                    "kind": "http",
                    "method": "GET"
                  },
                  "description": "Checks the dash endpoint every 30 minutes",
                  "enabled": true,
                  "interval": "30m",
                  "name": "HTTP dash health check",
                  "target_policies": [
                    {
                      "default": true,
                      "id": "id",
                      "name": "name"
                    }
                  ],
                  "targeted": true
                }
        argumentDocs:
            account_id: (String)
            data: (Attributes) The configuration object which contains the details for the WARP client to conduct the test. (see below for nested schema)
            default: (Boolean) Whether the profile is the account default
            description: (String) Additional details about the test.
            enabled: (Boolean) Determines whether or not the test is active.
            host: (String) The desired endpoint to test.
            id: (String) The unique identifier for the test.
            interval: (String) How often the test will run.
            kind: (String) The type of test.
            method: (String) The HTTP request method type.
            name: (String) The name of the DEX test. Must be unique.
            target_policies: (Attributes List) Device settings profiles targeted by this test (see below for nested schema)
            targeted: (Boolean)
            test_id: (String) The unique identifier for the test.
        importStatements:
            - $ terraform import cloudflare_zero_trust_dex_test.example '<account_id>/<dex_test_id>'
    cloudflare_zero_trust_dlp_custom_profile:
        subCategory: ""
        name: cloudflare_zero_trust_dlp_custom_profile
        title: cloudflare_zero_trust_dlp_custom_profile Resource - Cloudflare
        examples:
            - name: example_zero_trust_dlp_custom_profile
              manifest: |-
                {
                  "account_id": "account_id",
                  "profiles": [
                    {
                      "ai_context_enabled": true,
                      "allowed_match_count": 5,
                      "confidence_threshold": "confidence_threshold",
                      "context_awareness": {
                        "enabled": true,
                        "skip": {
                          "files": true
                        }
                      },
                      "description": "description",
                      "entries": [
                        {
                          "enabled": true,
                          "name": "name",
                          "pattern": {
                            "regex": "regex",
                            "validation": "luhn"
                          }
                        }
                      ],
                      "name": "name",
                      "ocr_enabled": true,
                      "shared_entries": [
                        {
                          "enabled": true,
                          "entry_id": "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e",
                          "entry_type": "custom"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            account_id: (String)
            ai_context_enabled: (Boolean)
            allowed_match_count: (Number) Related DLP policies will trigger when the match count exceeds the number set.
            confidence_threshold: (String)
            context_awareness: (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
            created_at: (String) When the profile was created
            description: (String) The description of the profile
            enabled: (Boolean) If true, scan the context of predefined entries to only return matches surrounded by keywords.
            entries: (Attributes List) (see below for nested schema)
            entry_id: (String)
            entry_type: (String)
            files: (Boolean) If the content type is a file, skip context analysis and return all matches.
            id: (String) The id of the profile (uuid)
            name: (String)
            ocr_enabled: (Boolean)
            open_access: (Boolean) Whether this profile can be accessed by anyone
            pattern: (Attributes) (see below for nested schema)
            profiles: (Attributes List) (see below for nested schema)
            regex: (String)
            shared_entries: (Attributes List) Entries from other profiles (e.g. pre-defined Cloudflare profiles, or your Microsoft Information Protection profiles). (see below for nested schema)
            skip: (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
            type: (String)
            updated_at: (String) When the profile was lasted updated
            validation: (String)
            words: (List of String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_dlp_custom_profile.example '<account_id>/<profile_id>'
    cloudflare_zero_trust_dlp_dataset:
        subCategory: ""
        name: cloudflare_zero_trust_dlp_dataset
        title: cloudflare_zero_trust_dlp_dataset Resource - Cloudflare
        examples:
            - name: example_zero_trust_dlp_dataset
              manifest: |-
                {
                  "account_id": "account_id",
                  "description": "description",
                  "encoding_version": 0,
                  "name": "name",
                  "secret": true
                }
        argumentDocs:
            account_id: (String)
            columns: (Attributes List) (see below for nested schema)
            created_at: (String)
            dataset: (Attributes) (see below for nested schema)
            dataset_id: (String)
            description: (String) The description of the dataset
            encoding_version: (Number) Dataset encoding version
            entry_id: (String)
            header_name: (String)
            id: (String) The ID of this resource.
            max_cells: (Number)
            name: (String)
            num_cells: (Number)
            secret: (Boolean) Generate a secret dataset.
            status: (String)
            updated_at: (String) When the dataset was last updated.
            upload_status: (String)
            uploads: (Attributes List) (see below for nested schema)
            version: (Number) The version to use when uploading the dataset.
        importStatements: []
    cloudflare_zero_trust_dlp_entry:
        subCategory: ""
        name: cloudflare_zero_trust_dlp_entry
        title: cloudflare_zero_trust_dlp_entry Resource - Cloudflare
        examples:
            - name: example_zero_trust_dlp_entry
              manifest: |-
                {
                  "account_id": "account_id",
                  "enabled": true,
                  "name": "name",
                  "pattern": {
                    "regex": "regex",
                    "validation": "luhn"
                  },
                  "profile_id": "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"
                }
        argumentDocs:
            account_id: (String)
            ai_context_available: (Boolean)
            available: |-
                (Boolean) Indicates whether this entry can be made more or less sensitive by setting a confidence threshold.
                Profiles that use an entry with available set to true can use confidence thresholds
            confidence: (Attributes) (see below for nested schema)
            created_at: (String)
            enabled: (Boolean)
            id: (String) The ID of this resource.
            name: (String)
            pattern: (Attributes) (see below for nested schema)
            profile_id: (String)
            regex: (String)
            secret: (Boolean)
            type: (String)
            updated_at: (String)
            validation: (String)
            word_list: (String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_dlp_entry.example '<account_id>/<entry_id>'
    cloudflare_zero_trust_dlp_predefined_profile:
        subCategory: ""
        name: cloudflare_zero_trust_dlp_predefined_profile
        title: cloudflare_zero_trust_dlp_predefined_profile Resource - Cloudflare
        examples:
            - name: example_zero_trust_dlp_predefined_profile
              manifest: |-
                {
                  "account_id": "account_id",
                  "ai_context_enabled": true,
                  "allowed_match_count": 0,
                  "confidence_threshold": "confidence_threshold",
                  "context_awareness": {
                    "enabled": true,
                    "skip": {
                      "files": true
                    }
                  },
                  "entries": [
                    {
                      "enabled": true,
                      "id": "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"
                    }
                  ],
                  "ocr_enabled": true,
                  "profile_id": "182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e"
                }
        argumentDocs:
            account_id: (String)
            ai_context_enabled: (Boolean)
            allowed_match_count: (Number)
            confidence_threshold: (String)
            context_awareness: (Attributes) Scan the context of predefined entries to only return matches surrounded by keywords. (see below for nested schema)
            created_at: (String) When the profile was created
            description: (String) The description of the profile
            enabled: (Boolean)
            entries: (Attributes List) (see below for nested schema)
            files: (Boolean) If the content type is a file, skip context analysis and return all matches.
            id: (String) The ID of this resource.
            name: (String) The name of the profile
            ocr_enabled: (Boolean)
            open_access: (Boolean) Whether this profile can be accessed by anyone
            profile_id: (String)
            skip: (Attributes) Content types to exclude from context analysis and return all matches. (see below for nested schema)
            type: (String)
            updated_at: (String) When the profile was lasted updated
        importStatements:
            - $ terraform import cloudflare_zero_trust_dlp_predefined_profile.example '<account_id>/<profile_id>'
    cloudflare_zero_trust_dns_location:
        subCategory: ""
        name: cloudflare_zero_trust_dns_location
        title: cloudflare_zero_trust_dns_location Resource - Cloudflare
        examples:
            - name: example_zero_trust_dns_location
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "client_default": false,
                  "dns_destination_ips_id": "0e4a32c6-6fb8-4858-9296-98f51631e8e6",
                  "ecs_support": false,
                  "endpoints": {
                    "doh": {
                      "enabled": true,
                      "networks": [
                        {
                          "network": "2001:85a3::/64"
                        }
                      ],
                      "require_token": true
                    },
                    "dot": {
                      "enabled": true,
                      "networks": [
                        {
                          "network": "2001:85a3::/64"
                        }
                      ]
                    },
                    "ipv4": {
                      "enabled": true
                    },
                    "ipv6": {
                      "enabled": true,
                      "networks": [
                        {
                          "network": "2001:85a3::/64"
                        }
                      ]
                    }
                  },
                  "name": "Austin Office Location",
                  "networks": [
                    {
                      "network": "192.0.2.1/32"
                    }
                  ]
                }
        argumentDocs:
            account_id: (String)
            client_default: (Boolean) True if the location is the default location.
            created_at: (String)
            dns_destination_ips_id: (String) The identifier of the pair of IPv4 addresses assigned to this location. When creating a location, if this field is absent or set with null, the pair of shared IPv4 addresses (0e4a32c6-6fb8-4858-9296-98f51631e8e6) is auto-assigned. When updating a location, if the field is absent or set with null, the pre-assigned pair remains unchanged.
            dns_destination_ipv6_block_id: (String) The uuid identifier of the IPv6 block brought to the gateway, so that this location's IPv6 address is allocated from the Bring Your Own Ipv6(BYOIPv6) block and not from the standard CloudFlare IPv6 block.
            doh: (Attributes) (see below for nested schema)
            doh_subdomain: (String) The DNS over HTTPS domain to send DNS requests to. This field is auto-generated by Gateway.
            dot: (Attributes) (see below for nested schema)
            ecs_support: (Boolean) True if the location needs to resolve EDNS queries.
            enabled: (Boolean) True if the endpoint is enabled for this location.
            endpoints: (Attributes) The destination endpoints configured for this location. When updating a location, if this field is absent or set with null, the endpoints configuration remains unchanged. (see below for nested schema)
            id: (String) The ID of this resource.
            ip: (String) IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. This field is auto-generated by Gateway.
            ipv4: (Attributes) (see below for nested schema)
            ipv4_destination: (String) The primary destination IPv4 address from the pair identified by the dns_destination_ips_id. This field is read-only.
            ipv4_destination_backup: (String) The backup destination IPv4 address from the pair identified by the dns_destination_ips_id. This field is read-only.
            ipv6: (Attributes) (see below for nested schema)
            name: (String) The name of the location.
            network: (String) The IP address or IP CIDR.
            networks: (Attributes List) A list of network ranges that requests from this location would originate from. A non-empty list is only effective if the ipv4 endpoint is enabled for this location. (see below for nested schema)
            require_token: (Boolean) True if the endpoint requires user identity authentication.
            updated_at: (String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_dns_location.example '<account_id>/<location_id>'
    cloudflare_zero_trust_gateway_certificate:
        subCategory: ""
        name: cloudflare_zero_trust_gateway_certificate
        title: cloudflare_zero_trust_gateway_certificate Resource - Cloudflare
        examples:
            - name: example_zero_trust_gateway_certificate
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "validity_period_days": 1826
                }
        argumentDocs:
            account_id: (String)
            binding_status: (String) The deployment status of the certificate on Cloudflare's edge. Certificates in the 'available' (previously called 'active') state may be used for Gateway TLS interception.
            certificate: (String) The CA certificate
            created_at: (String)
            expires_on: (String)
            fingerprint: (String) The SHA256 fingerprint of the certificate.
            id: (String) Certificate UUID tag.
            in_use: (Boolean) Use this certificate for Gateway TLS interception
            issuer_org: (String) The organization that issued the certificate.
            issuer_raw: (String) The entire issuer field of the certificate.
            type: (String) The type of certificate, either BYO-PKI (custom) or Gateway-managed.
            updated_at: (String)
            uploaded_on: (String)
            validity_period_days: (Number) Number of days the generated certificate will be valid, minimum 1 day and maximum 30 years. Defaults to 5 years.
        importStatements:
            - $ terraform import cloudflare_zero_trust_gateway_certificate.example '<account_id>/<certificate_id>'
    cloudflare_zero_trust_gateway_logging:
        subCategory: ""
        name: cloudflare_zero_trust_gateway_logging
        title: cloudflare_zero_trust_gateway_logging Resource - Cloudflare
        examples:
            - name: example_zero_trust_gateway_logging
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "redact_pii": true,
                  "settings_by_rule_type": {
                    "dns": {},
                    "http": {},
                    "l4": {}
                  }
                }
        argumentDocs:
            account_id: (String)
            dns: (String) Logging settings for DNS firewall.
            http: (String) Logging settings for HTTP/HTTPS firewall.
            l4: (String) Logging settings for Network firewall.
            redact_pii: '(Boolean) Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent).'
            settings_by_rule_type: (Attributes) Logging settings by rule type. (see below for nested schema)
        importStatements: []
    cloudflare_zero_trust_gateway_policy:
        subCategory: ""
        name: cloudflare_zero_trust_gateway_policy
        title: cloudflare_zero_trust_gateway_policy Resource - Cloudflare
        examples:
            - name: example_zero_trust_gateway_policy
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "action": "on",
                  "description": "Block bad websites based on their host name.",
                  "device_posture": "any(device_posture.checks.passed[*] in {\"1308749e-fcfb-4ebc-b051-fe022b632644\"})",
                  "enabled": true,
                  "expiration": {
                    "duration": 10,
                    "expired": false,
                    "expires_at": "2014-01-01T05:20:20Z"
                  },
                  "filters": [
                    "http"
                  ],
                  "identity": "any(identity.groups.name[*] in {\"finance\"})",
                  "name": "block bad websites",
                  "precedence": 0,
                  "rule_settings": {
                    "add_headers": {
                      "foo": "string"
                    },
                    "allow_child_bypass": false,
                    "audit_ssh": {
                      "command_logging": false
                    },
                    "biso_admin_controls": {
                      "copy": "enabled",
                      "dcp": false,
                      "dd": false,
                      "dk": false,
                      "download": "enabled",
                      "dp": false,
                      "du": false,
                      "keyboard": "enabled",
                      "paste": "enabled",
                      "printing": "enabled",
                      "upload": "enabled",
                      "version": "v1"
                    },
                    "block_page_enabled": true,
                    "block_reason": "This website is a security risk",
                    "bypass_parent_rule": false,
                    "check_session": {
                      "duration": "300s",
                      "enforce": true
                    },
                    "dns_resolvers": {
                      "ipv4": [
                        {
                          "ip": "2.2.2.2",
                          "port": 5053,
                          "route_through_private_network": true,
                          "vnet_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
                        }
                      ],
                      "ipv6": [
                        {
                          "ip": "2001:DB8::",
                          "port": 5053,
                          "route_through_private_network": true,
                          "vnet_id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
                        }
                      ]
                    },
                    "egress": {
                      "ipv4": "192.0.2.2",
                      "ipv4_fallback": "192.0.2.3",
                      "ipv6": "2001:DB8::/64"
                    },
                    "ignore_cname_category_matches": true,
                    "insecure_disable_dnssec_validation": false,
                    "ip_categories": true,
                    "ip_indicator_feeds": true,
                    "l4override": {
                      "ip": "1.1.1.1",
                      "port": 0
                    },
                    "notification_settings": {
                      "enabled": true,
                      "msg": "msg",
                      "support_url": "support_url"
                    },
                    "override_host": "example.com",
                    "override_ips": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ],
                    "payload_log": {
                      "enabled": true
                    },
                    "quarantine": {
                      "file_types": [
                        "exe"
                      ]
                    },
                    "resolve_dns_internally": {
                      "fallback": "none",
                      "view_id": "view_id"
                    },
                    "resolve_dns_through_cloudflare": true,
                    "untrusted_cert": {
                      "action": "pass_through"
                    }
                  },
                  "schedule": {
                    "fri": "08:00-12:30,13:30-17:00",
                    "mon": "08:00-12:30,13:30-17:00",
                    "sat": "08:00-12:30,13:30-17:00",
                    "sun": "08:00-12:30,13:30-17:00",
                    "thu": "08:00-12:30,13:30-17:00",
                    "time_zone": "America/New York",
                    "tue": "08:00-12:30,13:30-17:00",
                    "wed": "08:00-12:30,13:30-17:00"
                  },
                  "traffic": "http.request.uri matches \".*a/partial/uri.*\" and http.request.host in $01302951-49f9-47c9-a400-0297e60b6a10"
                }
        argumentDocs:
            account_id: (String)
            action: (String) The action to preform when the associated traffic, identity, and device posture expressions are either absent or evaluate to true.
            add_headers: (Map of String) Add custom headers to allowed requests, in the form of key-value pairs. Keys are header names, pointing to an array with its header value(s).
            allow_child_bypass: (Boolean) Set by parent MSP accounts to enable their children to bypass this rule.
            audit_ssh: (Attributes) Settings for the Audit SSH action. (see below for nested schema)
            biso_admin_controls: (Attributes) Configure how browser isolation behaves. (see below for nested schema)
            block_page_enabled: (Boolean) Enable the custom block page.
            block_reason: (String) The text describing why this block occurred, displayed on the custom block page (if enabled).
            bypass_parent_rule: (Boolean) Set by children MSP accounts to bypass their parent's rules.
            check_session: (Attributes) Configure how session check behaves. (see below for nested schema)
            command_logging: (Boolean) Enable to turn on SSH command logging.
            copy: (String) Configure whether copy is enabled or not. When set with "remote_only", copying isolated content from the remote browser to the user's local clipboard is disabled. When absent, copy is enabled. Only applies when version == "v2".
            created_at: (String)
            dcp: (Boolean) Set to false to enable copy-pasting. Only applies when version == "v1".
            dd: (Boolean) Set to false to enable downloading. Only applies when version == "v1".
            deleted_at: (String) Date of deletion, if any.
            description: (String) The description of the rule.
            device_posture: (String) The wirefilter expression used for device posture check matching.
            dk: (Boolean) Set to false to enable keyboard usage. Only applies when version == "v1".
            dns_resolvers: (Attributes) Add your own custom resolvers to route queries that match the resolver policy. Cannot be used when 'resolve_dns_through_cloudflare' or 'resolve_dns_internally' are set. DNS queries will route to the address closest to their origin. Only valid when a rule's action is set to 'resolve'. (see below for nested schema)
            download: (String) Configure whether downloading enabled or not. When absent, downloading is enabled. Only applies when version == "v2".
            dp: (Boolean) Set to false to enable printing. Only applies when version == "v1".
            du: (Boolean) Set to false to enable uploading. Only applies when version == "v1".
            duration: (Number) The default duration a policy will be active in minutes. Must be set in order to use the reset_expiration endpoint on this rule.
            egress: (Attributes) Configure how Gateway Proxy traffic egresses. You can enable this setting for rules with Egress actions and filters, or omit it to indicate local egress via WARP IPs. (see below for nested schema)
            enabled: (Boolean) True if the rule is enabled.
            enforce: (Boolean) Set to true to enable session enforcement.
            expiration: |-
                (Attributes) The expiration time stamp and default duration of a DNS policy. Takes
                precedence over the policy's schedule configuration, if any.
            expired: (Boolean) Whether the policy has expired.
            expires_at: |-
                (String) The time stamp at which the policy will expire and cease to be
                applied.
            fallback: (String) The fallback behavior to apply when the internal DNS response code is different from 'NOERROR' or when the response data only contains CNAME records for 'A' or 'AAAA' queries.
            file_types: (List of String) Types of files to sandbox.
            filters: (List of String) The protocol or layer to evaluate the traffic, identity, and device posture expressions.
            fri: (String) The time intervals when the rule will be active on Fridays, in increasing order from 00:00-24:00.  If this parameter is omitted, the rule will be deactivated on Fridays.
            id: (String) The API resource UUID.
            identity: (String) The wirefilter expression used for identity matching.
            ignore_cname_category_matches: (Boolean) Set to true, to ignore the category matches at CNAME domains in a response. If unchecked, the categories in this rule will be checked against all the CNAME domain categories in a response.
            insecure_disable_dnssec_validation: (Boolean) INSECURE - disable DNSSEC validation (for Allow actions).
            ip: (String) IPv4 address of upstream resolver.
            ip_categories: (Boolean) Set to true to enable IPs in DNS resolver category blocks. By default categories only block based on domain names.
            ip_indicator_feeds: (Boolean) Set to true to include IPs in DNS resolver indicator feed blocks. By default indicator feeds only block based on domain names.
            ipv4: (Attributes List) (see below for nested schema)
            ipv4_fallback: (String) The fallback IPv4 address to be used for egress in the event of an error egressing with the primary IPv4. Can be '0.0.0.0' to indicate local egress via WARP IPs.
            ipv6: (Attributes List) (see below for nested schema)
            keyboard: (String) Configure whether keyboard usage is enabled or not. When absent, keyboard usage is enabled. Only applies when version == "v2".
            l4override: (Attributes) Send matching traffic to the supplied destination IP address and port. (see below for nested schema)
            mon: (String) The time intervals when the rule will be active on Mondays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Mondays.
            msg: (String) Customize the message shown in the notification.
            name: (String) The name of the rule.
            notification_settings: (Attributes) Configure a notification to display on the user's device when this rule is matched. (see below for nested schema)
            override_host: (String) Override matching DNS queries with a hostname.
            override_ips: (List of String) Override matching DNS queries with an IP or set of IPs.
            paste: (String) Configure whether pasting is enabled or not. When set with "remote_only", pasting content from the user's local clipboard into isolated pages is disabled. When absent, paste is enabled. Only applies when version == "v2".
            payload_log: (Attributes) Configure DLP payload logging. (see below for nested schema)
            port: (Number) A port number to use for upstream resolver. Defaults to 53 if unspecified.
            precedence: (Number) Precedence sets the order of your rules. Lower values indicate higher precedence. At each processing phase, applicable rules are evaluated in ascending order of this value.
            printing: (String) Configure whether printing is enabled or not. When absent, printing is enabled. Only applies when version == "v2".
            quarantine: (Attributes) Settings that apply to quarantine rules (see below for nested schema)
            resolve_dns_internally: (Attributes) Configure to forward the query to the internal DNS service, passing the specified 'view_id' as input. Cannot be set when 'dns_resolvers' are specified or 'resolve_dns_through_cloudflare' is set. Only valid when a rule's action is set to 'resolve'. (see below for nested schema)
            resolve_dns_through_cloudflare: (Boolean) Enable to send queries that match the policy to Cloudflare's default 1.1.1.1 DNS resolver. Cannot be set when 'dns_resolvers' are specified or 'resolve_dns_internally' is set. Only valid when a rule's action is set to 'resolve'.
            route_through_private_network: (Boolean) Whether to connect to this resolver over a private network. Must be set when vnet_id is set.
            rule_settings: (Attributes) Additional settings that modify the rule's action. (see below for nested schema)
            sat: (String) The time intervals when the rule will be active on Saturdays, in increasing order from 00:00-24:00.  If this parameter is omitted, the rule will be deactivated on Saturdays.
            schedule: (Attributes) The schedule for activating DNS policies. This does not apply to HTTP or network policies. (see below for nested schema)
            sun: (String) The time intervals when the rule will be active on Sundays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Sundays.
            support_url: (String) Optional URL to direct users to additional information. If not set, the notification will open a block page.
            thu: (String) The time intervals when the rule will be active on Thursdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Thursdays.
            time_zone: (String) The time zone the rule will be evaluated against. If a valid time zone city name is provided, Gateway will always use the current time at that time zone. If this parameter is omitted, then Gateway will use the time zone inferred from the user's source IP to evaluate the rule. If Gateway cannot determine the time zone from the IP, we will fall back to the time zone of the user's connected data center.
            traffic: (String) The wirefilter expression used for traffic matching.
            tue: (String) The time intervals when the rule will be active on Tuesdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Tuesdays.
            untrusted_cert: (Attributes) Configure behavior when an upstream cert is invalid or an SSL error occurs. (see below for nested schema)
            updated_at: (String)
            upload: (String) Configure whether uploading is enabled or not. When absent, uploading is enabled. Only applies when version == "v2".
            version: (Number) version number of the rule
            view_id: (String) The internal DNS view identifier that's passed to the internal DNS service.
            vnet_id: (String) Optionally specify a virtual network for this resolver. Uses default virtual network id if omitted.
            wed: (String) The time intervals when the rule will be active on Wednesdays, in increasing order from 00:00-24:00. If this parameter is omitted, the rule will be deactivated on Wednesdays.
        importStatements:
            - $ terraform import cloudflare_zero_trust_gateway_policy.example '<account_id>/<rule_id>'
    cloudflare_zero_trust_gateway_proxy_endpoint:
        subCategory: ""
        name: cloudflare_zero_trust_gateway_proxy_endpoint
        title: cloudflare_zero_trust_gateway_proxy_endpoint Resource - Cloudflare
        examples:
            - name: example_zero_trust_gateway_proxy_endpoint
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "ips": [
                    "192.0.2.1/32"
                  ],
                  "name": "Devops team"
                }
        argumentDocs:
            account_id: (String)
            created_at: (String)
            id: (String) The ID of this resource.
            ips: (List of String) A list of CIDRs to restrict ingress connections.
            name: (String) The name of the proxy endpoint.
            subdomain: (String) The subdomain to be used as the destination in the proxy client.
            updated_at: (String)
        importStatements:
            - $ terraform import cloudflare_zero_trust_gateway_proxy_endpoint.example '<account_id>/<proxy_endpoint_id>'
    cloudflare_zero_trust_gateway_settings:
        subCategory: ""
        name: cloudflare_zero_trust_gateway_settings
        title: cloudflare_zero_trust_gateway_settings Resource - Cloudflare
        examples:
            - name: example_zero_trust_gateway_settings
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "settings": {
                    "activity_log": {
                      "enabled": true
                    },
                    "antivirus": {
                      "enabled_download_phase": false,
                      "enabled_upload_phase": false,
                      "fail_closed": false,
                      "notification_settings": {
                        "enabled": true,
                        "msg": "msg",
                        "support_url": "support_url"
                      }
                    },
                    "block_page": {
                      "background_color": "background_color",
                      "enabled": true,
                      "footer_text": "--footer--",
                      "header_text": "--header--",
                      "logo_path": "https://logos.com/a.png",
                      "mailto_address": "admin@example.com",
                      "mailto_subject": "Blocked User Inquiry",
                      "name": "Cloudflare",
                      "suppress_footer": false
                    },
                    "body_scanning": {
                      "inspection_mode": "deep"
                    },
                    "browser_isolation": {
                      "non_identity_enabled": true,
                      "url_browser_isolation_enabled": true
                    },
                    "certificate": {
                      "id": "d1b364c5-1311-466e-a194-f0e943e0799f"
                    },
                    "custom_certificate": {
                      "enabled": true,
                      "id": "d1b364c5-1311-466e-a194-f0e943e0799f"
                    },
                    "extended_email_matching": {
                      "enabled": true
                    },
                    "fips": {
                      "tls": true
                    },
                    "protocol_detection": {
                      "enabled": true
                    },
                    "sandbox": {
                      "enabled": true,
                      "fallback_action": "allow"
                    },
                    "tls_decrypt": {
                      "enabled": true
                    }
                  }
                }
        argumentDocs:
            account_id: (String)
            activity_log: (Attributes) Activity log settings. (see below for nested schema)
            antivirus: (Attributes) Anti-virus settings. (see below for nested schema)
            background_color: '(String) Block page background color in #rrggbb format.'
            binding_status: (String) Certificate status (internal).
            block_page: (Attributes) Block page layout settings. (see below for nested schema)
            body_scanning: (Attributes) DLP body scanning settings. (see below for nested schema)
            browser_isolation: (Attributes) Browser isolation settings. (see below for nested schema)
            certificate: (Attributes) Certificate settings for Gateway TLS interception. If not specified, the Cloudflare Root CA will be used. (see below for nested schema)
            created_at: (String)
            custom_certificate: (Attributes) Custom certificate settings for BYO-PKI. (deprecated and replaced by certificate) (see below for nested schema)
            enabled: (Boolean) Enable activity logging.
            enabled_download_phase: (Boolean) Enable anti-virus scanning on downloads.
            enabled_upload_phase: (Boolean) Enable anti-virus scanning on uploads.
            extended_email_matching: (Attributes) Extended e-mail matching settings. (see below for nested schema)
            fail_closed: (Boolean) Block requests for files that cannot be scanned.
            fallback_action: (String) Action to take when the file cannot be scanned.
            fips: (Attributes) FIPS settings. (see below for nested schema)
            footer_text: (String) Block page footer text.
            header_text: (String) Block page header text.
            id: (String) The ID of this resource.
            inspection_mode: (String) Set the inspection mode to either deep or shallow.
            logo_path: (String) Full URL to the logo file.
            mailto_address: (String) Admin email for users to contact.
            mailto_subject: (String) Subject line for emails created from block page.
            msg: (String) Customize the message shown in the notification.
            name: (String) Block page title.
            non_identity_enabled: (Boolean) Enable non-identity onramp support for Browser Isolation.
            notification_settings: (Attributes) Configure a message to display on the user's device when an antivirus search is performed. (see below for nested schema)
            protocol_detection: (Attributes) Protocol Detection settings. (see below for nested schema)
            sandbox: (Attributes) Sandbox settings. (see below for nested schema)
            settings: (Attributes) Account settings (see below for nested schema)
            support_url: (String) Optional URL to direct users to additional information. If not set, the notification will open a block page.
            suppress_footer: (Boolean) Suppress detailed info at the bottom of the block page.
            tls: (Boolean) Enable only cipher suites and TLS versions compliant with FIPS 140-2.
            tls_decrypt: (Attributes) TLS interception settings. (see below for nested schema)
            updated_at: (String)
            url_browser_isolation_enabled: (Boolean) Enable Clientless Browser Isolation.
        importStatements:
            - $ terraform import cloudflare_zero_trust_gateway_settings.example '<account_id>'
    cloudflare_zero_trust_list:
        subCategory: ""
        name: cloudflare_zero_trust_list
        title: cloudflare_zero_trust_list Resource - Cloudflare
        examples:
            - name: example_zero_trust_list
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "description": "The serial numbers for administrators",
                  "items": [
                    {
                      "description": "Austin office IP",
                      "value": "8GE8721REF"
                    }
                  ],
                  "name": "Admin Serial Numbers",
                  "type": "SERIAL"
                }
        argumentDocs:
            account_id: (String)
            created_at: (String)
            description: (String) The description of the list.
            id: (String) API Resource UUID tag.
            items: (Attributes List) The items in the list. (see below for nested schema)
            list_count: (Number) The number of items in the list.
            name: (String) The name of the list.
            type: (String) The type of list.
            updated_at: (String)
            value: (String) The value of the item in a list.
        importStatements:
            - $ terraform import cloudflare_zero_trust_list.example '<account_id>/<list_id>'
    cloudflare_zero_trust_organization:
        subCategory: ""
        name: cloudflare_zero_trust_organization
        title: cloudflare_zero_trust_organization Resource - Cloudflare
        examples:
            - name: example_zero_trust_organization
              manifest: |-
                {
                  "allow_authenticate_via_warp": true,
                  "auth_domain": "test.cloudflareaccess.com",
                  "auto_redirect_to_identity": true,
                  "custom_pages": {
                    "forbidden": "699d98642c564d2e855e9661899b7252",
                    "identity_denied": "699d98642c564d2e855e9661899b7252"
                  },
                  "is_ui_read_only": true,
                  "login_design": {
                    "background_color": "#c5ed1b",
                    "footer_text": "This is an example description.",
                    "header_text": "This is an example description.",
                    "logo_path": "https://example.com/logo.png",
                    "text_color": "#c5ed1b"
                  },
                  "name": "Widget Corps Internal Applications",
                  "session_duration": "24h",
                  "ui_read_only_toggle_reason": "Temporarily turn off the UI read only lock to make a change via the UI",
                  "user_seat_expiration_inactive_time": "730h",
                  "warp_auth_session_duration": "24h",
                  "zone_id": "zone_id"
                }
        argumentDocs:
            account_id: (String) The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
            allow_authenticate_via_warp: (Boolean) When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
            auth_domain: (String) The unique subdomain assigned to your Zero Trust organization.
            auto_redirect_to_identity: (Boolean) When set to true, users skip the identity provider selection step during login.
            background_color: (String) The background color on your login page.
            created_at: (String)
            custom_pages: (Attributes) (see below for nested schema)
            footer_text: (String) The text at the bottom of your login page.
            forbidden: (String) The uid of the custom page to use when a user is denied access after failing a non-identity rule.
            header_text: (String) The text at the top of your login page.
            identity_denied: (String) The uid of the custom page to use when a user is denied access.
            is_ui_read_only: (Boolean) Lock all settings as Read-Only in the Dashboard, regardless of user permission. Updates may only be made via the API or Terraform for this account when enabled.
            login_design: (Attributes) (see below for nested schema)
            logo_path: (String) The URL of the logo on your login page.
            name: (String) The name of your Zero Trust organization.
            session_duration: '(String) The amount of time that tokens issued for applications will be valid. Must be in the format 300ms or 2h45m. Valid time units are: ns, us (or µs), ms, s, m, h.'
            text_color: (String) The text color on your login page.
            ui_read_only_toggle_reason: (String) A description of the reason why the UI read only field is being toggled.
            updated_at: (String)
            user_seat_expiration_inactive_time: '(String) The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format 300ms or 2h45m. Valid time units are: ns, us (or µs), ms, s, m, h.'
            warp_auth_session_duration: '(String) The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.'
            zone_id: (String) The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
        importStatements: []
    cloudflare_zero_trust_risk_behavior:
        subCategory: ""
        name: cloudflare_zero_trust_risk_behavior
        title: cloudflare_zero_trust_risk_behavior Resource - Cloudflare
        examples:
            - name: example_zero_trust_risk_behavior
              manifest: |-
                {
                  "account_id": "account_id",
                  "behaviors": {
                    "foo": {
                      "enabled": true,
                      "risk_level": "low"
                    }
                  }
                }
        argumentDocs:
            account_id: (String)
            behaviors: (Attributes Map) (see below for nested schema)
            enabled: (Boolean)
            risk_level: (String)
        importStatements: []
    cloudflare_zero_trust_risk_scoring_integration:
        subCategory: ""
        name: cloudflare_zero_trust_risk_scoring_integration
        title: cloudflare_zero_trust_risk_scoring_integration Resource - Cloudflare
        examples:
            - name: example_zero_trust_risk_scoring_integration
              manifest: |-
                {
                  "account_id": "account_id",
                  "integration_type": "Okta",
                  "reference_id": "reference_id",
                  "tenant_url": "https://example.com"
                }
        argumentDocs:
            account_id: (String)
            account_tag: (String) The Cloudflare account tag.
            active: (Boolean) Whether this integration is enabled. If disabled, no risk changes will be exported to the third-party.
            created_at: (String) When the integration was created in RFC3339 format.
            id: (String) The id of the integration, a UUIDv4.
            integration_type: (String)
            reference_id: |-
                (String) A reference id that can be supplied by the client. Currently this should be set to the Access-Okta IDP ID (a UUIDv4).
                https://developers.cloudflare.com/api/operations/access-identity-providers-get-an-access-identity-provider
            tenant_url: (String) The base url of the tenant, e.g. "https://tenant.okta.com"
            well_known_url: (String) The URL for the Shared Signals Framework configuration, e.g. "/.well-known/sse-configuration/{integration_uuid}/". https://openid.net/specs/openid-sse-framework-1_0.html#rfc.section.6.2.1
        importStatements:
            - $ terraform import cloudflare_zero_trust_risk_scoring_integration.example '<account_id>/<integration_id>'
    cloudflare_zero_trust_tunnel_cloudflared:
        subCategory: ""
        name: cloudflare_zero_trust_tunnel_cloudflared
        title: cloudflare_zero_trust_tunnel_cloudflared Resource - Cloudflare
        examples:
            - name: example_zero_trust_tunnel_cloudflared
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "config_src": "local",
                  "name": "blog",
                  "tunnel_secret": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
                }
        argumentDocs:
            account_id: (String) Cloudflare account ID
            account_tag: (String) Cloudflare account ID
            client_id: (String) UUID of the Cloudflare Tunnel connector.
            client_version: (String) The cloudflared version used to establish this connection.
            colo_name: (String) The Cloudflare data center used for this connection.
            config_src: (String) Indicates if this is a locally or remotely configured tunnel. If local, manage the tunnel using a YAML file on the origin machine. If cloudflare, manage the tunnel on the Zero Trust dashboard.
            connections: (Attributes List) The Cloudflare Tunnel connections between your origin and Cloudflare's edge. (see below for nested schema)
            conns_active_at: (String) Timestamp of when the tunnel established at least one connection to Cloudflare's edge. If null, the tunnel is inactive.
            conns_inactive_at: (String) Timestamp of when the tunnel became inactive (no connections to Cloudflare's edge). If null, the tunnel is active.
            created_at: (String) Timestamp of when the resource was created.
            deleted_at: (String) Timestamp of when the resource was deleted. If null, the resource has not been deleted.
            id: (String) UUID of the tunnel.
            is_pending_reconnect: (Boolean) Cloudflare continues to track connections for several minutes after they disconnect. This is an optimization to improve latency and reliability of reconnecting.  If true, the connection has disconnected but is still being tracked. If false, the connection is actively serving traffic.
            metadata: (String) Metadata associated with the tunnel.
            name: (String) A user-friendly name for a tunnel.
            opened_at: (String) Timestamp of when the connection was established.
            origin_ip: (String) The public IP address of the host running cloudflared.
            remote_config: (Boolean) If true, the tunnel can be configured remotely from the Zero Trust dashboard. If false, the tunnel must be configured locally on the origin machine.
            status: (String) The status of the tunnel. Valid values are inactive (tunnel has never been run), degraded (tunnel is active and able to serve traffic but in an unhealthy state), healthy (tunnel is active and able to serve traffic), or down (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).
            tun_type: (String) The type of tunnel.
            tunnel_secret: (String) Sets the password required to run a locally-managed tunnel. Must be at least 32 bytes and encoded as a base64 string.
            uuid: (String) UUID of the Cloudflare Tunnel connection.
        importStatements:
            - $ terraform import cloudflare_zero_trust_tunnel_cloudflared.example '<account_id>/<tunnel_id>'
    cloudflare_zero_trust_tunnel_cloudflared_config:
        subCategory: ""
        name: cloudflare_zero_trust_tunnel_cloudflared_config
        title: cloudflare_zero_trust_tunnel_cloudflared_config Resource - Cloudflare
        examples:
            - name: example_zero_trust_tunnel_cloudflared_config
              manifest: |-
                {
                  "account_id": "023e105f4ecef8ad9ca31a8372d0c353",
                  "config": {
                    "ingress": [
                      {
                        "hostname": "tunnel.example.com",
                        "origin_request": {
                          "access": {
                            "aud_tag": [
                              "string"
                            ],
                            "required": true,
                            "team_name": "teamName"
                          },
                          "ca_pool": "caPool",
                          "connect_timeout": 0,
                          "disable_chunked_encoding": true,
                          "http2_origin": true,
                          "http_host_header": "httpHostHeader",
                          "keep_alive_connections": 0,
                          "keep_alive_timeout": 0,
                          "no_happy_eyeballs": true,
                          "no_tls_verify": true,
                          "origin_server_name": "originServerName",
                          "proxy_type": "proxyType",
                          "tcp_keep_alive": 0,
                          "tls_timeout": 0
                        },
                        "path": "subpath",
                        "service": "https://localhost:8001"
                      }
                    ],
                    "origin_request": {
                      "access": {
                        "aud_tag": [
                          "string"
                        ],
                        "required": true,
                        "team_name": "teamName"
                      },
                      "ca_pool": "caPool",
                      "connect_timeout": 0,
                      "disable_chunked_encoding": true,
                      "http2_origin": true,
                      "http_host_header": "httpHostHeader",
                      "keep_alive_connections": 0,
                      "keep_alive_timeout": 0,
                      "no_happy_eyeballs": true,
                      "no_tls_verify": true,
                      "origin_server_name": "originServerName",
                      "proxy_type": "proxyType",
                      "tcp_keep_alive": 0,
                      "tls_timeout": 0
                    }
                  },
                  "tunnel_id": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415"
                }
        argumentDocs:
            access: (Attributes) For all L7 requests to this hostname, cloudflared will validate each request's Cf-Access-Jwt-Assertion request header. (see below for nested schema)
            account_id: (String) Identifier
            aud_tag: (List of String) Access applications that are allowed to reach this hostname for this Tunnel. Audience tags can be identified in the dashboard or via the List Access policies API.
            ca_pool: (String) Path to the certificate authority (CA) for the certificate of your origin. This option should be used only if your certificate is not signed by Cloudflare.
            config: (Attributes) The tunnel configuration and ingress rules. (see below for nested schema)
            connect_timeout: (Number) Timeout for establishing a new TCP connection to your origin server. This excludes the time taken to establish TLS, which is controlled by tlsTimeout.
            created_at: (String)
            disable_chunked_encoding: (Boolean) Disables chunked transfer encoding. Useful if you are running a WSGI server.
            enabled: (Boolean)
            hostname: (String) Public hostname for this service.
            http_host_header: (String) Sets the HTTP Host header on requests sent to the local service.
            http2_origin: (Boolean) Attempt to connect to origin using HTTP2. Origin must be configured as https.
            id: (String) UUID of the tunnel.
            ingress: (Attributes List) List of public hostname definitions. At least one ingress rule needs to be defined for the tunnel. (see below for nested schema)
            keep_alive_connections: (Number) Maximum number of idle keepalive connections between Tunnel and your origin. This does not restrict the total number of concurrent connections.
            keep_alive_timeout: (Number) Timeout after which an idle keepalive connection can be discarded.
            no_happy_eyeballs: (Boolean) Disable the “happy eyeballs” algorithm for IPv4/IPv6 fallback if your local network has misconfigured one of the protocols.
            no_tls_verify: (Boolean) Disables TLS verification of the certificate presented by your origin. Will allow any certificate from the origin to be accepted.
            origin_request: (Attributes) Configuration parameters for the public hostname specific connection settings between cloudflared and origin server. (see below for nested schema)
            origin_server_name: (String) Hostname that cloudflared should expect from your origin server certificate.
            path: (String) Requests with this path route to this public hostname.
            proxy_type: '(String) cloudflared starts a proxy server to translate HTTP traffic into TCP when proxying, for example, SSH or RDP. This configures what type of proxy will be started. Valid options are: "" for the regular proxy and "socks" for a SOCKS5 proxy.'
            required: (Boolean) Deny traffic that has not fulfilled Access authorization.
            service: '(String) Protocol and address of destination server. Supported protocols: http://, https://, unix://, tcp://, ssh://, rdp://, unix+tls://, smb://. Alternatively can return a HTTP status code http_status:[code] e.g. ''http_status:404''.'
            source: (String) Indicates if this is a locally or remotely configured tunnel. If local, manage the tunnel using a YAML file on the origin machine. If cloudflare, manage the tunnel's configuration on the Zero Trust dashboard.
            tcp_keep_alive: (Number) The timeout after which a TCP keepalive packet is sent on a connection between Tunnel and the origin server.
            team_name: (String)
            tls_timeout: (Number) Timeout for completing a TLS handshake to your origin server, if you have chosen to connect Tunnel to an HTTPS server.
            tunnel_id: (String) UUID of the tunnel.
            version: (Number) The version of the Tunnel Configuration.
            warp_routing: (Attributes) Enable private network access from WARP users to private network routes. This is enabled if the tunnel has an assigned route. (see below for nested schema)
        importStatements:
            - $ terraform import cloudflare_zero_trust_tunnel_cloudflared_config.example '<account_id>/<tunnel_id>'
    cloudflare_zero_trust_tunnel_cloudflared_route:
        subCategory: ""
        name: cloudflare_zero_trust_tunnel_cloudflared_route
        title: cloudflare_zero_trust_tunnel_cloudflared_route Resource - Cloudflare
        examples:
            - name: example_zero_trust_tunnel_cloudflared_route
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "comment": "Example comment for this route.",
                  "network": "172.16.0.0/16",
                  "tunnel_id": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
                  "virtual_network_id": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415"
                }
        argumentDocs:
            account_id: (String) Cloudflare account ID
            comment: (String) Optional remark describing the route.
            created_at: (String) Timestamp of when the resource was created.
            deleted_at: (String) Timestamp of when the resource was deleted. If null, the resource has not been deleted.
            id: (String) UUID of the route.
            network: (String) The private IPv4 or IPv6 range connected by the route, in CIDR notation.
            tunnel_id: (String) UUID of the tunnel.
            virtual_network_id: (String) UUID of the virtual network.
        importStatements:
            - $ terraform import cloudflare_zero_trust_tunnel_cloudflared_route.example '<account_id>/<route_id>'
    cloudflare_zero_trust_tunnel_cloudflared_virtual_network:
        subCategory: ""
        name: cloudflare_zero_trust_tunnel_cloudflared_virtual_network
        title: cloudflare_zero_trust_tunnel_cloudflared_virtual_network Resource - Cloudflare
        examples:
            - name: example_zero_trust_tunnel_cloudflared_virtual_network
              manifest: |-
                {
                  "account_id": "699d98642c564d2e855e9661899b7252",
                  "comment": "Staging VPC for data science",
                  "is_default": true,
                  "name": "us-east-1-vpc"
                }
        argumentDocs:
            account_id: (String) Cloudflare account ID
            comment: (String) Optional remark describing the virtual network.
            created_at: (String) Timestamp of when the resource was created.
            deleted_at: (String) Timestamp of when the resource was deleted. If null, the resource has not been deleted.
            id: (String) UUID of the virtual network.
            is_default: (Boolean) If true, this virtual network is the default for the account.
            is_default_network: (Boolean) If true, this virtual network is the default for the account.
            name: (String) A user-friendly name for the virtual network.
        importStatements:
            - $ terraform import cloudflare_zero_trust_tunnel_cloudflared_virtual_network.example '<account_id>/<virtual_network_id>'
    cloudflare_zone:
        subCategory: ""
        name: cloudflare_zone
        title: cloudflare_zone Resource - Cloudflare
        examples:
            - name: example_zone
              manifest: |-
                {
                  "account": {
                    "id": "023e105f4ecef8ad9ca31a8372d0c353"
                  },
                  "name": "example.com",
                  "type": "full"
                }
        argumentDocs:
            account: (Attributes) (see below for nested schema)
            activated_on: |-
                (String) The last time proof of ownership was detected and the zone was made
                active
            cdn_only: (Boolean) The zone is only configured for CDN
            created_on: (String) When the zone was created
            custom_certificate_quota: (Number) Number of Custom Certificates the zone can have
            development_mode: |-
                (Number) The interval (in seconds) from when development mode expires
                (positive integer) or last expired (negative integer) for the
                domain. If development mode has never been enabled, this value is 0.
            dns_only: (Boolean) The zone is only configured for DNS
            foundation_dns: (Boolean) The zone is setup with Foundation DNS
            id: (String) Identifier
            meta: (Attributes) Metadata about the zone (see below for nested schema)
            modified_on: (String) When the zone was last modified
            name: (String) The domain name
            name_servers: (List of String) The name servers Cloudflare assigns to a zone
            original_dnshost: (String) DNS host at the time of switching to Cloudflare
            original_name_servers: (List of String) Original name servers before moving to Cloudflare
            original_registrar: (String) Registrar for the domain at the time of switching to Cloudflare
            owner: (Attributes) The owner of the zone (see below for nested schema)
            page_rule_quota: (Number) Number of Page Rules a zone can have
            paused: |-
                (Boolean) Indicates whether the zone is only using Cloudflare DNS services. A
                true value means the zone will not receive security or performance
                benefits.
            phishing_detected: (Boolean) The zone has been flagged for phishing
            status: (String) The zone status on Cloudflare.
            step: (Number)
            type: |-
                (String) A full zone implies that DNS is hosted with Cloudflare. A partial zone is
                typically a partner-hosted zone or a CNAME setup.
            vanity_name_servers: |-
                (List of String) An array of domains used for custom name servers. This is only
                available for Business and Enterprise plans.
            verification_key: (String) Verification key for partial zone setup.
        importStatements:
            - $ terraform import cloudflare_zone.example '<zone_id>'
    cloudflare_zone_cache_reserve:
        subCategory: ""
        name: cloudflare_zone_cache_reserve
        title: cloudflare_zone_cache_reserve Resource - Cloudflare
        examples:
            - name: example_zone_cache_reserve
              manifest: |-
                {
                  "value": "on",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            editable: (Boolean) Whether the setting is editable
            id: (String) Identifier
            modified_on: (String) Last time this setting was modified.
            value: (String) Value of the Cache Reserve zone setting.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_zone_cache_reserve.example '<zone_id>'
    cloudflare_zone_cache_variants:
        subCategory: ""
        name: cloudflare_zone_cache_variants
        title: cloudflare_zone_cache_variants Resource - Cloudflare
        examples:
            - name: example_zone_cache_variants
              manifest: |-
                {
                  "value": {
                    "avif": [
                      "image/webp",
                      "image/jpeg"
                    ],
                    "bmp": [
                      "image/webp",
                      "image/jpeg"
                    ],
                    "gif": [
                      "image/webp",
                      "image/jpeg"
                    ],
                    "jp2": [
                      "image/webp",
                      "image/avif"
                    ],
                    "jpeg": [
                      "image/webp",
                      "image/avif"
                    ],
                    "jpg": [
                      "image/webp",
                      "image/avif"
                    ],
                    "jpg2": [
                      "image/webp",
                      "image/avif"
                    ],
                    "png": [
                      "image/webp",
                      "image/avif"
                    ],
                    "tif": [
                      "image/webp",
                      "image/avif"
                    ],
                    "tiff": [
                      "image/webp",
                      "image/avif"
                    ],
                    "webp": [
                      "image/jpeg",
                      "image/avif"
                    ]
                  },
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            avif: (List of String) List of strings with the MIME types of all the variants that should be served for avif.
            bmp: (List of String) List of strings with the MIME types of all the variants that should be served for bmp.
            editable: (Boolean) Whether the setting is editable
            gif: (List of String) List of strings with the MIME types of all the variants that should be served for gif.
            id: (String) Identifier
            jp2: (List of String) List of strings with the MIME types of all the variants that should be served for jp2.
            jpeg: (List of String) List of strings with the MIME types of all the variants that should be served for jpeg.
            jpg: (List of String) List of strings with the MIME types of all the variants that should be served for jpg.
            jpg2: (List of String) List of strings with the MIME types of all the variants that should be served for jpg2.
            modified_on: (String) Last time this setting was modified.
            png: (List of String) List of strings with the MIME types of all the variants that should be served for png.
            tif: (List of String) List of strings with the MIME types of all the variants that should be served for tif.
            tiff: (List of String) List of strings with the MIME types of all the variants that should be served for tiff.
            value: (Attributes) Value of the zone setting. (see below for nested schema)
            webp: (List of String) List of strings with the MIME types of all the variants that should be served for webp.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_zone_cache_variants.example '<zone_id>'
    cloudflare_zone_dnssec:
        subCategory: ""
        name: cloudflare_zone_dnssec
        title: cloudflare_zone_dnssec Resource - Cloudflare
        examples:
            - name: example_zone_dnssec
              manifest: |-
                {
                  "dnssec_multi_signer": false,
                  "dnssec_presigned": true,
                  "status": "active",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            algorithm: (String) Algorithm key code.
            digest: (String) Digest hash.
            digest_algorithm: (String) Type of digest algorithm.
            digest_type: (String) Coded type for digest algorithm.
            dnssec_multi_signer: |-
                (Boolean) If true, multi-signer DNSSEC is enabled on the zone, allowing multiple
                providers to serve a DNSSEC-signed zone at the same time.
                This is required for DNSKEY records (except those automatically
                generated by Cloudflare) to be added to the zone.
            dnssec_presigned: |-
                (Boolean) If true, allows Cloudflare to transfer in a DNSSEC-signed zone
                including signatures from an external provider, without requiring
                Cloudflare to sign any records on the fly.
            ds: (String) Full DS record.
            flags: (Number) Flag for DNSSEC record.
            id: (String) Identifier
            key_tag: (Number) Code for key tag.
            key_type: (String) Algorithm key type.
            modified_on: (String) When DNSSEC was last modified.
            public_key: (String) Public key for DS record.
            status: (String) Status of DNSSEC, based on user-desired state and presence of necessary records.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_zone_dnssec.example '<zone_id>'
    cloudflare_zone_hold:
        subCategory: ""
        name: cloudflare_zone_hold
        title: cloudflare_zone_hold Resource - Cloudflare
        examples:
            - name: example_zone_hold
              manifest: |-
                {
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            hold: (Boolean)
            hold_after: |-
                (String) If hold_after is provided and future-dated, the hold will be temporarily disabled,
                then automatically re-enabled by the system at the time specified
                in this RFC3339-formatted timestamp. A past-dated hold_after value will have
                no effect on an existing, enabled hold. Providing an empty string will set its value
                to the current time.
            id: (String) Identifier
            include_subdomains: |-
                (Boolean) If true, the zone hold will extend to block any subdomain of the given zone, as well
                as SSL4SaaS Custom Hostnames. For example, a zone hold on a zone with the hostname
                'example.com' and include_subdomains=true will block 'example.com',
                'staging.example.com', 'api.staging.example.com', etc.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_zone_hold.example '<zone_id>'
    cloudflare_zone_lockdown:
        subCategory: ""
        name: cloudflare_zone_lockdown
        title: cloudflare_zone_lockdown Resource - Cloudflare
        examples:
            - name: example_zone_lockdown
              manifest: |-
                {
                  "configurations": [
                    {
                      "target": "ip",
                      "value": "198.51.100.4"
                    }
                  ],
                  "urls": [
                    "shop.example.com/*"
                  ],
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            configurations: (Attributes List) A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of ip or ip_range configurations. (see below for nested schema)
            created_on: (String) The timestamp of when the rule was created.
            description: (String) An informative summary of the rule.
            id: (String) The unique identifier of the Zone Lockdown rule.
            modified_on: (String) The timestamp of when the rule was last modified.
            paused: (Boolean) When true, indicates that the rule is currently paused.
            target: (String) The configuration target. You must set the target to ip when specifying an IP address in the Zone Lockdown rule.
            urls: (List of String) The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.
            value: (String) The IP address to match. This address will be compared to the IP address of incoming requests.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_zone_lockdown.example '<zone_id>/<lock_downs_id>'
    cloudflare_zone_setting:
        subCategory: ""
        name: cloudflare_zone_setting
        title: cloudflare_zone_setting Resource - Cloudflare
        examples:
            - name: example_zone_setting
              manifest: |-
                {
                  "id": "0rtt",
                  "setting_id": "always_online",
                  "value": "on",
                  "zone_id": "023e105f4ecef8ad9ca31a8372d0c353"
                }
        argumentDocs:
            editable: (Boolean) Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).
            id: (String) ID of the zone setting.
            modified_on: (String) last time this setting was modified.
            setting_id: (String) Setting name
            time_remaining: |-
                (Number) Value of the zone setting.
                Notes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.
            value: (Dynamic) Current value of the zone setting.
            zone_id: (String) Identifier
        importStatements:
            - $ terraform import cloudflare_zone_setting.example '<zone_id>/<setting_id>'
    cloudflare_zone_subscription:
        subCategory: ""
        name: cloudflare_zone_subscription
        title: cloudflare_zone_subscription Resource - Cloudflare
        examples:
            - name: example_zone_subscription
              manifest: |-
                {
                  "frequency": "weekly",
                  "identifier": "506e3185e9c882d175a2d0cb0093d9f2",
                  "rate_plan": {
                    "currency": "USD",
                    "externally_managed": false,
                    "id": "free",
                    "is_contract": false,
                    "public_name": "Business Plan",
                    "scope": "zone",
                    "sets": [
                      "string"
                    ]
                  }
                }
        argumentDocs:
            currency: (String) The currency applied to the rate plan subscription.
            externally_managed: (Boolean) Whether this rate plan is managed externally from Cloudflare.
            frequency: (String) How often the subscription is renewed automatically.
            id: (String) The ID of the rate plan.
            identifier: (String) Subscription identifier tag.
            is_contract: (Boolean) Whether a rate plan is enterprise-based (or newly adopted term contract).
            public_name: (String) The full name of the rate plan.
            rate_plan: (Attributes) The rate plan applied to the subscription. (see below for nested schema)
            scope: (String) The scope that this rate plan applies to.
            sets: (List of String) The list of sets this rate plan applies to.
        importStatements: []
